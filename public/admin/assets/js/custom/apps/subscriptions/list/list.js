/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/custom/apps/subscriptions/list/list.js":
/*!*****************************************************************!*\
  !*** ./resources/src/js/custom/apps/subscriptions/list/list.js ***!
  \*****************************************************************/
/***/ (() => {

eval("\n\nvar KTSubscriptionsList = function () {\n  // Define shared variables\n  var table;\n  var datatable;\n  var toolbarBase;\n  var toolbarSelected;\n  var selectedCount;\n\n  // Private functions\n  var initDatatable = function initDatatable() {\n    // Set date data order\n    var tableRows = table.querySelectorAll('tbody tr');\n    tableRows.forEach(function (row) {\n      var dateRow = row.querySelectorAll('td');\n      var realDate = moment(dateRow[5].innerHTML, \"DD MMM YYYY, LT\").format(); // select date from 4th column in table\n      dateRow[5].setAttribute('data-order', realDate);\n    });\n\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      \"pageLength\": 10,\n      \"lengthChange\": false,\n      'columnDefs': [{\n        orderable: false,\n        targets: 0\n      },\n      // Disable ordering on column 0 (checkbox)\n      {\n        orderable: false,\n        targets: 6\n      } // Disable ordering on column 6 (actions)                \n      ]\n    });\n\n    // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n    datatable.on('draw', function () {\n      initToggleToolbar();\n      handleRowDeletion();\n      toggleToolbars();\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearch = function handleSearch() {\n    var filterSearch = document.querySelector('[data-kt-subscription-table-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Filter Datatable\n  var handleFilter = function handleFilter() {\n    // Select filter options\n    var filterForm = document.querySelector('[data-kt-subscription-table-filter=\"form\"]');\n    var filterButton = filterForm.querySelector('[data-kt-subscription-table-filter=\"filter\"]');\n    var resetButton = filterForm.querySelector('[data-kt-subscription-table-filter=\"reset\"]');\n    var selectOptions = filterForm.querySelectorAll('select');\n\n    // Filter datatable on submit\n    filterButton.addEventListener('click', function () {\n      var filterString = '';\n\n      // Get filter values\n      selectOptions.forEach(function (item, index) {\n        if (item.value && item.value !== '') {\n          if (index !== 0) {\n            filterString += ' ';\n          }\n\n          // Build filter value options\n          filterString += item.value;\n        }\n      });\n\n      // Filter datatable --- official docs reference: https://datatables.net/reference/api/search()\n      datatable.search(filterString).draw();\n    });\n\n    // Reset datatable\n    resetButton.addEventListener('click', function () {\n      // Reset filter form\n      selectOptions.forEach(function (item, index) {\n        // Reset Select2 dropdown --- official docs reference: https://select2.org/programmatic-control/add-select-clear-items\n        $(item).val(null).trigger('change');\n      });\n\n      // Filter datatable --- official docs reference: https://datatables.net/reference/api/search()\n      datatable.search('').draw();\n    });\n  };\n\n  // Delete subscirption\n  var handleRowDeletion = function handleRowDeletion() {\n    // Select all delete buttons\n    var deleteButtons = table.querySelectorAll('[data-kt-subscriptions-table-filter=\"delete_row\"]');\n    deleteButtons.forEach(function (d) {\n      // Delete button on click\n      d.addEventListener('click', function (e) {\n        e.preventDefault();\n\n        // Select parent row\n        var parent = e.target.closest('tr');\n\n        // Get customer name\n        var customerName = parent.querySelectorAll('td')[1].innerText;\n\n        // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n        Swal.fire({\n          text: \"Are you sure you want to delete \" + customerName + \"?\",\n          icon: \"warning\",\n          showCancelButton: true,\n          buttonsStyling: false,\n          confirmButtonText: \"Yes, delete!\",\n          cancelButtonText: \"No, cancel\",\n          customClass: {\n            confirmButton: \"btn fw-bold btn-danger\",\n            cancelButton: \"btn fw-bold btn-active-light-primary\"\n          }\n        }).then(function (result) {\n          if (result.value) {\n            Swal.fire({\n              text: \"You have deleted \" + customerName + \"!.\",\n              icon: \"success\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            }).then(function () {\n              // Remove current row\n              datatable.row($(parent)).remove().draw();\n            }).then(function () {\n              // Detect checked checkboxes\n              toggleToolbars();\n            });\n          } else if (result.dismiss === 'cancel') {\n            Swal.fire({\n              text: customerName + \" was not deleted.\",\n              icon: \"error\",\n              buttonsStyling: false,\n              confirmButtonText: \"Ok, got it!\",\n              customClass: {\n                confirmButton: \"btn fw-bold btn-primary\"\n              }\n            });\n          }\n        });\n      });\n    });\n  };\n\n  // Init toggle toolbar\n  var initToggleToolbar = function initToggleToolbar() {\n    // Toggle selected action toolbar\n    // Select all checkboxes\n    var checkboxes = table.querySelectorAll('[type=\"checkbox\"]');\n\n    // Select elements\n    toolbarBase = document.querySelector('[data-kt-subscription-table-toolbar=\"base\"]');\n    toolbarSelected = document.querySelector('[data-kt-subscription-table-toolbar=\"selected\"]');\n    selectedCount = document.querySelector('[data-kt-subscription-table-select=\"selected_count\"]');\n    var deleteSelected = document.querySelector('[data-kt-subscription-table-select=\"delete_selected\"]');\n\n    // Toggle delete selected toolbar\n    checkboxes.forEach(function (c) {\n      // Checkbox on click event\n      c.addEventListener('click', function () {\n        setTimeout(function () {\n          toggleToolbars();\n        }, 50);\n      });\n    });\n\n    // Deleted selected rows\n    deleteSelected.addEventListener('click', function () {\n      // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\n      Swal.fire({\n        text: \"Are you sure you want to delete selected customers?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        buttonsStyling: false,\n        confirmButtonText: \"Yes, delete!\",\n        cancelButtonText: \"No, cancel\",\n        customClass: {\n          confirmButton: \"btn fw-bold btn-danger\",\n          cancelButton: \"btn fw-bold btn-active-light-primary\"\n        }\n      }).then(function (result) {\n        if (result.value) {\n          Swal.fire({\n            text: \"You have deleted all selected customers!.\",\n            icon: \"success\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-primary\"\n            }\n          }).then(function () {\n            // Remove all selected customers\n            checkboxes.forEach(function (c) {\n              if (c.checked) {\n                datatable.row($(c.closest('tbody tr'))).remove().draw();\n              }\n            });\n\n            // Remove header checked box\n            var headerCheckbox = table.querySelectorAll('[type=\"checkbox\"]')[0];\n            headerCheckbox.checked = false;\n          }).then(function () {\n            toggleToolbars(); // Detect checked checkboxes\n            initToggleToolbar(); // Re-init toolbar to recalculate checkboxes\n          });\n        } else if (result.dismiss === 'cancel') {\n          Swal.fire({\n            text: \"Selected customers was not deleted.\",\n            icon: \"error\",\n            buttonsStyling: false,\n            confirmButtonText: \"Ok, got it!\",\n            customClass: {\n              confirmButton: \"btn fw-bold btn-primary\"\n            }\n          });\n        }\n      });\n    });\n  };\n\n  // Toggle toolbars\n  var toggleToolbars = function toggleToolbars() {\n    // Select refreshed checkbox DOM elements \n    var allCheckboxes = table.querySelectorAll('tbody [type=\"checkbox\"]');\n\n    // Detect checkboxes state & count\n    var checkedState = false;\n    var count = 0;\n\n    // Count checked boxes\n    allCheckboxes.forEach(function (c) {\n      if (c.checked) {\n        checkedState = true;\n        count++;\n      }\n    });\n\n    // Toggle toolbars\n    if (checkedState) {\n      selectedCount.innerHTML = count;\n      toolbarBase.classList.add('d-none');\n      toolbarSelected.classList.remove('d-none');\n    } else {\n      toolbarBase.classList.remove('d-none');\n      toolbarSelected.classList.add('d-none');\n    }\n  };\n  return {\n    // Public functions  \n    init: function init() {\n      table = document.getElementById('kt_subscriptions_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      initToggleToolbar();\n      handleSearch();\n      handleRowDeletion();\n      handleFilter();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTSubscriptionsList.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/custom/apps/subscriptions/list/list.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/src/js/custom/apps/subscriptions/list/list.js"]();
/******/ 	
/******/ })()
;