/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/src/js/widgets/cards/widget-1.js":
/*!****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-1.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget1 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_card_widget_1_chart\");\n    if (!element) {\n      return;\n    }\n    var color = element.getAttribute('data-kt-chart-color');\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var baseColor = KTUtil.isHexColor(color) ? color : KTUtil.getCssVariableValue('--bs-' + color);\n    var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\n    var options = {\n      series: [{\n        name: 'Sales',\n        data: [30, 75, 55, 45, 30, 60, 75, 50],\n        margin: {\n          left: 5,\n          right: 5\n        }\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: height,\n        toolbar: {\n          show: false\n        },\n        sparkline: {\n          enabled: true\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: ['35%'],\n          borderRadius: 6\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 4,\n        colors: ['transparent']\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        }\n      },\n      fill: {\n        type: 'solid'\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        x: {\n          formatter: function formatter(val) {\n            return \"Feb: \" + val;\n          }\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val + \"%\";\n          }\n        }\n      },\n      colors: [baseColor, secondaryColor],\n      grid: {\n        borderColor: false,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        },\n        padding: {\n          top: 10,\n          left: 25,\n          right: 25\n        }\n      }\n    };\n\n    // Set timeout to properly get the parent elements width\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 300);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardsWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardsWidget1.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-1.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-10.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-10.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget10 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var el = document.getElementById('kt_card_widget_10_chart');\n    if (!el) {\n      return;\n    }\n    var options = {\n      size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n      lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n      rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145\n      //percent:  el.getAttribute('data-kt-percent') ,\n    };\n\n    var canvas = document.createElement('canvas');\n    var span = document.createElement('span');\n    if (typeof G_vmlCanvasManager !== 'undefined') {\n      G_vmlCanvasManager.initElement(canvas);\n    }\n    var ctx = canvas.getContext('2d');\n    canvas.width = canvas.height = options.size;\n    el.appendChild(span);\n    el.appendChild(canvas);\n    ctx.translate(options.size / 2, options.size / 2); // change center\n    ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n    //imd = ctx.getImageData(0, 0, 240, 240);\n    var radius = (options.size - options.lineWidth) / 2;\n    var drawCircle = function drawCircle(color, lineWidth, percent) {\n      percent = Math.min(Math.max(0, percent || 1), 1);\n      ctx.beginPath();\n      ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n      ctx.strokeStyle = color;\n      ctx.lineCap = 'round'; // butt, round or square\n      ctx.lineWidth = lineWidth;\n      ctx.stroke();\n    };\n\n    // Init \n    drawCircle('#E4E6EF', options.lineWidth, 100 / 100);\n    drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 150);\n    drawCircle(KTUtil.getCssVariableValue('--bs-success'), options.lineWidth, 100 / 250);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardsWidget10;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardsWidget10.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2FyZHMvd2lkZ2V0LTEwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsSUFBSUEsZUFBZSxHQUFHLFlBQVk7RUFDOUI7RUFDQSxJQUFJQyxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBQSxFQUFjO0lBQ3ZCLElBQUlDLEVBQUUsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMseUJBQXlCLENBQUM7SUFFM0QsSUFBSSxDQUFDRixFQUFFLEVBQUU7TUFDTDtJQUNKO0lBRUEsSUFBSUcsT0FBTyxHQUFHO01BQ1ZDLElBQUksRUFBRUosRUFBRSxDQUFDSyxZQUFZLENBQUMsY0FBYyxDQUFDLEdBQUdDLFFBQVEsQ0FBQ04sRUFBRSxDQUFDSyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUMsR0FBRyxFQUFFO01BQ3RGRSxTQUFTLEVBQUVQLEVBQUUsQ0FBQ0ssWUFBWSxDQUFDLGNBQWMsQ0FBQyxHQUFHQyxRQUFRLENBQUNOLEVBQUUsQ0FBQ0ssWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtNQUMzRkcsTUFBTSxFQUFFUixFQUFFLENBQUNLLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHQyxRQUFRLENBQUNOLEVBQUUsQ0FBQ0ssWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUMsR0FBRztNQUMxRjtJQUNKLENBQUM7O0lBRUQsSUFBSUksTUFBTSxHQUFHUixRQUFRLENBQUNTLGFBQWEsQ0FBQyxRQUFRLENBQUM7SUFDN0MsSUFBSUMsSUFBSSxHQUFHVixRQUFRLENBQUNTLGFBQWEsQ0FBQyxNQUFNLENBQUM7SUFFekMsSUFBSSxPQUFPRSxrQkFBbUIsS0FBSyxXQUFXLEVBQUU7TUFDNUNBLGtCQUFrQixDQUFDQyxXQUFXLENBQUNKLE1BQU0sQ0FBQztJQUMxQztJQUVBLElBQUlLLEdBQUcsR0FBR0wsTUFBTSxDQUFDTSxVQUFVLENBQUMsSUFBSSxDQUFDO0lBQ2pDTixNQUFNLENBQUNPLEtBQUssR0FBR1AsTUFBTSxDQUFDUSxNQUFNLEdBQUdkLE9BQU8sQ0FBQ0MsSUFBSTtJQUUzQ0osRUFBRSxDQUFDa0IsV0FBVyxDQUFDUCxJQUFJLENBQUM7SUFDcEJYLEVBQUUsQ0FBQ2tCLFdBQVcsQ0FBQ1QsTUFBTSxDQUFDO0lBRXRCSyxHQUFHLENBQUNLLFNBQVMsQ0FBQ2hCLE9BQU8sQ0FBQ0MsSUFBSSxHQUFHLENBQUMsRUFBRUQsT0FBTyxDQUFDQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuRFUsR0FBRyxDQUFDTixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUdMLE9BQU8sQ0FBQ0ssTUFBTSxHQUFHLEdBQUcsSUFBSVksSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQyxDQUFDOztJQUV2RDtJQUNBLElBQUlDLE1BQU0sR0FBRyxDQUFDbkIsT0FBTyxDQUFDQyxJQUFJLEdBQUdELE9BQU8sQ0FBQ0ksU0FBUyxJQUFJLENBQUM7SUFFbkQsSUFBSWdCLFVBQVUsR0FBRyxTQUFiQSxVQUFVQSxDQUFZQyxLQUFLLEVBQUVqQixTQUFTLEVBQUVrQixPQUFPLEVBQUU7TUFDakRBLE9BQU8sR0FBR0wsSUFBSSxDQUFDTSxHQUFHLENBQUNOLElBQUksQ0FBQ08sR0FBRyxDQUFDLENBQUMsRUFBRUYsT0FBTyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztNQUNoRFgsR0FBRyxDQUFDYyxTQUFTLEVBQUU7TUFDZmQsR0FBRyxDQUFDZSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRVAsTUFBTSxFQUFFLENBQUMsRUFBRUYsSUFBSSxDQUFDQyxFQUFFLEdBQUcsQ0FBQyxHQUFHSSxPQUFPLEVBQUUsS0FBSyxDQUFDO01BQ3REWCxHQUFHLENBQUNnQixXQUFXLEdBQUdOLEtBQUs7TUFDdkJWLEdBQUcsQ0FBQ2lCLE9BQU8sR0FBRyxPQUFPLENBQUMsQ0FBQztNQUN2QmpCLEdBQUcsQ0FBQ1AsU0FBUyxHQUFHQSxTQUFTO01BQ3pCTyxHQUFHLENBQUNrQixNQUFNLEVBQUU7SUFDaEIsQ0FBQzs7SUFFRDtJQUNBVCxVQUFVLENBQUMsU0FBUyxFQUFFcEIsT0FBTyxDQUFDSSxTQUFTLEVBQUUsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNuRGdCLFVBQVUsQ0FBQ1UsTUFBTSxDQUFDQyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsRUFBRS9CLE9BQU8sQ0FBQ0ksU0FBUyxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDcEZnQixVQUFVLENBQUNVLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsY0FBYyxDQUFDLEVBQUUvQixPQUFPLENBQUNJLFNBQVMsRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDO0VBQ3hGLENBQUM7O0VBRUQ7RUFDQSxPQUFPO0lBQ0g0QixJQUFJLEVBQUUsU0FBQUEsS0FBQSxFQUFZO01BQ2RwQyxTQUFTLEVBQUU7SUFDZjtFQUNKLENBQUM7QUFDTCxDQUFDLEVBQUU7O0FBRUg7QUFDQSxJQUFJLElBQTZCLEVBQUU7RUFDL0JxQyxNQUFNLENBQUNDLE9BQU8sR0FBR3ZDLGVBQWU7QUFDcEM7O0FBRUE7QUFDQW1DLE1BQU0sQ0FBQ0ssa0JBQWtCLENBQUMsWUFBVztFQUNqQ3hDLGVBQWUsQ0FBQ3FDLElBQUksRUFBRTtBQUMxQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2FyZHMvd2lkZ2V0LTEwLmpzPzA3YWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVENhcmRzV2lkZ2V0MTAgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBQcml2YXRlIG1ldGhvZHNcclxuICAgIHZhciBpbml0Q2hhcnQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfY2FyZF93aWRnZXRfMTBfY2hhcnQnKTsgXHJcblxyXG4gICAgICAgIGlmICghZWwpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgIHNpemU6IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1zaXplJykgPyBwYXJzZUludChlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEta3Qtc2l6ZScpKSA6IDcwLFxyXG4gICAgICAgICAgICBsaW5lV2lkdGg6IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1saW5lJykgPyBwYXJzZUludChlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEta3QtbGluZScpKSA6IDExLFxyXG4gICAgICAgICAgICByb3RhdGU6IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1yb3RhdGUnKSA/IHBhcnNlSW50KGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1yb3RhdGUnKSkgOiAxNDUsICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vcGVyY2VudDogIGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1wZXJjZW50JykgLFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG4gICAgICAgIHZhciBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOyBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgaWYgKHR5cGVvZihHX3ZtbENhbnZhc01hbmFnZXIpICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICBHX3ZtbENhbnZhc01hbmFnZXIuaW5pdEVsZW1lbnQoY2FudmFzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgICAgICBjYW52YXMud2lkdGggPSBjYW52YXMuaGVpZ2h0ID0gb3B0aW9ucy5zaXplO1xyXG5cclxuICAgICAgICBlbC5hcHBlbmRDaGlsZChzcGFuKTtcclxuICAgICAgICBlbC5hcHBlbmRDaGlsZChjYW52YXMpO1xyXG5cclxuICAgICAgICBjdHgudHJhbnNsYXRlKG9wdGlvbnMuc2l6ZSAvIDIsIG9wdGlvbnMuc2l6ZSAvIDIpOyAvLyBjaGFuZ2UgY2VudGVyXHJcbiAgICAgICAgY3R4LnJvdGF0ZSgoLTEgLyAyICsgb3B0aW9ucy5yb3RhdGUgLyAxODApICogTWF0aC5QSSk7IC8vIHJvdGF0ZSAtOTAgZGVnXHJcblxyXG4gICAgICAgIC8vaW1kID0gY3R4LmdldEltYWdlRGF0YSgwLCAwLCAyNDAsIDI0MCk7XHJcbiAgICAgICAgdmFyIHJhZGl1cyA9IChvcHRpb25zLnNpemUgLSBvcHRpb25zLmxpbmVXaWR0aCkgLyAyO1xyXG5cclxuICAgICAgICB2YXIgZHJhd0NpcmNsZSA9IGZ1bmN0aW9uKGNvbG9yLCBsaW5lV2lkdGgsIHBlcmNlbnQpIHtcclxuICAgICAgICAgICAgcGVyY2VudCA9IE1hdGgubWluKE1hdGgubWF4KDAsIHBlcmNlbnQgfHwgMSksIDEpO1xyXG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgICAgIGN0eC5hcmMoMCwgMCwgcmFkaXVzLCAwLCBNYXRoLlBJICogMiAqIHBlcmNlbnQsIGZhbHNlKTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gY29sb3I7XHJcbiAgICAgICAgICAgIGN0eC5saW5lQ2FwID0gJ3JvdW5kJzsgLy8gYnV0dCwgcm91bmQgb3Igc3F1YXJlXHJcbiAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSBsaW5lV2lkdGhcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vIEluaXQgXHJcbiAgICAgICAgZHJhd0NpcmNsZSgnI0U0RTZFRicsIG9wdGlvbnMubGluZVdpZHRoLCAxMDAgLyAxMDApOyBcclxuICAgICAgICBkcmF3Q2lyY2xlKEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLXByaW1hcnknKSwgb3B0aW9ucy5saW5lV2lkdGgsIDEwMCAvIDE1MCk7XHJcbiAgICAgICAgZHJhd0NpcmNsZShLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1zdWNjZXNzJyksIG9wdGlvbnMubGluZVdpZHRoLCAxMDAgLyAyNTApOyAgIFxyXG4gICAgfVxyXG5cclxuICAgIC8vIFB1YmxpYyBtZXRob2RzXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaW5pdENoYXJ0KCk7XHJcbiAgICAgICAgfSAgIFxyXG4gICAgfVxyXG59KCk7XHJcblxyXG4vLyBXZWJwYWNrIHN1cHBvcnRcclxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEtUQ2FyZHNXaWRnZXQxMDtcclxufVxyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbigpIHtcclxuICAgIEtUQ2FyZHNXaWRnZXQxMC5pbml0KCk7XHJcbn0pO1xyXG4gICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICAgICAiXSwibmFtZXMiOlsiS1RDYXJkc1dpZGdldDEwIiwiaW5pdENoYXJ0IiwiZWwiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwib3B0aW9ucyIsInNpemUiLCJnZXRBdHRyaWJ1dGUiLCJwYXJzZUludCIsImxpbmVXaWR0aCIsInJvdGF0ZSIsImNhbnZhcyIsImNyZWF0ZUVsZW1lbnQiLCJzcGFuIiwiR192bWxDYW52YXNNYW5hZ2VyIiwiaW5pdEVsZW1lbnQiLCJjdHgiLCJnZXRDb250ZXh0Iiwid2lkdGgiLCJoZWlnaHQiLCJhcHBlbmRDaGlsZCIsInRyYW5zbGF0ZSIsIk1hdGgiLCJQSSIsInJhZGl1cyIsImRyYXdDaXJjbGUiLCJjb2xvciIsInBlcmNlbnQiLCJtaW4iLCJtYXgiLCJiZWdpblBhdGgiLCJhcmMiLCJzdHJva2VTdHlsZSIsImxpbmVDYXAiLCJzdHJva2UiLCJLVFV0aWwiLCJnZXRDc3NWYXJpYWJsZVZhbHVlIiwiaW5pdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-10.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-12.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-12.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget12 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_card_widget_12_chart\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n    var lightColor = KTUtil.getCssVariableValue('--bs-success');\n    var options = {\n      series: [{\n        name: 'Sales',\n        data: [3.5, 5.7, 2.8, 5.9, 4.2, 5.6, 4.3, 4.5, 5.9, 4.5, 5.7, 4.8, 5.7]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: 'solid',\n        opacity: 0\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 2,\n        colors: [baseColor]\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: false\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        x: {\n          formatter: function formatter(val) {\n            return \"Feb \" + val;\n          }\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val * \"10\" + \"K\";\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        strokeDashArray: 4,\n        padding: {\n          top: 0,\n          right: -20,\n          bottom: -20,\n          left: -20\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 2\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 300);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardWidget12;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardWidget12.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-12.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-13.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-13.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget13 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_card_widget_13_chart\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n    var lightColor = KTUtil.getCssVariableValue('--bs-success');\n    var options = {\n      series: [{\n        name: 'Shipments',\n        data: [1.5, 4.5, 2, 3, 2, 4, 2.5, 2, 2.5, 4, 3.5, 4.5, 2.5]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: 'solid',\n        opacity: 0\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 2,\n        colors: [baseColor]\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: false\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        x: {\n          formatter: function formatter(val) {\n            return \"Feb \" + val;\n          }\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val * \"10\" + \"K\";\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        strokeDashArray: 4,\n        padding: {\n          top: 0,\n          right: -20,\n          bottom: -20,\n          left: -20\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 2\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 300);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardWidget13;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardWidget13.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-13.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-17.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-17.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget17 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var el = document.getElementById('kt_card_widget_17_chart');\n    if (!el) {\n      return;\n    }\n    var options = {\n      size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n      lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n      rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145\n      //percent:  el.getAttribute('data-kt-percent') ,\n    };\n\n    var canvas = document.createElement('canvas');\n    var span = document.createElement('span');\n    if (typeof G_vmlCanvasManager !== 'undefined') {\n      G_vmlCanvasManager.initElement(canvas);\n    }\n    var ctx = canvas.getContext('2d');\n    canvas.width = canvas.height = options.size;\n    el.appendChild(span);\n    el.appendChild(canvas);\n    ctx.translate(options.size / 2, options.size / 2); // change center\n    ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n    //imd = ctx.getImageData(0, 0, 240, 240);\n    var radius = (options.size - options.lineWidth) / 2;\n    var drawCircle = function drawCircle(color, lineWidth, percent) {\n      percent = Math.min(Math.max(0, percent || 1), 1);\n      ctx.beginPath();\n      ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n      ctx.strokeStyle = color;\n      ctx.lineCap = 'round'; // butt, round or square\n      ctx.lineWidth = lineWidth;\n      ctx.stroke();\n    };\n\n    // Init \n    drawCircle('#E4E6EF', options.lineWidth, 100 / 100);\n    drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 150);\n    drawCircle(KTUtil.getCssVariableValue('--bs-success'), options.lineWidth, 100 / 250);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardsWidget17;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardsWidget17.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2FyZHMvd2lkZ2V0LTE3LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsSUFBSUEsZUFBZSxHQUFHLFlBQVk7RUFDOUI7RUFDQSxJQUFJQyxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBQSxFQUFjO0lBQ3ZCLElBQUlDLEVBQUUsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMseUJBQXlCLENBQUM7SUFFM0QsSUFBSSxDQUFDRixFQUFFLEVBQUU7TUFDTDtJQUNKO0lBRUEsSUFBSUcsT0FBTyxHQUFHO01BQ1ZDLElBQUksRUFBRUosRUFBRSxDQUFDSyxZQUFZLENBQUMsY0FBYyxDQUFDLEdBQUdDLFFBQVEsQ0FBQ04sRUFBRSxDQUFDSyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUMsR0FBRyxFQUFFO01BQ3RGRSxTQUFTLEVBQUVQLEVBQUUsQ0FBQ0ssWUFBWSxDQUFDLGNBQWMsQ0FBQyxHQUFHQyxRQUFRLENBQUNOLEVBQUUsQ0FBQ0ssWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsRUFBRTtNQUMzRkcsTUFBTSxFQUFFUixFQUFFLENBQUNLLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHQyxRQUFRLENBQUNOLEVBQUUsQ0FBQ0ssWUFBWSxDQUFDLGdCQUFnQixDQUFDLENBQUMsR0FBRztNQUMxRjtJQUNKLENBQUM7O0lBRUQsSUFBSUksTUFBTSxHQUFHUixRQUFRLENBQUNTLGFBQWEsQ0FBQyxRQUFRLENBQUM7SUFDN0MsSUFBSUMsSUFBSSxHQUFHVixRQUFRLENBQUNTLGFBQWEsQ0FBQyxNQUFNLENBQUM7SUFFekMsSUFBSSxPQUFPRSxrQkFBbUIsS0FBSyxXQUFXLEVBQUU7TUFDNUNBLGtCQUFrQixDQUFDQyxXQUFXLENBQUNKLE1BQU0sQ0FBQztJQUMxQztJQUVBLElBQUlLLEdBQUcsR0FBR0wsTUFBTSxDQUFDTSxVQUFVLENBQUMsSUFBSSxDQUFDO0lBQ2pDTixNQUFNLENBQUNPLEtBQUssR0FBR1AsTUFBTSxDQUFDUSxNQUFNLEdBQUdkLE9BQU8sQ0FBQ0MsSUFBSTtJQUUzQ0osRUFBRSxDQUFDa0IsV0FBVyxDQUFDUCxJQUFJLENBQUM7SUFDcEJYLEVBQUUsQ0FBQ2tCLFdBQVcsQ0FBQ1QsTUFBTSxDQUFDO0lBRXRCSyxHQUFHLENBQUNLLFNBQVMsQ0FBQ2hCLE9BQU8sQ0FBQ0MsSUFBSSxHQUFHLENBQUMsRUFBRUQsT0FBTyxDQUFDQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNuRFUsR0FBRyxDQUFDTixNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUdMLE9BQU8sQ0FBQ0ssTUFBTSxHQUFHLEdBQUcsSUFBSVksSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQyxDQUFDOztJQUV2RDtJQUNBLElBQUlDLE1BQU0sR0FBRyxDQUFDbkIsT0FBTyxDQUFDQyxJQUFJLEdBQUdELE9BQU8sQ0FBQ0ksU0FBUyxJQUFJLENBQUM7SUFFbkQsSUFBSWdCLFVBQVUsR0FBRyxTQUFiQSxVQUFVQSxDQUFZQyxLQUFLLEVBQUVqQixTQUFTLEVBQUVrQixPQUFPLEVBQUU7TUFDakRBLE9BQU8sR0FBR0wsSUFBSSxDQUFDTSxHQUFHLENBQUNOLElBQUksQ0FBQ08sR0FBRyxDQUFDLENBQUMsRUFBRUYsT0FBTyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztNQUNoRFgsR0FBRyxDQUFDYyxTQUFTLEVBQUU7TUFDZmQsR0FBRyxDQUFDZSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRVAsTUFBTSxFQUFFLENBQUMsRUFBRUYsSUFBSSxDQUFDQyxFQUFFLEdBQUcsQ0FBQyxHQUFHSSxPQUFPLEVBQUUsS0FBSyxDQUFDO01BQ3REWCxHQUFHLENBQUNnQixXQUFXLEdBQUdOLEtBQUs7TUFDdkJWLEdBQUcsQ0FBQ2lCLE9BQU8sR0FBRyxPQUFPLENBQUMsQ0FBQztNQUN2QmpCLEdBQUcsQ0FBQ1AsU0FBUyxHQUFHQSxTQUFTO01BQ3pCTyxHQUFHLENBQUNrQixNQUFNLEVBQUU7SUFDaEIsQ0FBQzs7SUFFRDtJQUNBVCxVQUFVLENBQUMsU0FBUyxFQUFFcEIsT0FBTyxDQUFDSSxTQUFTLEVBQUUsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNuRGdCLFVBQVUsQ0FBQ1UsTUFBTSxDQUFDQyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsRUFBRS9CLE9BQU8sQ0FBQ0ksU0FBUyxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDcEZnQixVQUFVLENBQUNVLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsY0FBYyxDQUFDLEVBQUUvQixPQUFPLENBQUNJLFNBQVMsRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDO0VBQ3hGLENBQUM7O0VBRUQ7RUFDQSxPQUFPO0lBQ0g0QixJQUFJLEVBQUUsU0FBQUEsS0FBQSxFQUFZO01BQ2RwQyxTQUFTLEVBQUU7SUFDZjtFQUNKLENBQUM7QUFDTCxDQUFDLEVBQUU7O0FBRUg7QUFDQSxJQUFJLElBQTZCLEVBQUU7RUFDL0JxQyxNQUFNLENBQUNDLE9BQU8sR0FBR3ZDLGVBQWU7QUFDcEM7O0FBRUE7QUFDQW1DLE1BQU0sQ0FBQ0ssa0JBQWtCLENBQUMsWUFBVztFQUNqQ3hDLGVBQWUsQ0FBQ3FDLElBQUksRUFBRTtBQUMxQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2FyZHMvd2lkZ2V0LTE3LmpzPzZiOGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVENhcmRzV2lkZ2V0MTcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBQcml2YXRlIG1ldGhvZHNcclxuICAgIHZhciBpbml0Q2hhcnQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfY2FyZF93aWRnZXRfMTdfY2hhcnQnKTsgXHJcblxyXG4gICAgICAgIGlmICghZWwpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIG9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgIHNpemU6IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1zaXplJykgPyBwYXJzZUludChlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEta3Qtc2l6ZScpKSA6IDcwLFxyXG4gICAgICAgICAgICBsaW5lV2lkdGg6IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1saW5lJykgPyBwYXJzZUludChlbC5nZXRBdHRyaWJ1dGUoJ2RhdGEta3QtbGluZScpKSA6IDExLFxyXG4gICAgICAgICAgICByb3RhdGU6IGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1yb3RhdGUnKSA/IHBhcnNlSW50KGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1yb3RhdGUnKSkgOiAxNDUsICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vcGVyY2VudDogIGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1wZXJjZW50JykgLFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2NhbnZhcycpO1xyXG4gICAgICAgIHZhciBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOyBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgaWYgKHR5cGVvZihHX3ZtbENhbnZhc01hbmFnZXIpICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICBHX3ZtbENhbnZhc01hbmFnZXIuaW5pdEVsZW1lbnQoY2FudmFzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgICAgICBjYW52YXMud2lkdGggPSBjYW52YXMuaGVpZ2h0ID0gb3B0aW9ucy5zaXplO1xyXG5cclxuICAgICAgICBlbC5hcHBlbmRDaGlsZChzcGFuKTtcclxuICAgICAgICBlbC5hcHBlbmRDaGlsZChjYW52YXMpO1xyXG5cclxuICAgICAgICBjdHgudHJhbnNsYXRlKG9wdGlvbnMuc2l6ZSAvIDIsIG9wdGlvbnMuc2l6ZSAvIDIpOyAvLyBjaGFuZ2UgY2VudGVyXHJcbiAgICAgICAgY3R4LnJvdGF0ZSgoLTEgLyAyICsgb3B0aW9ucy5yb3RhdGUgLyAxODApICogTWF0aC5QSSk7IC8vIHJvdGF0ZSAtOTAgZGVnXHJcblxyXG4gICAgICAgIC8vaW1kID0gY3R4LmdldEltYWdlRGF0YSgwLCAwLCAyNDAsIDI0MCk7XHJcbiAgICAgICAgdmFyIHJhZGl1cyA9IChvcHRpb25zLnNpemUgLSBvcHRpb25zLmxpbmVXaWR0aCkgLyAyO1xyXG5cclxuICAgICAgICB2YXIgZHJhd0NpcmNsZSA9IGZ1bmN0aW9uKGNvbG9yLCBsaW5lV2lkdGgsIHBlcmNlbnQpIHtcclxuICAgICAgICAgICAgcGVyY2VudCA9IE1hdGgubWluKE1hdGgubWF4KDAsIHBlcmNlbnQgfHwgMSksIDEpO1xyXG4gICAgICAgICAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICAgICAgICAgIGN0eC5hcmMoMCwgMCwgcmFkaXVzLCAwLCBNYXRoLlBJICogMiAqIHBlcmNlbnQsIGZhbHNlKTtcclxuICAgICAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gY29sb3I7XHJcbiAgICAgICAgICAgIGN0eC5saW5lQ2FwID0gJ3JvdW5kJzsgLy8gYnV0dCwgcm91bmQgb3Igc3F1YXJlXHJcbiAgICAgICAgICAgIGN0eC5saW5lV2lkdGggPSBsaW5lV2lkdGhcclxuICAgICAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vIEluaXQgXHJcbiAgICAgICAgZHJhd0NpcmNsZSgnI0U0RTZFRicsIG9wdGlvbnMubGluZVdpZHRoLCAxMDAgLyAxMDApOyBcclxuICAgICAgICBkcmF3Q2lyY2xlKEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLXByaW1hcnknKSwgb3B0aW9ucy5saW5lV2lkdGgsIDEwMCAvIDE1MCk7XHJcbiAgICAgICAgZHJhd0NpcmNsZShLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1zdWNjZXNzJyksIG9wdGlvbnMubGluZVdpZHRoLCAxMDAgLyAyNTApOyAgIFxyXG4gICAgfVxyXG5cclxuICAgIC8vIFB1YmxpYyBtZXRob2RzXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaW5pdENoYXJ0KCk7XHJcbiAgICAgICAgfSAgIFxyXG4gICAgfVxyXG59KCk7XHJcblxyXG4vLyBXZWJwYWNrIHN1cHBvcnRcclxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEtUQ2FyZHNXaWRnZXQxNztcclxufVxyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbigpIHtcclxuICAgIEtUQ2FyZHNXaWRnZXQxNy5pbml0KCk7XHJcbn0pO1xyXG4gICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICAgICAiXSwibmFtZXMiOlsiS1RDYXJkc1dpZGdldDE3IiwiaW5pdENoYXJ0IiwiZWwiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwib3B0aW9ucyIsInNpemUiLCJnZXRBdHRyaWJ1dGUiLCJwYXJzZUludCIsImxpbmVXaWR0aCIsInJvdGF0ZSIsImNhbnZhcyIsImNyZWF0ZUVsZW1lbnQiLCJzcGFuIiwiR192bWxDYW52YXNNYW5hZ2VyIiwiaW5pdEVsZW1lbnQiLCJjdHgiLCJnZXRDb250ZXh0Iiwid2lkdGgiLCJoZWlnaHQiLCJhcHBlbmRDaGlsZCIsInRyYW5zbGF0ZSIsIk1hdGgiLCJQSSIsInJhZGl1cyIsImRyYXdDaXJjbGUiLCJjb2xvciIsInBlcmNlbnQiLCJtaW4iLCJtYXgiLCJiZWdpblBhdGgiLCJhcmMiLCJzdHJva2VTdHlsZSIsImxpbmVDYXAiLCJzdHJva2UiLCJLVFV0aWwiLCJnZXRDc3NWYXJpYWJsZVZhbHVlIiwiaW5pdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-17.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-4.js":
/*!****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-4.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget4 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var el = document.getElementById('kt_card_widget_4_chart');\n    if (!el) {\n      return;\n    }\n    var options = {\n      size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n      lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n      rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145\n      //percent:  el.getAttribute('data-kt-percent') ,\n    };\n\n    var canvas = document.createElement('canvas');\n    var span = document.createElement('span');\n    if (typeof G_vmlCanvasManager !== 'undefined') {\n      G_vmlCanvasManager.initElement(canvas);\n    }\n    var ctx = canvas.getContext('2d');\n    canvas.width = canvas.height = options.size;\n    el.appendChild(span);\n    el.appendChild(canvas);\n    ctx.translate(options.size / 2, options.size / 2); // change center\n    ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n    //imd = ctx.getImageData(0, 0, 240, 240);\n    var radius = (options.size - options.lineWidth) / 2;\n    var drawCircle = function drawCircle(color, lineWidth, percent) {\n      percent = Math.min(Math.max(0, percent || 1), 1);\n      ctx.beginPath();\n      ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n      ctx.strokeStyle = color;\n      ctx.lineCap = 'round'; // butt, round or square\n      ctx.lineWidth = lineWidth;\n      ctx.stroke();\n    };\n\n    // Init \n    drawCircle('#E4E6EF', options.lineWidth, 100 / 100);\n    drawCircle(KTUtil.getCssVariableValue('--bs-danger'), options.lineWidth, 100 / 150);\n    drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 250);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardsWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardsWidget4.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2FyZHMvd2lkZ2V0LTQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSxJQUFJQSxjQUFjLEdBQUcsWUFBWTtFQUM3QjtFQUNBLElBQUlDLFNBQVMsR0FBRyxTQUFaQSxTQUFTQSxDQUFBLEVBQWM7SUFDdkIsSUFBSUMsRUFBRSxHQUFHQyxRQUFRLENBQUNDLGNBQWMsQ0FBQyx3QkFBd0IsQ0FBQztJQUUxRCxJQUFJLENBQUNGLEVBQUUsRUFBRTtNQUNMO0lBQ0o7SUFFQSxJQUFJRyxPQUFPLEdBQUc7TUFDVkMsSUFBSSxFQUFFSixFQUFFLENBQUNLLFlBQVksQ0FBQyxjQUFjLENBQUMsR0FBR0MsUUFBUSxDQUFDTixFQUFFLENBQUNLLFlBQVksQ0FBQyxjQUFjLENBQUMsQ0FBQyxHQUFHLEVBQUU7TUFDdEZFLFNBQVMsRUFBRVAsRUFBRSxDQUFDSyxZQUFZLENBQUMsY0FBYyxDQUFDLEdBQUdDLFFBQVEsQ0FBQ04sRUFBRSxDQUFDSyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUMsR0FBRyxFQUFFO01BQzNGRyxNQUFNLEVBQUVSLEVBQUUsQ0FBQ0ssWUFBWSxDQUFDLGdCQUFnQixDQUFDLEdBQUdDLFFBQVEsQ0FBQ04sRUFBRSxDQUFDSyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxHQUFHO01BQzFGO0lBQ0osQ0FBQzs7SUFFRCxJQUFJSSxNQUFNLEdBQUdSLFFBQVEsQ0FBQ1MsYUFBYSxDQUFDLFFBQVEsQ0FBQztJQUM3QyxJQUFJQyxJQUFJLEdBQUdWLFFBQVEsQ0FBQ1MsYUFBYSxDQUFDLE1BQU0sQ0FBQztJQUV6QyxJQUFJLE9BQU9FLGtCQUFtQixLQUFLLFdBQVcsRUFBRTtNQUM1Q0Esa0JBQWtCLENBQUNDLFdBQVcsQ0FBQ0osTUFBTSxDQUFDO0lBQzFDO0lBRUEsSUFBSUssR0FBRyxHQUFHTCxNQUFNLENBQUNNLFVBQVUsQ0FBQyxJQUFJLENBQUM7SUFDakNOLE1BQU0sQ0FBQ08sS0FBSyxHQUFHUCxNQUFNLENBQUNRLE1BQU0sR0FBR2QsT0FBTyxDQUFDQyxJQUFJO0lBRTNDSixFQUFFLENBQUNrQixXQUFXLENBQUNQLElBQUksQ0FBQztJQUNwQlgsRUFBRSxDQUFDa0IsV0FBVyxDQUFDVCxNQUFNLENBQUM7SUFFdEJLLEdBQUcsQ0FBQ0ssU0FBUyxDQUFDaEIsT0FBTyxDQUFDQyxJQUFJLEdBQUcsQ0FBQyxFQUFFRCxPQUFPLENBQUNDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25EVSxHQUFHLENBQUNOLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBR0wsT0FBTyxDQUFDSyxNQUFNLEdBQUcsR0FBRyxJQUFJWSxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDLENBQUM7O0lBRXZEO0lBQ0EsSUFBSUMsTUFBTSxHQUFHLENBQUNuQixPQUFPLENBQUNDLElBQUksR0FBR0QsT0FBTyxDQUFDSSxTQUFTLElBQUksQ0FBQztJQUVuRCxJQUFJZ0IsVUFBVSxHQUFHLFNBQWJBLFVBQVVBLENBQVlDLEtBQUssRUFBRWpCLFNBQVMsRUFBRWtCLE9BQU8sRUFBRTtNQUNqREEsT0FBTyxHQUFHTCxJQUFJLENBQUNNLEdBQUcsQ0FBQ04sSUFBSSxDQUFDTyxHQUFHLENBQUMsQ0FBQyxFQUFFRixPQUFPLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO01BQ2hEWCxHQUFHLENBQUNjLFNBQVMsRUFBRTtNQUNmZCxHQUFHLENBQUNlLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFUCxNQUFNLEVBQUUsQ0FBQyxFQUFFRixJQUFJLENBQUNDLEVBQUUsR0FBRyxDQUFDLEdBQUdJLE9BQU8sRUFBRSxLQUFLLENBQUM7TUFDdERYLEdBQUcsQ0FBQ2dCLFdBQVcsR0FBR04sS0FBSztNQUN2QlYsR0FBRyxDQUFDaUIsT0FBTyxHQUFHLE9BQU8sQ0FBQyxDQUFDO01BQ3ZCakIsR0FBRyxDQUFDUCxTQUFTLEdBQUdBLFNBQVM7TUFDekJPLEdBQUcsQ0FBQ2tCLE1BQU0sRUFBRTtJQUNoQixDQUFDOztJQUVEO0lBQ0FULFVBQVUsQ0FBQyxTQUFTLEVBQUVwQixPQUFPLENBQUNJLFNBQVMsRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDO0lBQ25EZ0IsVUFBVSxDQUFDVSxNQUFNLENBQUNDLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxFQUFFL0IsT0FBTyxDQUFDSSxTQUFTLEVBQUUsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNuRmdCLFVBQVUsQ0FBQ1UsTUFBTSxDQUFDQyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsRUFBRS9CLE9BQU8sQ0FBQ0ksU0FBUyxFQUFFLEdBQUcsR0FBRyxHQUFHLENBQUM7RUFDeEYsQ0FBQzs7RUFFRDtFQUNBLE9BQU87SUFDSDRCLElBQUksRUFBRSxTQUFBQSxLQUFBLEVBQVk7TUFDZHBDLFNBQVMsRUFBRTtJQUNmO0VBQ0osQ0FBQztBQUNMLENBQUMsRUFBRTs7QUFFSDtBQUNBLElBQUksSUFBNkIsRUFBRTtFQUMvQnFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHdkMsY0FBYztBQUNuQzs7QUFFQTtBQUNBbUMsTUFBTSxDQUFDSyxrQkFBa0IsQ0FBQyxZQUFXO0VBQ2pDeEMsY0FBYyxDQUFDcUMsSUFBSSxFQUFFO0FBQ3pCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9zcmMvanMvd2lkZ2V0cy9jYXJkcy93aWRnZXQtNC5qcz83YTVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8gQ2xhc3MgZGVmaW5pdGlvblxyXG52YXIgS1RDYXJkc1dpZGdldDQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBQcml2YXRlIG1ldGhvZHNcclxuICAgIHZhciBpbml0Q2hhcnQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgZWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgna3RfY2FyZF93aWRnZXRfNF9jaGFydCcpOyBcclxuXHJcbiAgICAgICAgaWYgKCFlbCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgc2l6ZTogZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LXNpemUnKSA/IHBhcnNlSW50KGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1zaXplJykpIDogNzAsXHJcbiAgICAgICAgICAgIGxpbmVXaWR0aDogZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LWxpbmUnKSA/IHBhcnNlSW50KGVsLmdldEF0dHJpYnV0ZSgnZGF0YS1rdC1saW5lJykpIDogMTEsXHJcbiAgICAgICAgICAgIHJvdGF0ZTogZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LXJvdGF0ZScpID8gcGFyc2VJbnQoZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LXJvdGF0ZScpKSA6IDE0NSwgICAgICAgICAgICBcclxuICAgICAgICAgICAgLy9wZXJjZW50OiAgZWwuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LXBlcmNlbnQnKSAsXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XHJcbiAgICAgICAgdmFyIHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7IFxyXG4gICAgICAgICAgICBcclxuICAgICAgICBpZiAodHlwZW9mKEdfdm1sQ2FudmFzTWFuYWdlcikgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgIEdfdm1sQ2FudmFzTWFuYWdlci5pbml0RWxlbWVudChjYW52YXMpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpO1xyXG4gICAgICAgIGNhbnZhcy53aWR0aCA9IGNhbnZhcy5oZWlnaHQgPSBvcHRpb25zLnNpemU7XHJcblxyXG4gICAgICAgIGVsLmFwcGVuZENoaWxkKHNwYW4pO1xyXG4gICAgICAgIGVsLmFwcGVuZENoaWxkKGNhbnZhcyk7XHJcblxyXG4gICAgICAgIGN0eC50cmFuc2xhdGUob3B0aW9ucy5zaXplIC8gMiwgb3B0aW9ucy5zaXplIC8gMik7IC8vIGNoYW5nZSBjZW50ZXJcclxuICAgICAgICBjdHgucm90YXRlKCgtMSAvIDIgKyBvcHRpb25zLnJvdGF0ZSAvIDE4MCkgKiBNYXRoLlBJKTsgLy8gcm90YXRlIC05MCBkZWdcclxuXHJcbiAgICAgICAgLy9pbWQgPSBjdHguZ2V0SW1hZ2VEYXRhKDAsIDAsIDI0MCwgMjQwKTtcclxuICAgICAgICB2YXIgcmFkaXVzID0gKG9wdGlvbnMuc2l6ZSAtIG9wdGlvbnMubGluZVdpZHRoKSAvIDI7XHJcblxyXG4gICAgICAgIHZhciBkcmF3Q2lyY2xlID0gZnVuY3Rpb24oY29sb3IsIGxpbmVXaWR0aCwgcGVyY2VudCkge1xyXG4gICAgICAgICAgICBwZXJjZW50ID0gTWF0aC5taW4oTWF0aC5tYXgoMCwgcGVyY2VudCB8fCAxKSwgMSk7XHJcbiAgICAgICAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgY3R4LmFyYygwLCAwLCByYWRpdXMsIDAsIE1hdGguUEkgKiAyICogcGVyY2VudCwgZmFsc2UpO1xyXG4gICAgICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSBjb2xvcjtcclxuICAgICAgICAgICAgY3R4LmxpbmVDYXAgPSAncm91bmQnOyAvLyBidXR0LCByb3VuZCBvciBzcXVhcmVcclxuICAgICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IGxpbmVXaWR0aFxyXG4gICAgICAgICAgICBjdHguc3Ryb2tlKCk7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgLy8gSW5pdCBcclxuICAgICAgICBkcmF3Q2lyY2xlKCcjRTRFNkVGJywgb3B0aW9ucy5saW5lV2lkdGgsIDEwMCAvIDEwMCk7IFxyXG4gICAgICAgIGRyYXdDaXJjbGUoS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtZGFuZ2VyJyksIG9wdGlvbnMubGluZVdpZHRoLCAxMDAgLyAxNTApO1xyXG4gICAgICAgIGRyYXdDaXJjbGUoS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtcHJpbWFyeScpLCBvcHRpb25zLmxpbmVXaWR0aCwgMTAwIC8gMjUwKTsgICBcclxuICAgIH1cclxuXHJcbiAgICAvLyBQdWJsaWMgbWV0aG9kc1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGluaXRDaGFydCgpO1xyXG4gICAgICAgIH0gICBcclxuICAgIH1cclxufSgpO1xyXG5cclxuLy8gV2VicGFjayBzdXBwb3J0XHJcbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBLVENhcmRzV2lkZ2V0NDtcclxufVxyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbigpIHtcclxuICAgIEtUQ2FyZHNXaWRnZXQ0LmluaXQoKTtcclxufSk7XHJcbiAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICJdLCJuYW1lcyI6WyJLVENhcmRzV2lkZ2V0NCIsImluaXRDaGFydCIsImVsIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIm9wdGlvbnMiLCJzaXplIiwiZ2V0QXR0cmlidXRlIiwicGFyc2VJbnQiLCJsaW5lV2lkdGgiLCJyb3RhdGUiLCJjYW52YXMiLCJjcmVhdGVFbGVtZW50Iiwic3BhbiIsIkdfdm1sQ2FudmFzTWFuYWdlciIsImluaXRFbGVtZW50IiwiY3R4IiwiZ2V0Q29udGV4dCIsIndpZHRoIiwiaGVpZ2h0IiwiYXBwZW5kQ2hpbGQiLCJ0cmFuc2xhdGUiLCJNYXRoIiwiUEkiLCJyYWRpdXMiLCJkcmF3Q2lyY2xlIiwiY29sb3IiLCJwZXJjZW50IiwibWluIiwibWF4IiwiYmVnaW5QYXRoIiwiYXJjIiwic3Ryb2tlU3R5bGUiLCJsaW5lQ2FwIiwic3Ryb2tlIiwiS1RVdGlsIiwiZ2V0Q3NzVmFyaWFibGVWYWx1ZSIsImluaXQiLCJtb2R1bGUiLCJleHBvcnRzIiwib25ET01Db250ZW50TG9hZGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-4.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-6.js":
/*!****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-6.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget6 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_card_widget_6_chart\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n    var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\n    var options = {\n      series: [{\n        name: 'Sales',\n        data: [30, 60, 53, 45, 60, 75, 53]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: height,\n        toolbar: {\n          show: false\n        },\n        sparkline: {\n          enabled: true\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: ['55%'],\n          borderRadius: 6\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 9,\n        colors: ['transparent']\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false,\n          tickPlacement: 'between'\n        },\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        }\n      },\n      fill: {\n        type: 'solid'\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        x: {\n          formatter: function formatter(val) {\n            return 'Feb: ' + val;\n          }\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val + \"%\";\n          }\n        }\n      },\n      colors: [baseColor, secondaryColor],\n      grid: {\n        padding: {\n          left: 10,\n          right: 10\n        },\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 300);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardsWidget6;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardsWidget6.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-6.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-8.js":
/*!****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-8.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget8 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_card_widget_8_chart\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n    var lightColor = KTUtil.getCssVariableValue('--bs-success');\n    var options = {\n      series: [{\n        name: 'Sales',\n        data: [4.5, 5.7, 2.8, 5.9, 4.2, 5.6, 5.2, 4.5, 5.9, 4.5, 5.7, 4.8, 5.7]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: 'solid',\n        opacity: 0\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 2,\n        colors: [baseColor]\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: false\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        x: {\n          formatter: function formatter(val) {\n            return \"Feb \" + val;\n          }\n        },\n        y: {\n          formatter: function formatter(val) {\n            return \"$\" + val + \"K\";\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        strokeDashArray: 4,\n        padding: {\n          top: 0,\n          right: -20,\n          bottom: -20,\n          left: -20\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 2\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 300);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardWidget8;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardWidget8.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-8.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/cards/widget-9.js":
/*!****************************************************!*\
  !*** ./resources/src/js/widgets/cards/widget-9.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget9 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_card_widget_9_chart\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n    var lightColor = KTUtil.getCssVariableValue('--bs-success');\n    var options = {\n      series: [{\n        name: 'Visitors',\n        data: [1.5, 2.5, 2, 3, 2, 4, 2.5, 2, 2.5, 4, 2.5, 4.5, 2.5]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: 'solid',\n        opacity: 0\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 2,\n        colors: [baseColor]\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: false\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        x: {\n          formatter: function formatter(val) {\n            return \"Feb \" + val;\n          }\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val + \"K\";\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        strokeDashArray: 4,\n        padding: {\n          top: 0,\n          right: -20,\n          bottom: -20,\n          left: -20\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 2\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 300);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTCardWidget9;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTCardWidget9.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/cards/widget-9.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-1.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-1.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget1 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_1\");\n    if (!element) {\n      return;\n    }\n    var negativeColor = element.hasAttribute('data-kt-negative-color') ? element.getAttribute('data-kt-negative-color') : KTUtil.getCssVariableValue('--bs-success');\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n    var options = {\n      series: [{\n        name: 'Subscribed',\n        data: [20, 30, 20, 40, 60, 75, 65, 18, 10, 5, 15, 40, 60, 18, 35, 55, 20]\n      }, {\n        name: 'Unsubscribed',\n        data: [-20, -15, -5, -20, -30, -15, -10, -8, -5, -5, -10, -25, -15, -5, -10, -5, -15]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        stacked: true,\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          //horizontal: false,\n          columnWidth: \"35%\",\n          barHeight: \"70%\",\n          borderRadius: [6, 6]\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      xaxis: {\n        categories: ['Jan 5', 'Jan 7', 'Jan 9', 'Jan 11', 'Jan 13', 'Jan 15', 'Jan 17', 'Jan 19', 'Jan 20', 'Jan 21', 'Jan 23', 'Jan 24', 'Jan 25', 'Jan 26', 'Jan 24', 'Jan 28', 'Jan 29'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 10,\n        labels: {\n          //rotate: -45,\n          //rotateAlways: true,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          show: false\n        }\n      },\n      yaxis: {\n        min: -50,\n        max: 80,\n        tickAmount: 6,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          },\n          formatter: function formatter(val) {\n            return parseInt(val) + \"K\";\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px',\n          borderRadius: 4\n        },\n        y: {\n          formatter: function formatter(val) {\n            if (val > 0) {\n              return val + 'K';\n            } else {\n              return Math.abs(val) + 'K';\n            }\n          }\n        }\n      },\n      colors: [baseColor, negativeColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget1.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-1.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-10.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-10.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget10 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var options = {\n      series: [{\n        name: 'Achieved Target',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: ['22%'],\n          borderRadius: 5,\n          dataLabels: {\n            position: \"top\" // top, center, bottom\n          },\n\n          startingShape: 'flat'\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: true,\n        offsetY: -30,\n        style: {\n          fontSize: '13px',\n          colors: ['labelColor']\n        },\n        formatter: function formatter(val) {\n          return val + \"K\";\n        }\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Metals', 'Energy', 'Agro', 'Machines', 'Transport', 'Textile', 'Wood'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          }\n        },\n        crosshairs: {\n          fill: {\n            gradient: {\n              opacityFrom: 0,\n              opacityTo: 0\n            }\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          },\n          formatter: function formatter(val) {\n            return parseInt(val) + \"K\";\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return +val + \"K\";\n          }\n        }\n      },\n      colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_charts_widget_10_tab_1', '#kt_charts_widget_10_chart_1', [30, 18, 43, 70, 13, 37, 23], true);\n      initChart('#kt_charts_widget_10_tab_2', '#kt_charts_widget_10_chart_2', [25, 55, 35, 50, 45, 20, 31], false);\n      initChart('#kt_charts_widget_10_tab_3', '#kt_charts_widget_10_chart_3', [45, 15, 35, 70, 45, 50, 21], false);\n      initChart('#kt_charts_widget_10_tab_4', '#kt_charts_widget_10_chart_4', [15, 55, 25, 50, 25, 60, 31], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget10;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget10.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-10.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-11.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-11.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget11 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    var height = parseInt(KTUtil.css(element, 'height'));\n    if (!element) {\n      return;\n    }\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-success');\n    var lightColor = KTUtil.getCssVariableValue('--bs-success');\n    var options = {\n      series: [{\n        name: 'Deliveries',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.3,\n          opacityTo: 0.7,\n          stops: [0, 90, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['', 'Apr 02', 'Apr 06', 'Apr 06', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 09', 'Apr 14', 'Apr 10', 'Apr 12', 'Apr 18', 'Apr 14', 'Apr 15', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 02', 'Apr 06', 'Apr 18', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 22', 'Apr 14', 'Apr 11', 'Apr 12', ''],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 5,\n        labels: {\n          rotate: 0,\n          rotateAlways: true,\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '13px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 24,\n        min: 10,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '13px'\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return +val;\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_chart_widget_11_tab_1', '#kt_chart_widget_11_chart_1', [16, 19, 19, 16, 16, 14, 15, 15, 17, 17, 19, 19, 18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 20, 20, 22], false);\n      initChart('#kt_chart_widget_11_tab_2', '#kt_chart_widget_11_chart_2', [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22, 15, 18, 18, 17, 17, 15, 15, 17, 17, 19, 17], false);\n      initChart('#kt_chart_widget_11_tab_3', '#kt_chart_widget_11_chart_3', [17, 20, 20, 19, 19, 17, 17, 19, 19, 21, 21, 19, 19, 21, 21, 18, 18, 16, 17, 17, 19, 19, 21, 21, 19, 19, 17, 17, 18, 18], true);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget11;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget11.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-11.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-12.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-12.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget12 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var options = {\n      series: [{\n        name: 'Deliveries',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: ['22%'],\n          borderRadius: 5,\n          dataLabels: {\n            position: \"top\" // top, center, bottom\n          },\n\n          startingShape: 'flat'\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: true,\n        offsetY: -28,\n        style: {\n          fontSize: '13px',\n          colors: ['labelColor']\n        },\n        formatter: function formatter(val) {\n          return val + \"K\";\n        }\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Grossey', 'Pet Food', 'Flowers', 'Restaurant', 'Kids Toys', 'Clothing', 'Still Water'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          }\n        },\n        crosshairs: {\n          fill: {\n            gradient: {\n              opacityFrom: 0,\n              opacityTo: 0\n            }\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          },\n          formatter: function formatter(val) {\n            return val + \"K\";\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return +val + 'K';\n          }\n        }\n      },\n      colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_charts_widget_12_tab_1', '#kt_charts_widget_12_chart_1', [54, 42, 75, 110, 23, 87, 50], true);\n      initChart('#kt_charts_widget_12_tab_2', '#kt_charts_widget_12_chart_2', [25, 55, 35, 50, 45, 20, 31], false);\n      initChart('#kt_charts_widget_12_tab_3', '#kt_charts_widget_12_chart_3', [45, 15, 35, 70, 45, 50, 21], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget12;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget12.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-12.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-13.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-13.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget13 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_13_chart\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/\n      var chart = root.container.children.push(am5xy.XYChart[\"new\"](root, {\n        panX: true,\n        panY: true,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\"\n      }));\n\n      // Add cursor\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\n      var cursor = chart.set(\"cursor\", am5xy.XYCursor[\"new\"](root, {\n        behavior: \"none\"\n      }));\n      cursor.lineY.set(\"visible\", false);\n\n      // The data\n      var data = [{\n        year: \"2003\",\n        cars: 1587,\n        motorcycles: 650,\n        bicycles: 121\n      }, {\n        year: \"2004\",\n        cars: 1567,\n        motorcycles: 683,\n        bicycles: 146\n      }, {\n        year: \"2005\",\n        cars: 1617,\n        motorcycles: 691,\n        bicycles: 138\n      }, {\n        year: \"2006\",\n        cars: 1630,\n        motorcycles: 642,\n        bicycles: 127\n      }, {\n        year: \"2007\",\n        cars: 1660,\n        motorcycles: 699,\n        bicycles: 105\n      }, {\n        year: \"2008\",\n        cars: 1683,\n        motorcycles: 721,\n        bicycles: 109\n      }, {\n        year: \"2009\",\n        cars: 1691,\n        motorcycles: 737,\n        bicycles: 112\n      }, {\n        year: \"2010\",\n        cars: 1298,\n        motorcycles: 680,\n        bicycles: 101\n      }, {\n        year: \"2011\",\n        cars: 1275,\n        motorcycles: 664,\n        bicycles: 97\n      }, {\n        year: \"2012\",\n        cars: 1246,\n        motorcycles: 648,\n        bicycles: 93\n      }, {\n        year: \"2013\",\n        cars: 1318,\n        motorcycles: 697,\n        bicycles: 111\n      }, {\n        year: \"2014\",\n        cars: 1213,\n        motorcycles: 633,\n        bicycles: 87\n      }, {\n        year: \"2015\",\n        cars: 1199,\n        motorcycles: 621,\n        bicycles: 79\n      }, {\n        year: \"2016\",\n        cars: 1110,\n        motorcycles: 210,\n        bicycles: 81\n      }, {\n        year: \"2017\",\n        cars: 1165,\n        motorcycles: 232,\n        bicycles: 75\n      }, {\n        year: \"2018\",\n        cars: 1145,\n        motorcycles: 219,\n        bicycles: 88\n      }, {\n        year: \"2019\",\n        cars: 1163,\n        motorcycles: 201,\n        bicycles: 82\n      }, {\n        year: \"2020\",\n        cars: 1180,\n        motorcycles: 285,\n        bicycles: 87\n      }, {\n        year: \"2021\",\n        cars: 1159,\n        motorcycles: 277,\n        bicycles: 71\n      }];\n\n      // Create axes\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"year\",\n        startLocation: 0.5,\n        endLocation: 0.5,\n        renderer: am5xy.AxisRendererX[\"new\"](root, {}),\n        tooltip: am5.Tooltip[\"new\"](root, {})\n      }));\n      xAxis.get(\"renderer\").grid.template.setAll({\n        disabled: true,\n        strokeOpacity: 0\n      });\n      xAxis.get(\"renderer\").labels.template.setAll({\n        fontWeight: \"400\",\n        fontSize: 13,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n      xAxis.data.setAll(data);\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: am5xy.AxisRendererY[\"new\"](root, {})\n      }));\n      yAxis.get(\"renderer\").grid.template.setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        strokeDasharray: [3]\n      });\n      yAxis.get(\"renderer\").labels.template.setAll({\n        fontWeight: \"400\",\n        fontSize: 13,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n\n      // Add series\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n      function createSeries(name, field, color) {\n        var series = chart.series.push(am5xy.LineSeries[\"new\"](root, {\n          name: name,\n          xAxis: xAxis,\n          yAxis: yAxis,\n          stacked: true,\n          valueYField: field,\n          categoryXField: \"year\",\n          fill: am5.color(color),\n          tooltip: am5.Tooltip[\"new\"](root, {\n            pointerOrientation: \"horizontal\",\n            labelText: \"[bold]{name}[/]\\n{categoryX}: {valueY}\"\n          })\n        }));\n        series.fills.template.setAll({\n          fillOpacity: 0.5,\n          visible: true\n        });\n        series.data.setAll(data);\n        series.appear(1000);\n      }\n      createSeries(\"Cars\", \"cars\", KTUtil.getCssVariableValue('--bs-primary'));\n      createSeries(\"Motorcycles\", \"motorcycles\", KTUtil.getCssVariableValue('--bs-success'));\n      createSeries(\"Bicycles\", \"bicycles\", KTUtil.getCssVariableValue('--bs-warning'));\n\n      // Add scrollbar\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\n      var scrollbarX = chart.set(\"scrollbarX\", am5.Scrollbar[\"new\"](root, {\n        orientation: \"horizontal\",\n        marginBottom: 25,\n        height: 8\n      }));\n\n      // Create axis ranges\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/\n      var rangeDataItem = xAxis.makeDataItem({\n        category: \"2016\",\n        endCategory: \"2021\"\n      });\n      var range = xAxis.createAxisRange(rangeDataItem);\n      rangeDataItem.get(\"grid\").setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\n        strokeOpacity: 0.5,\n        strokeDasharray: [3]\n      });\n      rangeDataItem.get(\"axisFill\").setAll({\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\n        fillOpacity: 0.1\n      });\n      rangeDataItem.get(\"label\").setAll({\n        inside: true,\n        text: \"Fines increased\",\n        rotation: 90,\n        centerX: am5.p100,\n        centerY: am5.p100,\n        location: 0,\n        paddingBottom: 10,\n        paddingRight: 15\n      });\n      var rangeDataItem2 = xAxis.makeDataItem({\n        category: \"2021\"\n      });\n      var range2 = xAxis.createAxisRange(rangeDataItem2);\n      rangeDataItem2.get(\"grid\").setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\n        strokeOpacity: 1,\n        strokeDasharray: [3]\n      });\n      rangeDataItem2.get(\"label\").setAll({\n        inside: true,\n        text: \"Fee introduced\",\n        rotation: 90,\n        centerX: am5.p100,\n        centerY: am5.p100,\n        location: 0,\n        paddingBottom: 10,\n        paddingRight: 15\n      });\n\n      // Make stuff animate on load\n      // https://www.amcharts.com/docs/v5/concepts/animations/\n      chart.appear(1000, 100);\n    }); // end am5.ready()\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget13;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget13.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-13.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-14.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-14.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget14 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_14_chart\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/\n      var chart = root.container.children.push(am5radar.RadarChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        innerRadius: am5.percent(20),\n        startAngle: -90,\n        endAngle: 180\n      }));\n\n      // Data\n      var data = [{\n        category: \"Research\",\n        value: 80,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-info'))\n        }\n      }, {\n        category: \"Marketing\",\n        value: 35,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-danger'))\n        }\n      }, {\n        category: \"Distribution\",\n        value: 92,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        category: \"Human Resources\",\n        value: 68,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n        }\n      }];\n\n      // Add cursor\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\n      var cursor = chart.set(\"cursor\", am5radar.RadarCursor[\"new\"](root, {\n        behavior: \"zoomX\"\n      }));\n      cursor.lineY.set(\"visible\", false);\n\n      // Create axes and their renderers\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n      var xRenderer = am5radar.AxisRendererCircular[\"new\"](root, {\n        //minGridDistance: 50\n      });\n      xRenderer.labels.template.setAll({\n        radius: 10\n      });\n      xRenderer.grid.template.setAll({\n        forceHidden: true\n      });\n      var xAxis = chart.xAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: xRenderer,\n        min: 0,\n        max: 100,\n        strictMinMax: true,\n        numberFormat: \"#'%'\",\n        tooltip: am5.Tooltip[\"new\"](root, {})\n      }));\n      var yRenderer = am5radar.AxisRendererRadial[\"new\"](root, {\n        minGridDistance: 20\n      });\n      yRenderer.labels.template.setAll({\n        centerX: am5.p100,\n        fontWeight: \"500\",\n        fontSize: 18,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n        templateField: \"columnSettings\"\n      });\n      yRenderer.grid.template.setAll({\n        forceHidden: true\n      });\n      var yAxis = chart.yAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"category\",\n        renderer: yRenderer\n      }));\n      yAxis.data.setAll(data);\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n      var series1 = chart.series.push(am5radar.RadarColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        clustered: false,\n        valueXField: \"full\",\n        categoryYField: \"category\",\n        fill: root.interfaceColors.get(\"alternativeBackground\")\n      }));\n      series1.columns.template.setAll({\n        width: am5.p100,\n        fillOpacity: 0.08,\n        strokeOpacity: 0,\n        cornerRadius: 20\n      });\n      series1.data.setAll(data);\n      var series2 = chart.series.push(am5radar.RadarColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        clustered: false,\n        valueXField: \"value\",\n        categoryYField: \"category\"\n      }));\n      series2.columns.template.setAll({\n        width: am5.p100,\n        strokeOpacity: 0,\n        tooltipText: \"{category}: {valueX}%\",\n        cornerRadius: 20,\n        templateField: \"columnSettings\"\n      });\n      series2.data.setAll(data);\n\n      // Animate chart and series in\n      // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n      series1.appear(1000);\n      series2.appear(1000);\n      chart.appear(1000, 100);\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget14;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget14.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-14.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-15.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-15.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget15 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_15_chart\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/\n      var chart = root.container.children.push(am5xy.XYChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        //wheelX: \"panX\",\n        //wheelY: \"zoomX\",\n        layout: root.verticalLayout\n      }));\n\n      // Data\n      var colors = chart.get(\"colors\");\n      var data = [{\n        country: \"US\",\n        visits: 725,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-states.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"UK\",\n        visits: 625,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-kingdom.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"China\",\n        visits: 602,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/china.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"Japan\",\n        visits: 509,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/japan.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"Germany\",\n        visits: 322,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/germany.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"France\",\n        visits: 214,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/france.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"India\",\n        visits: 204,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/india.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"Spain\",\n        visits: 200,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/spain.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"Italy\",\n        visits: 165,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/italy.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"Russia\",\n        visits: 152,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/russia.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"Norway\",\n        visits: 125,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/norway.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        country: \"Canada\",\n        visits: 99,\n        icon: \"https://www.amcharts.com/wp-content/uploads/flags/canada.svg\",\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }];\n\n      // Create axes\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"country\",\n        renderer: am5xy.AxisRendererX[\"new\"](root, {\n          minGridDistance: 30\n        }),\n        bullet: function bullet(root, axis, dataItem) {\n          return am5xy.AxisBullet[\"new\"](root, {\n            location: 0.5,\n            sprite: am5.Picture[\"new\"](root, {\n              width: 24,\n              height: 24,\n              centerY: am5.p50,\n              centerX: am5.p50,\n              src: dataItem.dataContext.icon\n            })\n          });\n        }\n      }));\n      xAxis.get(\"renderer\").labels.template.setAll({\n        paddingTop: 20,\n        fontWeight: \"400\",\n        fontSize: 10,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n      xAxis.get(\"renderer\").grid.template.setAll({\n        disabled: true,\n        strokeOpacity: 0\n      });\n      xAxis.data.setAll(data);\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: am5xy.AxisRendererY[\"new\"](root, {})\n      }));\n      yAxis.get(\"renderer\").grid.template.setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        strokeDasharray: [3]\n      });\n      yAxis.get(\"renderer\").labels.template.setAll({\n        fontWeight: \"400\",\n        fontSize: 10,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n\n      // Add series\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n      var series = chart.series.push(am5xy.ColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"visits\",\n        categoryXField: \"country\"\n      }));\n      series.columns.template.setAll({\n        tooltipText: \"{categoryX}: {valueY}\",\n        tooltipY: 0,\n        strokeOpacity: 0,\n        templateField: \"columnSettings\"\n      });\n      series.columns.template.setAll({\n        strokeOpacity: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusTR: 6,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 6\n      });\n      series.data.setAll(data);\n\n      // Make stuff animate on load\n      // https://www.amcharts.com/docs/v5/concepts/animations/\n      series.appear();\n      chart.appear(1000, 100);\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget15;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget15.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-15.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-16.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-16.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget16 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_16_chart\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/\n      var chart = root.container.children.push(am5xy.XYChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        layout: root.verticalLayout\n      }));\n      var colors = chart.get(\"colors\");\n      var data = [{\n        country: \"US\",\n        visits: 725\n      }, {\n        country: \"UK\",\n        visits: 625\n      }, {\n        country: \"China\",\n        visits: 602\n      }, {\n        country: \"Japan\",\n        visits: 509\n      }, {\n        country: \"Germany\",\n        visits: 322\n      }, {\n        country: \"France\",\n        visits: 214\n      }, {\n        country: \"India\",\n        visits: 204\n      }, {\n        country: \"Spain\",\n        visits: 198\n      }, {\n        country: \"Italy\",\n        visits: 165\n      }, {\n        country: \"Russia\",\n        visits: 130\n      }, {\n        country: \"Norway\",\n        visits: 93\n      }, {\n        country: \"Canada\",\n        visits: 41\n      }];\n      prepareParetoData();\n      function prepareParetoData() {\n        var total = 0;\n        for (var i = 0; i < data.length; i++) {\n          var value = data[i].visits;\n          total += value;\n        }\n        var sum = 0;\n        for (var i = 0; i < data.length; i++) {\n          var value = data[i].visits;\n          sum += value;\n          data[i].pareto = sum / total * 100;\n        }\n      }\n\n      // Create axes\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"country\",\n        renderer: am5xy.AxisRendererX[\"new\"](root, {\n          minGridDistance: 30\n        })\n      }));\n      xAxis.get(\"renderer\").labels.template.setAll({\n        paddingTop: 10,\n        fontWeight: \"400\",\n        fontSize: 13,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n      xAxis.get(\"renderer\").grid.template.setAll({\n        disabled: true,\n        strokeOpacity: 0\n      });\n      xAxis.data.setAll(data);\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: am5xy.AxisRendererY[\"new\"](root, {})\n      }));\n      yAxis.get(\"renderer\").labels.template.setAll({\n        paddingLeft: 10,\n        fontWeight: \"400\",\n        fontSize: 13,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n      yAxis.get(\"renderer\").grid.template.setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        strokeDasharray: [3]\n      });\n      var paretoAxisRenderer = am5xy.AxisRendererY[\"new\"](root, {\n        opposite: true\n      });\n      var paretoAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: paretoAxisRenderer,\n        min: 0,\n        max: 100,\n        strictMinMax: true\n      }));\n      paretoAxis.get(\"renderer\").labels.template.setAll({\n        fontWeight: \"400\",\n        fontSize: 13,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n      paretoAxisRenderer.grid.template.set(\"forceHidden\", true);\n      paretoAxis.set(\"numberFormat\", \"#'%\");\n\n      // Add series\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n      var series = chart.series.push(am5xy.ColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"visits\",\n        categoryXField: \"country\"\n      }));\n      series.columns.template.setAll({\n        tooltipText: \"{categoryX}: {valueY}\",\n        tooltipY: 0,\n        strokeOpacity: 0,\n        cornerRadiusTL: 6,\n        cornerRadiusTR: 6\n      });\n      series.columns.template.adapters.add(\"fill\", function (fill, target) {\n        return chart.get(\"colors\").getIndex(series.dataItems.indexOf(target.dataItem));\n      });\n\n      // pareto series\n      var paretoSeries = chart.series.push(am5xy.LineSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: paretoAxis,\n        valueYField: \"pareto\",\n        categoryXField: \"country\",\n        stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark')),\n        maskBullets: false\n      }));\n      paretoSeries.bullets.push(function () {\n        return am5.Bullet[\"new\"](root, {\n          locationY: 1,\n          sprite: am5.Circle[\"new\"](root, {\n            radius: 5,\n            fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\n            stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark'))\n          })\n        });\n      });\n      series.data.setAll(data);\n      paretoSeries.data.setAll(data);\n\n      // Make stuff animate on load\n      // https://www.amcharts.com/docs/v5/concepts/animations/\n      series.appear();\n      chart.appear(1000, 100);\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget16;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget16.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-16.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-17.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-17.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget17 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_17_chart\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n      // start and end angle must be set both for chart and series\n      var chart = root.container.children.push(am5percent.PieChart[\"new\"](root, {\n        startAngle: 180,\n        endAngle: 360,\n        layout: root.verticalLayout,\n        innerRadius: am5.percent(50)\n      }));\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n      // start and end angle must be set both for chart and series\n      var series = chart.series.push(am5percent.PieSeries[\"new\"](root, {\n        startAngle: 180,\n        endAngle: 360,\n        valueField: \"value\",\n        categoryField: \"category\",\n        alignLabels: false\n      }));\n      series.labels.template.setAll({\n        fontWeight: \"400\",\n        fontSize: 13,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n      series.states.create(\"hidden\", {\n        startAngle: 180,\n        endAngle: 180\n      });\n      series.slices.template.setAll({\n        cornerRadius: 5\n      });\n      series.ticks.template.setAll({\n        forceHidden: true\n      });\n\n      // Set data\n      // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n      series.data.setAll([{\n        value: 10,\n        category: \"One\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n      }, {\n        value: 9,\n        category: \"Two\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n      }, {\n        value: 6,\n        category: \"Three\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-danger'))\n      }, {\n        value: 5,\n        category: \"Four\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-warning'))\n      }, {\n        value: 4,\n        category: \"Five\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-info'))\n      }, {\n        value: 3,\n        category: \"Six\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-secondary'))\n      }]);\n      series.appear(1000, 100);\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget17;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget17.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-17.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-18.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-18.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget18 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_18_chart\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var options = {\n      series: [{\n        name: 'Spent time',\n        data: [54, 42, 75, 110, 23, 87, 50]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: ['28%'],\n          borderRadius: 5,\n          dataLabels: {\n            position: \"top\" // top, center, bottom\n          },\n\n          startingShape: 'flat'\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: true,\n        offsetY: -28,\n        style: {\n          fontSize: '13px',\n          colors: [labelColor]\n        },\n        formatter: function formatter(val) {\n          return val; // + \"H\";\n        }\n      },\n\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['QA Analysis', 'Marketing', 'Web Dev', 'Maths', 'Front-end Dev', 'Physics', 'Phylosophy'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          }\n        },\n        crosshairs: {\n          fill: {\n            gradient: {\n              opacityFrom: 0,\n              opacityTo: 0\n            }\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          },\n          formatter: function formatter(val) {\n            return val + \"H\";\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return +val + ' hours';\n          }\n        }\n      },\n      colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget18;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget18.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-18.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-19.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-19.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget19 = function () {\n  // Private methods\n  var initChart1 = function initChart1() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_19_chart_1\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/\n      var chart = root.container.children.push(am5radar.RadarChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        innerRadius: am5.percent(20),\n        startAngle: -90,\n        endAngle: 180\n      }));\n\n      // Data\n      var data = [{\n        category: \"Research\",\n        value: 80,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-info'))\n        }\n      }, {\n        category: \"Marketing\",\n        value: 35,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-danger'))\n        }\n      }, {\n        category: \"Distribution\",\n        value: 92,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        category: \"Human Resources\",\n        value: 68,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n        }\n      }];\n\n      // Add cursor\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\n      var cursor = chart.set(\"cursor\", am5radar.RadarCursor[\"new\"](root, {\n        behavior: \"zoomX\"\n      }));\n      cursor.lineY.set(\"visible\", false);\n\n      // Create axes and their renderers\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n      var xRenderer = am5radar.AxisRendererCircular[\"new\"](root, {\n        //minGridDistance: 50\n      });\n      xRenderer.labels.template.setAll({\n        radius: 10\n      });\n      xRenderer.grid.template.setAll({\n        forceHidden: true\n      });\n      var xAxis = chart.xAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: xRenderer,\n        min: 0,\n        max: 100,\n        strictMinMax: true,\n        numberFormat: \"#'%'\",\n        tooltip: am5.Tooltip[\"new\"](root, {})\n      }));\n      var yRenderer = am5radar.AxisRendererRadial[\"new\"](root, {\n        minGridDistance: 20\n      });\n      yRenderer.labels.template.setAll({\n        centerX: am5.p100,\n        fontWeight: \"500\",\n        fontSize: 18,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n        templateField: \"columnSettings\"\n      });\n      yRenderer.grid.template.setAll({\n        forceHidden: true\n      });\n      var yAxis = chart.yAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"category\",\n        renderer: yRenderer\n      }));\n      yAxis.data.setAll(data);\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n      var series1 = chart.series.push(am5radar.RadarColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        clustered: false,\n        valueXField: \"full\",\n        categoryYField: \"category\",\n        fill: root.interfaceColors.get(\"alternativeBackground\")\n      }));\n      series1.columns.template.setAll({\n        width: am5.p100,\n        fillOpacity: 0.08,\n        strokeOpacity: 0,\n        cornerRadius: 20\n      });\n      series1.data.setAll(data);\n      var series2 = chart.series.push(am5radar.RadarColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        clustered: false,\n        valueXField: \"value\",\n        categoryYField: \"category\"\n      }));\n      series2.columns.template.setAll({\n        width: am5.p100,\n        strokeOpacity: 0,\n        tooltipText: \"{category}: {valueX}%\",\n        cornerRadius: 20,\n        templateField: \"columnSettings\"\n      });\n      series2.data.setAll(data);\n\n      // Animate chart and series in\n      // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n      series1.appear(1000);\n      series2.appear(1000);\n      chart.appear(1000, 100);\n    });\n  };\n  var initChart2 = function initChart2() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_19_chart_2\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/\n      var chart = root.container.children.push(am5radar.RadarChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        innerRadius: am5.percent(20),\n        startAngle: -90,\n        endAngle: 180\n      }));\n\n      // Data\n      var data = [{\n        category: \"Research\",\n        value: 40,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-info'))\n        }\n      }, {\n        category: \"Marketing\",\n        value: 50,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-danger'))\n        }\n      }, {\n        category: \"Distribution\",\n        value: 80,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n        }\n      }, {\n        category: \"Human Resources\",\n        value: 70,\n        full: 100,\n        columnSettings: {\n          fillOpacity: 1,\n          fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n        }\n      }];\n\n      // Add cursor\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\n      var cursor = chart.set(\"cursor\", am5radar.RadarCursor[\"new\"](root, {\n        behavior: \"zoomX\"\n      }));\n      cursor.lineY.set(\"visible\", false);\n\n      // Create axes and their renderers\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n      var xRenderer = am5radar.AxisRendererCircular[\"new\"](root, {\n        //minGridDistance: 50\n      });\n      xRenderer.labels.template.setAll({\n        radius: 10\n      });\n      xRenderer.grid.template.setAll({\n        forceHidden: true\n      });\n      var xAxis = chart.xAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: xRenderer,\n        min: 0,\n        max: 100,\n        strictMinMax: true,\n        numberFormat: \"#'%'\",\n        tooltip: am5.Tooltip[\"new\"](root, {})\n      }));\n      var yRenderer = am5radar.AxisRendererRadial[\"new\"](root, {\n        minGridDistance: 20\n      });\n      yRenderer.labels.template.setAll({\n        centerX: am5.p100,\n        fontWeight: \"500\",\n        fontSize: 18,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n        templateField: \"columnSettings\"\n      });\n      yRenderer.grid.template.setAll({\n        forceHidden: true\n      });\n      var yAxis = chart.yAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"category\",\n        renderer: yRenderer\n      }));\n      yAxis.data.setAll(data);\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n      var series1 = chart.series.push(am5radar.RadarColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        clustered: false,\n        valueXField: \"full\",\n        categoryYField: \"category\",\n        fill: root.interfaceColors.get(\"alternativeBackground\")\n      }));\n      series1.columns.template.setAll({\n        width: am5.p100,\n        fillOpacity: 0.08,\n        strokeOpacity: 0,\n        cornerRadius: 20\n      });\n      series1.data.setAll(data);\n      var series2 = chart.series.push(am5radar.RadarColumnSeries[\"new\"](root, {\n        xAxis: xAxis,\n        yAxis: yAxis,\n        clustered: false,\n        valueXField: \"value\",\n        categoryYField: \"category\"\n      }));\n      series2.columns.template.setAll({\n        width: am5.p100,\n        strokeOpacity: 0,\n        tooltipText: \"{category}: {valueX}%\",\n        cornerRadius: 20,\n        templateField: \"columnSettings\"\n      });\n      series2.data.setAll(data);\n\n      // Animate chart and series in\n      // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n      series1.appear(1000);\n      series2.appear(1000);\n      chart.appear(1000, 100);\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart1();\n      initChart2();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget19;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget19.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-19.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-2.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-2.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget2 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.querySelectorAll('.charts-widget-2');\n    [].slice.call(element).map(function (element) {\n      var height = parseInt(KTUtil.css(element, 'height'));\n      if (!element) {\n        return;\n      }\n      var color = element.getAttribute('data-kt-chart-color');\n      var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n      var strokeColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n      var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n      var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color);\n      var options = {\n        series: [{\n          name: 'Overview',\n          data: [15, 15, 45, 45, 25, 25, 55, 55, 20, 20, 37]\n        }],\n        chart: {\n          fontFamily: 'inherit',\n          type: 'area',\n          height: height,\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          },\n          sparkline: {\n            enabled: true\n          }\n        },\n        plotOptions: {},\n        legend: {\n          show: false\n        },\n        dataLabels: {\n          enabled: false\n        },\n        fill: {\n          type: 'solid',\n          opacity: 1\n        },\n        stroke: {\n          curve: 'smooth',\n          show: true,\n          width: 3,\n          colors: [baseColor]\n        },\n        xaxis: {\n          categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false,\n            style: {\n              colors: labelColor,\n              fontSize: '12px'\n            }\n          },\n          crosshairs: {\n            show: false,\n            position: 'front',\n            stroke: {\n              color: strokeColor,\n              width: 1,\n              dashArray: 3\n            }\n          },\n          tooltip: {\n            enabled: true,\n            formatter: undefined,\n            offsetY: 0,\n            style: {\n              fontSize: '12px'\n            }\n          }\n        },\n        yaxis: {\n          min: 0,\n          max: 60,\n          labels: {\n            show: false,\n            style: {\n              colors: labelColor,\n              fontSize: '12px'\n            }\n          }\n        },\n        states: {\n          normal: {\n            filter: {\n              type: 'none',\n              value: 0\n            }\n          },\n          hover: {\n            filter: {\n              type: 'none',\n              value: 0\n            }\n          },\n          active: {\n            allowMultipleDataPointsSelection: false,\n            filter: {\n              type: 'none',\n              value: 0\n            }\n          }\n        },\n        tooltip: {\n          style: {\n            fontSize: '12px'\n          },\n          y: {\n            formatter: function formatter(val) {\n              return val;\n            }\n          }\n        },\n        colors: [lightColor],\n        markers: {\n          colors: [lightColor],\n          strokeColor: [baseColor],\n          strokeWidth: 3\n        }\n      };\n      var chart = new ApexCharts(element, options);\n\n      // Set timeout to properly get the parent elements width\n      setTimeout(function () {\n        chart.render();\n      }, 200);\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget2;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget2.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-2.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-20.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-20.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget20 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_20\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-danger');\n    var lightColor = KTUtil.getCssVariableValue('--bs-danger');\n    var chartInfo = element.getAttribute('data-kt-chart-info');\n    var options = {\n      series: [{\n        name: chartInfo,\n        data: [34.5, 34.5, 35, 35, 35.5, 35.5, 35, 35, 35.5, 35.5, 35, 35, 34.5, 34.5, 35, 35, 35.4, 35.4, 35]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0,\n          stops: [0, 80, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 6,\n        labels: {\n          rotate: 0,\n          rotateAlways: true,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        max: 36.3,\n        min: 33,\n        tickAmount: 6,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          },\n          formatter: function formatter(val) {\n            return '$' + parseInt(10 * val);\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return '$' + parseInt(10 * val);\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget20;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget20.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-20.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-21.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-21.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget21 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_21\");\n    if (!element) {\n      return;\n    }\n    var options = {\n      \"type\": \"serial\",\n      \"theme\": \"light\",\n      \"legend\": {\n        \"equalWidths\": false,\n        \"useGraphSettings\": true,\n        \"valueAlign\": \"left\",\n        \"valueWidth\": 120\n      },\n      \"dataProvider\": [{\n        \"date\": \"2012-01-01\",\n        \"distance\": 227,\n        \"townName\": \"New York\",\n        \"townName2\": \"New York\",\n        \"townSize\": 25,\n        \"latitude\": 40.71,\n        \"duration\": 408\n      }, {\n        \"date\": \"2012-01-02\",\n        \"distance\": 371,\n        \"townName\": \"Washington\",\n        \"townSize\": 14,\n        \"latitude\": 38.89,\n        \"duration\": 482\n      }, {\n        \"date\": \"2012-01-03\",\n        \"distance\": 433,\n        \"townName\": \"Wilmington\",\n        \"townSize\": 6,\n        \"latitude\": 34.22,\n        \"duration\": 562\n      }, {\n        \"date\": \"2012-01-04\",\n        \"distance\": 345,\n        \"townName\": \"Jacksonville\",\n        \"townSize\": 7,\n        \"latitude\": 30.35,\n        \"duration\": 379\n      }, {\n        \"date\": \"2012-01-05\",\n        \"distance\": 480,\n        \"townName\": \"Miami\",\n        \"townName2\": \"Miami\",\n        \"townSize\": 10,\n        \"latitude\": 25.83,\n        \"duration\": 501\n      }, {\n        \"date\": \"2012-01-06\",\n        \"distance\": 386,\n        \"townName\": \"Tallahassee\",\n        \"townSize\": 7,\n        \"latitude\": 30.46,\n        \"duration\": 443\n      }, {\n        \"date\": \"2012-01-07\",\n        \"distance\": 348,\n        \"townName\": \"New Orleans\",\n        \"townSize\": 10,\n        \"latitude\": 29.94,\n        \"duration\": 405\n      }, {\n        \"date\": \"2012-01-08\",\n        \"distance\": 238,\n        \"townName\": \"Houston\",\n        \"townName2\": \"Houston\",\n        \"townSize\": 16,\n        \"latitude\": 29.76,\n        \"duration\": 309\n      }, {\n        \"date\": \"2012-01-09\",\n        \"distance\": 218,\n        \"townName\": \"Dalas\",\n        \"townSize\": 17,\n        \"latitude\": 32.8,\n        \"duration\": 287\n      }, {\n        \"date\": \"2012-01-10\",\n        \"distance\": 349,\n        \"townName\": \"Oklahoma City\",\n        \"townSize\": 11,\n        \"latitude\": 35.49,\n        \"duration\": 485\n      }, {\n        \"date\": \"2012-01-11\",\n        \"distance\": 603,\n        \"townName\": \"Kansas City\",\n        \"townSize\": 10,\n        \"latitude\": 39.1,\n        \"duration\": 890\n      }, {\n        \"date\": \"2012-01-12\",\n        \"distance\": 534,\n        \"townName\": \"Denver\",\n        \"townName2\": \"Denver\",\n        \"townSize\": 18,\n        \"latitude\": 39.74,\n        \"duration\": 810\n      }, {\n        \"date\": \"2012-01-13\",\n        \"townName\": \"Salt Lake City\",\n        \"townSize\": 12,\n        \"distance\": 425,\n        \"duration\": 670,\n        \"latitude\": 40.75,\n        \"dashLength\": 8,\n        \"alpha\": 0.4\n      }, {\n        \"date\": \"2012-01-14\",\n        \"latitude\": 36.1,\n        \"duration\": 470,\n        \"townName\": \"Las Vegas\",\n        \"townName2\": \"Las Vegas\"\n      }, {\n        \"date\": \"2012-01-15\"\n      }, {\n        \"date\": \"2012-01-16\"\n      }, {\n        \"date\": \"2012-01-17\"\n      }, {\n        \"date\": \"2012-01-18\"\n      }, {\n        \"date\": \"2012-01-19\"\n      }],\n      \"valueAxes\": [{\n        \"id\": \"distanceAxis\",\n        \"axisAlpha\": 0,\n        \"gridAlpha\": 0,\n        \"position\": \"left\",\n        \"title\": \"distance\"\n      }, {\n        \"id\": \"latitudeAxis\",\n        \"axisAlpha\": 0,\n        \"gridAlpha\": 0,\n        \"labelsEnabled\": false,\n        \"position\": \"right\"\n      }, {\n        \"id\": \"durationAxis\",\n        \"duration\": \"mm\",\n        \"durationUnits\": {\n          \"hh\": \"h \",\n          \"mm\": \"min\"\n        },\n        \"axisAlpha\": 0,\n        \"gridAlpha\": 0,\n        \"inside\": true,\n        \"position\": \"right\",\n        \"title\": \"duration\"\n      }],\n      \"graphs\": [{\n        \"alphaField\": \"alpha\",\n        \"balloonText\": \"[[value]] miles\",\n        \"dashLengthField\": \"dashLength\",\n        \"fillAlphas\": 0.7,\n        \"legendPeriodValueText\": \"total: [[value.sum]] mi\",\n        \"legendValueText\": \"[[value]] mi\",\n        \"title\": \"distance\",\n        \"type\": \"column\",\n        \"valueField\": \"distance\",\n        \"valueAxis\": \"distanceAxis\"\n      }, {\n        \"balloonText\": \"latitude:[[value]]\",\n        \"bullet\": \"round\",\n        \"bulletBorderAlpha\": 1,\n        \"useLineColorForBulletBorder\": true,\n        \"bulletColor\": \"#FFFFFF\",\n        \"bulletSizeField\": \"townSize\",\n        \"dashLengthField\": \"dashLength\",\n        \"descriptionField\": \"townName\",\n        \"labelPosition\": \"right\",\n        \"labelText\": \"[[townName2]]\",\n        \"legendValueText\": \"[[value]]/[[description]]\",\n        \"title\": \"latitude/city\",\n        \"fillAlphas\": 0,\n        \"valueField\": \"latitude\",\n        \"valueAxis\": \"latitudeAxis\"\n      }, {\n        \"bullet\": \"square\",\n        \"bulletBorderAlpha\": 1,\n        \"bulletBorderThickness\": 1,\n        \"dashLengthField\": \"dashLength\",\n        \"legendValueText\": \"[[value]]\",\n        \"title\": \"duration\",\n        \"fillAlphas\": 0,\n        \"valueField\": \"duration\",\n        \"valueAxis\": \"durationAxis\"\n      }],\n      \"chartCursor\": {\n        \"categoryBalloonDateFormat\": \"DD\",\n        \"cursorAlpha\": 0.1,\n        \"cursorColor\": \"#000000\",\n        \"fullWidth\": true,\n        \"valueBalloonsEnabled\": false,\n        \"zoomable\": false\n      },\n      \"dataDateFormat\": \"YYYY-MM-DD\",\n      \"categoryField\": \"date\",\n      \"categoryAxis\": {\n        \"dateFormats\": [{\n          \"period\": \"DD\",\n          \"format\": \"DD\"\n        }, {\n          \"period\": \"WW\",\n          \"format\": \"MMM DD\"\n        }, {\n          \"period\": \"MM\",\n          \"format\": \"MMM\"\n        }, {\n          \"period\": \"YYYY\",\n          \"format\": \"YYYY\"\n        }],\n        \"parseDates\": true,\n        \"autoGridCount\": false,\n        \"axisColor\": \"#555555\",\n        \"gridAlpha\": 0.1,\n        \"gridColor\": \"#FFFFFF\",\n        \"gridCount\": 50\n      },\n      \"export\": {\n        \"enabled\": true\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget21;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget21.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-21.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-22.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-22.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget22 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var options = {\n      series: data,\n      chart: {\n        fontFamily: 'inherit',\n        type: 'donut',\n        width: 250\n      },\n      plotOptions: {\n        pie: {\n          donut: {\n            size: '50%',\n            labels: {\n              value: {\n                fontSize: '10px'\n              }\n            }\n          }\n        }\n      },\n      colors: [KTUtil.getCssVariableValue('--bs-info'), KTUtil.getCssVariableValue('--bs-success'), KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-danger')],\n      stroke: {\n        width: 0\n      },\n      labels: ['Sales', 'Sales', 'Sales', 'Sales'],\n      legend: {\n        show: false\n      },\n      fill: {\n        type: 'false'\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_chart_widgets_22_tab_1', '#kt_chart_widgets_22_chart_1', [20, 100, 15, 25], true);\n      initChart('#kt_chart_widgets_22_tab_2', '#kt_chart_widgets_22_chart_2', [70, 13, 11, 2], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget22;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget22.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2hhcnRzL3dpZGdldC0yMi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLElBQUlBLGdCQUFnQixHQUFHLFlBQVk7RUFDL0I7RUFDQSxJQUFJQyxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBWUMsV0FBVyxFQUFFQyxhQUFhLEVBQUVDLElBQUksRUFBRUMsYUFBYSxFQUFFO0lBQ3RFLElBQUlDLE9BQU8sR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUNMLGFBQWEsQ0FBQztJQUVuRCxJQUFJLENBQUNHLE9BQU8sRUFBRTtNQUNWO0lBQ0o7SUFFQSxJQUFJRyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNOLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUVwRCxJQUFJTyxPQUFPLEdBQUc7TUFDVkMsTUFBTSxFQUFFVixJQUFJO01BQ1pXLEtBQUssRUFBRTtRQUNIQyxVQUFVLEVBQUUsU0FBUztRQUNyQkMsSUFBSSxFQUFFLE9BQU87UUFDYkMsS0FBSyxFQUFFO01BQ1gsQ0FBQztNQUNEQyxXQUFXLEVBQUU7UUFDVEMsR0FBRyxFQUFFO1VBQ0RDLEtBQUssRUFBRTtZQUNIQyxJQUFJLEVBQUUsS0FBSztZQUNYQyxNQUFNLEVBQUU7Y0FDSkMsS0FBSyxFQUFFO2dCQUNIQyxRQUFRLEVBQUU7Y0FDZDtZQUNKO1VBQ0o7UUFDSjtNQUNKLENBQUM7TUFDREMsTUFBTSxFQUFFLENBQ0pmLE1BQU0sQ0FBQ2dCLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxFQUN2Q2hCLE1BQU0sQ0FBQ2dCLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxFQUMxQ2hCLE1BQU0sQ0FBQ2dCLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxFQUMxQ2hCLE1BQU0sQ0FBQ2dCLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxDQUM1QztNQUNEQyxNQUFNLEVBQUU7UUFDTlYsS0FBSyxFQUFFO01BQ1QsQ0FBQztNQUNESyxNQUFNLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUM7TUFDNUNNLE1BQU0sRUFBRTtRQUNKQyxJQUFJLEVBQUU7TUFDVixDQUFDO01BQ0RDLElBQUksRUFBRTtRQUNGZCxJQUFJLEVBQUU7TUFDVjtJQUNKLENBQUM7SUFFRCxJQUFJRixLQUFLLEdBQUcsSUFBSWlCLFVBQVUsQ0FBQzFCLE9BQU8sRUFBRU8sT0FBTyxDQUFDO0lBRTVDLElBQUlvQixJQUFJLEdBQUcsS0FBSztJQUVoQixJQUFJQyxHQUFHLEdBQUczQixRQUFRLENBQUNDLGFBQWEsQ0FBQ04sV0FBVyxDQUFDO0lBRTdDLElBQUlHLGFBQWEsS0FBSyxJQUFJLEVBQUU7TUFDeEJVLEtBQUssQ0FBQ29CLE1BQU0sRUFBRTtNQUNkRixJQUFJLEdBQUcsSUFBSTtJQUNmO0lBRUFDLEdBQUcsQ0FBQ0UsZ0JBQWdCLENBQUMsY0FBYyxFQUFFLFVBQVVDLEtBQUssRUFBRTtNQUNsRCxJQUFJSixJQUFJLElBQUksS0FBSyxFQUFFO1FBQ2ZsQixLQUFLLENBQUNvQixNQUFNLEVBQUU7UUFDZEYsSUFBSSxHQUFHLElBQUk7TUFDZjtJQUNKLENBQUMsQ0FBQztFQUNOLENBQUM7O0VBRUQ7RUFDQSxPQUFPO0lBQ0hBLElBQUksRUFBRSxTQUFBQSxLQUFBLEVBQVk7TUFDZGhDLFNBQVMsQ0FBQyw0QkFBNEIsRUFBRSw4QkFBOEIsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQztNQUNoR0EsU0FBUyxDQUFDLDRCQUE0QixFQUFFLDhCQUE4QixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDO0lBQ25HO0VBQ0osQ0FBQztBQUNMLENBQUMsRUFBRTs7QUFFSDtBQUNBLElBQUksSUFBNkIsRUFBRTtFQUMvQnFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHdkMsZ0JBQWdCO0FBQ3JDOztBQUVBO0FBQ0FXLE1BQU0sQ0FBQzZCLGtCQUFrQixDQUFDLFlBQVc7RUFDakN4QyxnQkFBZ0IsQ0FBQ2lDLElBQUksRUFBRTtBQUMzQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2hhcnRzL3dpZGdldC0yMi5qcz8xODI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8gQ2xhc3MgZGVmaW5pdGlvblxyXG52YXIgS1RDaGFydHNXaWRnZXQyMiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIFByaXZhdGUgbWV0aG9kc1xyXG4gICAgdmFyIGluaXRDaGFydCA9IGZ1bmN0aW9uKHRhYlNlbGVjdG9yLCBjaGFydFNlbGVjdG9yLCBkYXRhLCBpbml0QnlEZWZhdWx0KSB7XHJcbiAgICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNoYXJ0U2VsZWN0b3IpOyAgICAgICAgXHJcblxyXG4gICAgICAgIGlmICghZWxlbWVudCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfSAgXHJcbiAgICAgICAgICBcclxuICAgICAgICB2YXIgaGVpZ2h0ID0gcGFyc2VJbnQoS1RVdGlsLmNzcyhlbGVtZW50LCAnaGVpZ2h0JykpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHZhciBvcHRpb25zID0ge1xyXG4gICAgICAgICAgICBzZXJpZXM6IGRhdGEsICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgY2hhcnQ6IHsgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZm9udEZhbWlseTogJ2luaGVyaXQnLCBcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdkb251dCcsXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjUwLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBwbG90T3B0aW9uczoge1xyXG4gICAgICAgICAgICAgICAgcGllOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9udXQ6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogJzUwJScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzEwcHgnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbG9yczogW1xyXG4gICAgICAgICAgICAgICAgS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtaW5mbycpLCBcclxuICAgICAgICAgICAgICAgIEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLXN1Y2Nlc3MnKSwgXHJcbiAgICAgICAgICAgICAgICBLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1wcmltYXJ5JyksIFxyXG4gICAgICAgICAgICAgICAgS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtZGFuZ2VyJykgXHJcbiAgICAgICAgICAgIF0sICAgICAgICAgICBcclxuICAgICAgICAgICAgc3Ryb2tlOiB7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgbGFiZWxzOiBbJ1NhbGVzJywgJ1NhbGVzJywgJ1NhbGVzJywgJ1NhbGVzJ10sXHJcbiAgICAgICAgICAgIGxlZ2VuZDoge1xyXG4gICAgICAgICAgICAgICAgc2hvdzogZmFsc2UsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGZpbGw6IHtcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdmYWxzZScsICAgICAgICAgIFxyXG4gICAgICAgICAgICB9ICAgICBcclxuICAgICAgICB9OyAgICAgICAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgICB2YXIgY2hhcnQgPSBuZXcgQXBleENoYXJ0cyhlbGVtZW50LCBvcHRpb25zKTtcclxuXHJcbiAgICAgICAgdmFyIGluaXQgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgdmFyIHRhYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFiU2VsZWN0b3IpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChpbml0QnlEZWZhdWx0ID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGNoYXJ0LnJlbmRlcigpO1xyXG4gICAgICAgICAgICBpbml0ID0gdHJ1ZTtcclxuICAgICAgICB9ICAgICAgICBcclxuXHJcbiAgICAgICAgdGFiLmFkZEV2ZW50TGlzdGVuZXIoJ3Nob3duLmJzLnRhYicsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICBpZiAoaW5pdCA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgY2hhcnQucmVuZGVyKCk7XHJcbiAgICAgICAgICAgICAgICBpbml0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkgeyAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGluaXRDaGFydCgnI2t0X2NoYXJ0X3dpZGdldHNfMjJfdGFiXzEnLCAnI2t0X2NoYXJ0X3dpZGdldHNfMjJfY2hhcnRfMScsIFsyMCwgMTAwLCAxNSwgMjVdLCB0cnVlKTtcclxuICAgICAgICAgICAgaW5pdENoYXJ0KCcja3RfY2hhcnRfd2lkZ2V0c18yMl90YWJfMicsICcja3RfY2hhcnRfd2lkZ2V0c18yMl9jaGFydF8yJywgWzcwLCAxMywgMTEsIDJdLCBmYWxzZSk7ICAgICAgICAgICAgICBcclxuICAgICAgICB9ICAgXHJcbiAgICB9XHJcbn0oKTtcclxuXHJcbi8vIFdlYnBhY2sgc3VwcG9ydFxyXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIG1vZHVsZS5leHBvcnRzID0gS1RDaGFydHNXaWRnZXQyMjtcclxufVxyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbigpIHtcclxuICAgIEtUQ2hhcnRzV2lkZ2V0MjIuaW5pdCgpO1xyXG59KTsiXSwibmFtZXMiOlsiS1RDaGFydHNXaWRnZXQyMiIsImluaXRDaGFydCIsInRhYlNlbGVjdG9yIiwiY2hhcnRTZWxlY3RvciIsImRhdGEiLCJpbml0QnlEZWZhdWx0IiwiZWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImhlaWdodCIsInBhcnNlSW50IiwiS1RVdGlsIiwiY3NzIiwib3B0aW9ucyIsInNlcmllcyIsImNoYXJ0IiwiZm9udEZhbWlseSIsInR5cGUiLCJ3aWR0aCIsInBsb3RPcHRpb25zIiwicGllIiwiZG9udXQiLCJzaXplIiwibGFiZWxzIiwidmFsdWUiLCJmb250U2l6ZSIsImNvbG9ycyIsImdldENzc1ZhcmlhYmxlVmFsdWUiLCJzdHJva2UiLCJsZWdlbmQiLCJzaG93IiwiZmlsbCIsIkFwZXhDaGFydHMiLCJpbml0IiwidGFiIiwicmVuZGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwibW9kdWxlIiwiZXhwb3J0cyIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-22.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-23.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-23.js ***!
  \******************************************************/
/***/ ((module) => {

eval("// Class definition\nvar KTChartsWidget23 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_23\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/\n      var chart = root.container.children.push(am5xy.XYChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        layout: root.verticalLayout\n      }));\n      var data = [{\n        year: \"2016\",\n        income: 23.5,\n        expenses: 21.1,\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n        }\n      }, {\n        year: \"2017\",\n        income: 26.2,\n        expenses: 30.5,\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n        }\n      }, {\n        year: \"2018\",\n        income: 30.1,\n        expenses: 34.9,\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n        }\n      }, {\n        year: \"2019\",\n        income: 29.5,\n        expenses: 31.1,\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n        }\n      }, {\n        year: \"2020\",\n        income: 30.6,\n        expenses: 28.2,\n        strokeSettings: {\n          strokeWidth: 3,\n          strokeDasharray: [5, 5]\n        },\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n        }\n      }, {\n        year: \"2021\",\n        income: 40.6,\n        expenses: 28.2,\n        strokeSettings: {\n          strokeWidth: 3,\n          strokeDasharray: [5, 5]\n        },\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n        }\n      }, {\n        year: \"2022\",\n        income: 34.1,\n        expenses: 32.9,\n        strokeSettings: {\n          strokeWidth: 3,\n          strokeDasharray: [5, 5]\n        },\n        columnSettings: {\n          fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n        }\n      }];\n\n      // Create axes\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"year\",\n        renderer: am5xy.AxisRendererX[\"new\"](root, {})\n        //tooltip: am5.Tooltip.new(root, {}),\n      }));\n\n      xAxis.data.setAll(data);\n      xAxis.get(\"renderer\").labels.template.setAll({\n        paddingTop: 20,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\"))\n      });\n      xAxis.get(\"renderer\").grid.template.setAll({\n        disabled: true,\n        strokeOpacity: 0\n      });\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        min: 0,\n        extraMax: 0.1,\n        renderer: am5xy.AxisRendererY[\"new\"](root, {})\n      }));\n      yAxis.get(\"renderer\").labels.template.setAll({\n        paddingTop: 0,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\"))\n      });\n      yAxis.get(\"renderer\").grid.template.setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-300\")),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        strokeDasharray: [3]\n      });\n\n      // Add series\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n      var series1 = chart.series.push(am5xy.ColumnSeries[\"new\"](root, {\n        name: \"Income\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"income\",\n        categoryXField: \"year\",\n        tooltip: am5.Tooltip[\"new\"](root, {\n          pointerOrientation: \"horizontal\",\n          labelText: \"{name} in {categoryX}: {valueY} {info}\"\n        })\n      }));\n      series1.columns.template.setAll({\n        tooltipY: am5.percent(10),\n        templateField: \"columnSettings\"\n      });\n      series1.data.setAll(data);\n      var series2 = chart.series.push(am5xy.LineSeries[\"new\"](root, {\n        name: \"Expenses\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"expenses\",\n        categoryXField: \"year\",\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n        stroke: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n        tooltip: am5.Tooltip[\"new\"](root, {\n          pointerOrientation: \"horizontal\",\n          labelText: \"{name} in {categoryX}: {valueY} {info}\"\n        })\n      }));\n      series2.strokes.template.setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue(\"--bs-success\"))\n      });\n      series2.strokes.template.setAll({\n        strokeWidth: 3,\n        templateField: \"strokeSettings\"\n      });\n      series2.data.setAll(data);\n      series2.bullets.push(function () {\n        return am5.Bullet[\"new\"](root, {\n          sprite: am5.Circle[\"new\"](root, {\n            strokeWidth: 3,\n            stroke: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n            radius: 5,\n            fill: am5.color(KTUtil.getCssVariableValue(\"--bs-light-success\"))\n          })\n        });\n      });\n      series1.columns.template.setAll({\n        strokeOpacity: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusTR: 6,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 6\n      });\n      chart.set(\"cursor\", am5xy.XYCursor[\"new\"](root, {}));\n      chart.get(\"cursor\").lineX.setAll({\n        visible: false\n      });\n      chart.get(\"cursor\").lineY.setAll({\n        visible: false\n      });\n\n      // Add legend\n      // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\n      var legend = chart.children.push(am5.Legend[\"new\"](root, {\n        centerX: am5.p50,\n        x: am5.p50\n      }));\n      legend.data.setAll(chart.series.values);\n\n      // Make stuff animate on load\n      // https://www.amcharts.com/docs/v5/concepts/animations/\n      chart.appear(1000, 100);\n      series1.appear();\n    }); // end am5.ready()\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget23;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget23.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-23.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-24.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-24.js ***!
  \******************************************************/
/***/ ((module) => {

eval("// Class definition\nvar KTChartsWidget24 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === 'undefined') {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_24\");\n    if (!element) {\n      return;\n    }\n\n    // On amchart ready\n    am5.ready(function () {\n      var usData = [{\n        \"age\": \"0 to 5\",\n        \"male\": 10175713,\n        \"female\": 9736305\n      }, {\n        \"age\": \"5 to 9\",\n        \"male\": 10470147,\n        \"female\": 10031835\n      }, {\n        \"age\": \"10 to 14\",\n        \"male\": 10561873,\n        \"female\": 10117913\n      }, {\n        \"age\": \"15 to 17\",\n        \"male\": 6447043,\n        \"female\": 6142996\n      }, {\n        \"age\": \"18 to 21\",\n        \"male\": 9349745,\n        \"female\": 8874664\n      }, {\n        \"age\": \"22 to 24\",\n        \"male\": 6722248,\n        \"female\": 6422017\n      }, {\n        \"age\": \"25 to 29\",\n        \"male\": 10989596,\n        \"female\": 10708414\n      }, {\n        \"age\": \"30 to 34\",\n        \"male\": 10625791,\n        \"female\": 10557848\n      }, {\n        \"age\": \"35 to 39\",\n        \"male\": 9899569,\n        \"female\": 9956213\n      }, {\n        \"age\": \"40 to 44\",\n        \"male\": 10330986,\n        \"female\": 10465142\n      }, {\n        \"age\": \"45 to 49\",\n        \"male\": 10571984,\n        \"female\": 10798384\n      }, {\n        \"age\": \"50 to 54\",\n        \"male\": 11051409,\n        \"female\": 11474081\n      }, {\n        \"age\": \"55 to 59\",\n        \"male\": 10173646,\n        \"female\": 10828301\n      }, {\n        \"age\": \"60 to 64\",\n        \"male\": 8824852,\n        \"female\": 9590829\n      }, {\n        \"age\": \"65 to 69\",\n        \"male\": 6876271,\n        \"female\": 7671175\n      }, {\n        \"age\": \"70 to 74\",\n        \"male\": 4867513,\n        \"female\": 5720208\n      }, {\n        \"age\": \"75 to 79\",\n        \"male\": 3416432,\n        \"female\": 4313697\n      }, {\n        \"age\": \"80 to 84\",\n        \"male\": 2378691,\n        \"female\": 3432738\n      }, {\n        \"age\": \"85 and Older\",\n        \"male\": 2000771,\n        \"female\": 3937981\n      }];\n      var stateData = {\n        \"AK\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 28346,\n          \"female\": 26607\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 26350,\n          \"female\": 24821\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 15929,\n          \"female\": 14735\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 25360,\n          \"female\": 19030\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 20755,\n          \"female\": 15663\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 32415,\n          \"female\": 28259\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 28232,\n          \"female\": 25272\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 24217,\n          \"female\": 22002\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 23429,\n          \"female\": 21968\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 24764,\n          \"female\": 22784\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 26276,\n          \"female\": 25063\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 27623,\n          \"female\": 25503\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 26300,\n          \"female\": 25198\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 21798,\n          \"female\": 18970\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 13758,\n          \"female\": 12899\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 8877,\n          \"female\": 8269\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 4834,\n          \"female\": 4894\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 3015,\n          \"female\": 3758\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 1882,\n          \"female\": 3520\n        }],\n        \"AL\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 150860,\n          \"female\": 144194\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 161596,\n          \"female\": 156841\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 98307,\n          \"female\": 94462\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 142173,\n          \"female\": 136514\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 99164,\n          \"female\": 101444\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 154977,\n          \"female\": 159815\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 150036,\n          \"female\": 156764\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 141667,\n          \"female\": 152220\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 155693,\n          \"female\": 159835\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 156413,\n          \"female\": 163909\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 156380,\n          \"female\": 149334\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 166863,\n          \"female\": 178187\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 156994,\n          \"female\": 169355\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 140659,\n          \"female\": 156638\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 112724,\n          \"female\": 128494\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 79258,\n          \"female\": 96507\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 55122,\n          \"female\": 75371\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 36252,\n          \"female\": 53976\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 25955,\n          \"female\": 55667\n        }],\n        \"AR\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 98246,\n          \"female\": 93534\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 99707,\n          \"female\": 96862\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 60521,\n          \"female\": 57735\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 87209,\n          \"female\": 81936\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 59114,\n          \"female\": 59387\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 96190,\n          \"female\": 96573\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 96273,\n          \"female\": 95632\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 90371,\n          \"female\": 90620\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 91881,\n          \"female\": 93777\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 93238,\n          \"female\": 95476\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 103613,\n          \"female\": 97603\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 98960,\n          \"female\": 102953\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 92133,\n          \"female\": 100676\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 84082,\n          \"female\": 90243\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 70121,\n          \"female\": 76669\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 52154,\n          \"female\": 61686\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 36856,\n          \"female\": 44371\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 23098,\n          \"female\": 35328\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 18146,\n          \"female\": 35234\n        }],\n        \"AZ\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 221511,\n          \"female\": 212324\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 233530,\n          \"female\": 222965\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 138926,\n          \"female\": 132399\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 200240,\n          \"female\": 187786\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 142852,\n          \"female\": 132457\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 231488,\n          \"female\": 215985\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 223754,\n          \"female\": 214946\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 206718,\n          \"female\": 202482\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 213591,\n          \"female\": 210621\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 205830,\n          \"female\": 206081\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 231249,\n          \"female\": 224385\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 210386,\n          \"female\": 218328\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 192614,\n          \"female\": 209767\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 178325,\n          \"female\": 200313\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 155852,\n          \"female\": 174407\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 121878,\n          \"female\": 136840\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 87470,\n          \"female\": 96953\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 58553,\n          \"female\": 69559\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 44321,\n          \"female\": 74242\n        }],\n        \"CA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 1283763,\n          \"female\": 1228013\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 1297819,\n          \"female\": 1245016\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 811114,\n          \"female\": 773387\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 1179739,\n          \"female\": 1100368\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 883323,\n          \"female\": 825833\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 1478557,\n          \"female\": 1387516\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 1399835,\n          \"female\": 1348430\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 1287803,\n          \"female\": 1271908\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 1308311,\n          \"female\": 1309907\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 1306719,\n          \"female\": 1303528\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 1295030,\n          \"female\": 1240201\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 1305323,\n          \"female\": 1330645\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 1161821,\n          \"female\": 1223440\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 975874,\n          \"female\": 1060921\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 734814,\n          \"female\": 833926\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 515115,\n          \"female\": 604615\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 363282,\n          \"female\": 455568\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 264126,\n          \"female\": 363937\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 234767,\n          \"female\": 427170\n        }],\n        \"CO\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 173245,\n          \"female\": 163629\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 179579,\n          \"female\": 170930\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 102577,\n          \"female\": 98569\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 152713,\n          \"female\": 139268\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 116654,\n          \"female\": 108238\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 204625,\n          \"female\": 188680\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 200624,\n          \"female\": 188616\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 183386,\n          \"female\": 175326\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 184422,\n          \"female\": 173654\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 174730,\n          \"female\": 172981\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 179803,\n          \"female\": 173524\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 183543,\n          \"female\": 187757\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 170717,\n          \"female\": 179537\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 150815,\n          \"female\": 155924\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 111094,\n          \"female\": 119530\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 72252,\n          \"female\": 80168\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 49142,\n          \"female\": 59393\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 31894,\n          \"female\": 43881\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 26852,\n          \"female\": 50634\n        }],\n        \"CT\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 97647,\n          \"female\": 93798\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 118032,\n          \"female\": 113043\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 75546,\n          \"female\": 71687\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 106966,\n          \"female\": 102763\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 71125,\n          \"female\": 64777\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 112189,\n          \"female\": 108170\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 107223,\n          \"female\": 109096\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 102424,\n          \"female\": 106008\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 116664,\n          \"female\": 123744\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 131872,\n          \"female\": 139406\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 110043,\n          \"female\": 104940\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 138644,\n          \"female\": 146532\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 126670,\n          \"female\": 132895\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 104701,\n          \"female\": 114339\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 80178,\n          \"female\": 91052\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 55237,\n          \"female\": 65488\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 38844,\n          \"female\": 51544\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 28908,\n          \"female\": 43036\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 28694,\n          \"female\": 59297\n        }],\n        \"DC\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 20585,\n          \"female\": 19848\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 12723,\n          \"female\": 11991\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 7740,\n          \"female\": 7901\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 22350,\n          \"female\": 25467\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 15325,\n          \"female\": 19085\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 35295,\n          \"female\": 41913\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 32716,\n          \"female\": 35553\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 23748,\n          \"female\": 24922\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 21158,\n          \"female\": 20113\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 19279,\n          \"female\": 18956\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 14999,\n          \"female\": 15518\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 19249,\n          \"female\": 19279\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 17592,\n          \"female\": 18716\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 14272,\n          \"female\": 17892\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 9740,\n          \"female\": 13375\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 8221,\n          \"female\": 9761\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 5071,\n          \"female\": 7601\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 3399,\n          \"female\": 5619\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 3212,\n          \"female\": 7300\n        }],\n        \"DE\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 28382,\n          \"female\": 27430\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 29482,\n          \"female\": 27484\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 17589,\n          \"female\": 16828\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 26852,\n          \"female\": 26911\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 19006,\n          \"female\": 18413\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 30933,\n          \"female\": 31146\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 28602,\n          \"female\": 29431\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 26498,\n          \"female\": 28738\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 27674,\n          \"female\": 28519\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 30582,\n          \"female\": 32924\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 28224,\n          \"female\": 28735\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 32444,\n          \"female\": 35052\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 29048,\n          \"female\": 34377\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 27925,\n          \"female\": 30017\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 22767,\n          \"female\": 26707\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 17121,\n          \"female\": 19327\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 11479,\n          \"female\": 14264\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 7473,\n          \"female\": 10353\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 6332,\n          \"female\": 11385\n        }],\n        \"FL\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 552054,\n          \"female\": 529003\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 582351,\n          \"female\": 558377\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 363538,\n          \"female\": 345048\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 528013,\n          \"female\": 498162\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 385515,\n          \"female\": 368754\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 641710,\n          \"female\": 622134\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 602467,\n          \"female\": 602634\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 579722,\n          \"female\": 585089\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 623074,\n          \"female\": 639410\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 659376,\n          \"female\": 677305\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 567479,\n          \"female\": 543273\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 687625,\n          \"female\": 723103\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 626363,\n          \"female\": 685728\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 566282,\n          \"female\": 651192\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 517513,\n          \"female\": 589377\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 407275,\n          \"female\": 470688\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 305530,\n          \"female\": 361107\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 219362,\n          \"female\": 281016\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 184760,\n          \"female\": 314363\n        }],\n        \"GA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 338979,\n          \"female\": 326326\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 356404,\n          \"female\": 351833\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 211908,\n          \"female\": 203412\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 305617,\n          \"female\": 289233\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 214032,\n          \"female\": 206526\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 342885,\n          \"female\": 343115\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 333159,\n          \"female\": 348125\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 325121,\n          \"female\": 345251\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 348120,\n          \"female\": 363703\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 343559,\n          \"female\": 358754\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 362147,\n          \"female\": 340071\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 338424,\n          \"female\": 359362\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 294734,\n          \"female\": 325653\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 254497,\n          \"female\": 285276\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 198714,\n          \"female\": 226714\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 135107,\n          \"female\": 164091\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 88135,\n          \"female\": 115830\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 53792,\n          \"female\": 84961\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 37997,\n          \"female\": 85126\n        }],\n        \"HI\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 46668,\n          \"female\": 44389\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 42590,\n          \"female\": 41289\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 24759,\n          \"female\": 23961\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 39937,\n          \"female\": 32348\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 35270,\n          \"female\": 28495\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 58033,\n          \"female\": 48700\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 51544,\n          \"female\": 47286\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 44144,\n          \"female\": 42208\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 45731,\n          \"female\": 43404\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 44336,\n          \"female\": 44134\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 44115,\n          \"female\": 40426\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 46481,\n          \"female\": 46908\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 45959,\n          \"female\": 47379\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 42420,\n          \"female\": 43735\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 34846,\n          \"female\": 36670\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 22981,\n          \"female\": 25496\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 15219,\n          \"female\": 18755\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 11142,\n          \"female\": 17952\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 13696,\n          \"female\": 22893\n        }],\n        \"IA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 100400,\n          \"female\": 96170\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 104674,\n          \"female\": 98485\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 62452,\n          \"female\": 59605\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 96966,\n          \"female\": 91782\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 66307,\n          \"female\": 62504\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 98079,\n          \"female\": 93653\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 100924,\n          \"female\": 97248\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 90980,\n          \"female\": 89632\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 92961,\n          \"female\": 90218\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 98877,\n          \"female\": 96654\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 104279,\n          \"female\": 100558\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 109267,\n          \"female\": 110142\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 104021,\n          \"female\": 106042\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 95379,\n          \"female\": 95499\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 68276,\n          \"female\": 73624\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 50414,\n          \"female\": 56973\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 37867,\n          \"female\": 48121\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 27523,\n          \"female\": 39851\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 24949,\n          \"female\": 52170\n        }],\n        \"ID\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 58355,\n          \"female\": 56478\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 62528,\n          \"female\": 59881\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 36373,\n          \"female\": 33687\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 45752,\n          \"female\": 45590\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 34595,\n          \"female\": 30216\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 53998,\n          \"female\": 52077\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 54217,\n          \"female\": 52091\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 51247,\n          \"female\": 47801\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 49113,\n          \"female\": 49853\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 48392,\n          \"female\": 48288\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 63107,\n          \"female\": 59237\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 51805,\n          \"female\": 52984\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 49226,\n          \"female\": 51868\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 47343,\n          \"female\": 47631\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 38436,\n          \"female\": 38133\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 26243,\n          \"female\": 28577\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 18404,\n          \"female\": 20325\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 11653,\n          \"female\": 15313\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 9677,\n          \"female\": 16053\n        }],\n        \"IL\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 408295,\n          \"female\": 392900\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 437688,\n          \"female\": 419077\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 269202,\n          \"female\": 257213\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 369219,\n          \"female\": 353570\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 268501,\n          \"female\": 258559\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 448001,\n          \"female\": 442418\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 445416,\n          \"female\": 445729\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 416265,\n          \"female\": 418999\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 425825,\n          \"female\": 427573\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 433177,\n          \"female\": 441116\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 427121,\n          \"female\": 412238\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 454039,\n          \"female\": 470982\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 414948,\n          \"female\": 442280\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 354782,\n          \"female\": 380640\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 259363,\n          \"female\": 292899\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 184622,\n          \"female\": 223905\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 129016,\n          \"female\": 171743\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 91973,\n          \"female\": 139204\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 79446,\n          \"female\": 165817\n        }],\n        \"IN\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 215697,\n          \"female\": 205242\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 229911,\n          \"female\": 221563\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 139494,\n          \"female\": 132879\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 198763,\n          \"female\": 194206\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 140805,\n          \"female\": 131947\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 210315,\n          \"female\": 208593\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 211656,\n          \"female\": 210103\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 201979,\n          \"female\": 200693\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 212114,\n          \"female\": 212653\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 216446,\n          \"female\": 219033\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 226901,\n          \"female\": 214964\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 232241,\n          \"female\": 237844\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 217033,\n          \"female\": 228674\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 186412,\n          \"female\": 197353\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 140336,\n          \"female\": 156256\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 99402,\n          \"female\": 116834\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 68758,\n          \"female\": 88794\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 47628,\n          \"female\": 72061\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 39372,\n          \"female\": 83690\n        }],\n        \"KS\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 102716,\n          \"female\": 98004\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 102335,\n          \"female\": 99132\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 60870,\n          \"female\": 57957\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 90593,\n          \"female\": 83299\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 66512,\n          \"female\": 59368\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 99384,\n          \"female\": 93840\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 98020,\n          \"female\": 94075\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 87763,\n          \"female\": 85422\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 87647,\n          \"female\": 84970\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 89233,\n          \"female\": 88877\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 103861,\n          \"female\": 98642\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 98398,\n          \"female\": 101197\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 95861,\n          \"female\": 96152\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 79440,\n          \"female\": 85124\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 60035,\n          \"female\": 64369\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 42434,\n          \"female\": 49221\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 30967,\n          \"female\": 39425\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 23026,\n          \"female\": 33863\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 20767,\n          \"female\": 40188\n        }],\n        \"KY\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 142062,\n          \"female\": 134389\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 147586,\n          \"female\": 138629\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 87696,\n          \"female\": 83139\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 128249,\n          \"female\": 121099\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 90794,\n          \"female\": 85930\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 140811,\n          \"female\": 139855\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 142732,\n          \"female\": 142551\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 137211,\n          \"female\": 136524\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 145358,\n          \"female\": 145251\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 148883,\n          \"female\": 150922\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 143532,\n          \"female\": 139032\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 156890,\n          \"female\": 163054\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 147006,\n          \"female\": 156302\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 129457,\n          \"female\": 139434\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 100883,\n          \"female\": 112696\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 71867,\n          \"female\": 83665\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 47828,\n          \"female\": 62775\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 31477,\n          \"female\": 46386\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 23886,\n          \"female\": 51512\n        }],\n        \"LA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 157642,\n          \"female\": 152324\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 157781,\n          \"female\": 149752\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 93357,\n          \"female\": 90227\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 136496,\n          \"female\": 131202\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 101438,\n          \"female\": 101480\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 167414,\n          \"female\": 168886\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 160094,\n          \"female\": 161424\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 142182,\n          \"female\": 141813\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 138717,\n          \"female\": 144789\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 145906,\n          \"female\": 152340\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 159193,\n          \"female\": 154320\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 157743,\n          \"female\": 167125\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 149001,\n          \"female\": 161295\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 129265,\n          \"female\": 139378\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 98404,\n          \"female\": 106844\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 65845,\n          \"female\": 83779\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 47365,\n          \"female\": 60745\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 29452,\n          \"female\": 48839\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 23861,\n          \"female\": 47535\n        }],\n        \"MA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 187066,\n          \"female\": 178775\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 205530,\n          \"female\": 195312\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 129433,\n          \"female\": 123212\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 207432,\n          \"female\": 213820\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 140356,\n          \"female\": 135839\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 235172,\n          \"female\": 237653\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 216220,\n          \"female\": 221692\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 196293,\n          \"female\": 202730\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 218111,\n          \"female\": 231277\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 237629,\n          \"female\": 249926\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 191958,\n          \"female\": 186343\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 247973,\n          \"female\": 260886\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 227238,\n          \"female\": 241029\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 189981,\n          \"female\": 211282\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 146129,\n          \"female\": 164268\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 100745,\n          \"female\": 123577\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 70828,\n          \"female\": 92141\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 52074,\n          \"female\": 81603\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 49482,\n          \"female\": 104571\n        }],\n        \"MD\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 187617,\n          \"female\": 180105\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 191787,\n          \"female\": 185380\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 118027,\n          \"female\": 113549\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 166991,\n          \"female\": 159589\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 120617,\n          \"female\": 116602\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 205555,\n          \"female\": 206944\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 196824,\n          \"female\": 203989\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 179340,\n          \"female\": 193957\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 195388,\n          \"female\": 205570\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 208382,\n          \"female\": 225458\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 189781,\n          \"female\": 182034\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 217574,\n          \"female\": 235604\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 193789,\n          \"female\": 210582\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 161828,\n          \"female\": 186524\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 123204,\n          \"female\": 144193\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 84114,\n          \"female\": 101563\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 56755,\n          \"female\": 75715\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 39615,\n          \"female\": 59728\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 35455,\n          \"female\": 70809\n        }],\n        \"ME\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 33298,\n          \"female\": 32108\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 38254,\n          \"female\": 36846\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 24842,\n          \"female\": 23688\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 35315,\n          \"female\": 33777\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 23007,\n          \"female\": 21971\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 37685,\n          \"female\": 38353\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 36838,\n          \"female\": 37697\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 35988,\n          \"female\": 37686\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 42092,\n          \"female\": 42912\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 47141,\n          \"female\": 49161\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 38066,\n          \"female\": 35151\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 53458,\n          \"female\": 55451\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 51789,\n          \"female\": 55407\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 47171,\n          \"female\": 49840\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 37495,\n          \"female\": 39678\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 26300,\n          \"female\": 28932\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 18197,\n          \"female\": 22047\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 12824,\n          \"female\": 18302\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 10321,\n          \"female\": 20012\n        }],\n        \"MI\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 295157,\n          \"female\": 280629\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 329983,\n          \"female\": 319870\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 210017,\n          \"female\": 199977\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 299937,\n          \"female\": 287188\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 208270,\n          \"female\": 202858\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 303606,\n          \"female\": 298013\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 292780,\n          \"female\": 296303\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 283925,\n          \"female\": 288526\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 314544,\n          \"female\": 319923\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 337524,\n          \"female\": 344097\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 316345,\n          \"female\": 297675\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 366054,\n          \"female\": 378332\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 349590,\n          \"female\": 369347\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 303421,\n          \"female\": 323815\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 230810,\n          \"female\": 252455\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 161676,\n          \"female\": 186453\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 112555,\n          \"female\": 141554\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 78669,\n          \"female\": 116914\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 67110,\n          \"female\": 134669\n        }],\n        \"MN\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 178616,\n          \"female\": 170645\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 180951,\n          \"female\": 174374\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 110001,\n          \"female\": 104197\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 148247,\n          \"female\": 144611\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 108864,\n          \"female\": 103755\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 185766,\n          \"female\": 180698\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 189374,\n          \"female\": 184845\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 166613,\n          \"female\": 160534\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 172583,\n          \"female\": 171011\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 184130,\n          \"female\": 182785\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 185244,\n          \"female\": 176674\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 202427,\n          \"female\": 203327\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 187216,\n          \"female\": 189980\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 157586,\n          \"female\": 160588\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 114903,\n          \"female\": 121985\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 81660,\n          \"female\": 92401\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 57855,\n          \"female\": 72839\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 42192,\n          \"female\": 58545\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 37938,\n          \"female\": 73211\n        }],\n        \"MO\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 192851,\n          \"female\": 183921\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 201273,\n          \"female\": 190020\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 122944,\n          \"female\": 116383\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 175782,\n          \"female\": 169076\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 124584,\n          \"female\": 123027\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 200511,\n          \"female\": 200134\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 197781,\n          \"female\": 198735\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 181485,\n          \"female\": 180002\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 183318,\n          \"female\": 188038\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 194538,\n          \"female\": 199735\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 200091,\n          \"female\": 193196\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 218663,\n          \"female\": 225083\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 199513,\n          \"female\": 216459\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 176036,\n          \"female\": 187668\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 135605,\n          \"female\": 150815\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 99845,\n          \"female\": 117802\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 70734,\n          \"female\": 88769\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 48118,\n          \"female\": 72085\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 40331,\n          \"female\": 80497\n        }],\n        \"MS\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 100654,\n          \"female\": 97079\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 107363,\n          \"female\": 101958\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 62923,\n          \"female\": 60591\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 94460,\n          \"female\": 94304\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 63870,\n          \"female\": 58909\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 96027,\n          \"female\": 98023\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 95533,\n          \"female\": 98837\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 88278,\n          \"female\": 92876\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 93579,\n          \"female\": 97851\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 92103,\n          \"female\": 98871\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 104911,\n          \"female\": 100694\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 98578,\n          \"female\": 106516\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 94835,\n          \"female\": 101616\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 80677,\n          \"female\": 91332\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 64386,\n          \"female\": 72940\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 46712,\n          \"female\": 56013\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 32079,\n          \"female\": 42598\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 19966,\n          \"female\": 32724\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 14789,\n          \"female\": 32626\n        }],\n        \"MT\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 31021,\n          \"female\": 29676\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 30960,\n          \"female\": 29710\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 19558,\n          \"female\": 18061\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 30975,\n          \"female\": 27314\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 21419,\n          \"female\": 20153\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 32300,\n          \"female\": 30805\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 33167,\n          \"female\": 30964\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 29772,\n          \"female\": 28999\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 28538,\n          \"female\": 27311\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 30820,\n          \"female\": 30608\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 33641,\n          \"female\": 31763\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 36761,\n          \"female\": 37476\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 38291,\n          \"female\": 40028\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 35306,\n          \"female\": 35021\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 27786,\n          \"female\": 27047\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 19708,\n          \"female\": 19938\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 13344,\n          \"female\": 14751\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 9435,\n          \"female\": 11392\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 7361,\n          \"female\": 13519\n        }],\n        \"NC\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 311288,\n          \"female\": 299882\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 333622,\n          \"female\": 316123\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 194507,\n          \"female\": 185872\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 299506,\n          \"female\": 275504\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 207910,\n          \"female\": 196277\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 317709,\n          \"female\": 324593\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 311582,\n          \"female\": 323483\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 308195,\n          \"female\": 319405\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 334818,\n          \"female\": 349484\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 331086,\n          \"female\": 345940\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 325977,\n          \"female\": 316564\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 334674,\n          \"female\": 355791\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 308840,\n          \"female\": 341170\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 270508,\n          \"female\": 303831\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 225997,\n          \"female\": 254521\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 154010,\n          \"female\": 186677\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 106165,\n          \"female\": 139937\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 68871,\n          \"female\": 104839\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 50143,\n          \"female\": 110032\n        }],\n        \"ND\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 24524,\n          \"female\": 24340\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 20939,\n          \"female\": 20728\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 13197,\n          \"female\": 12227\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 27439,\n          \"female\": 22447\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 21413,\n          \"female\": 19299\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 29543,\n          \"female\": 24602\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 26425,\n          \"female\": 22798\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 21846,\n          \"female\": 19046\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 20123,\n          \"female\": 19010\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 21386,\n          \"female\": 20572\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 24336,\n          \"female\": 22721\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 25126,\n          \"female\": 24631\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 24412,\n          \"female\": 24022\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 21598,\n          \"female\": 20250\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 14868,\n          \"female\": 14633\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 10729,\n          \"female\": 11878\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 8086,\n          \"female\": 9626\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 6222,\n          \"female\": 9241\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 5751,\n          \"female\": 11606\n        }],\n        \"NE\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 67062,\n          \"female\": 62974\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 64843,\n          \"female\": 62695\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 38679,\n          \"female\": 36116\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 56143,\n          \"female\": 54195\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 40531,\n          \"female\": 38139\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 64277,\n          \"female\": 61028\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 64230,\n          \"female\": 62423\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 57741,\n          \"female\": 55950\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 56139,\n          \"female\": 54518\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 57526,\n          \"female\": 57077\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 68079,\n          \"female\": 64509\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 64444,\n          \"female\": 65106\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 61285,\n          \"female\": 62057\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 52560,\n          \"female\": 54977\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 39372,\n          \"female\": 41007\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 27091,\n          \"female\": 31903\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 20472,\n          \"female\": 26808\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 15625,\n          \"female\": 21401\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 13507,\n          \"female\": 26876\n        }],\n        \"NH\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 33531,\n          \"female\": 32061\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 40472,\n          \"female\": 39574\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 26632,\n          \"female\": 25155\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 39600,\n          \"female\": 39270\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 25067,\n          \"female\": 23439\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 39514,\n          \"female\": 37529\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 37282,\n          \"female\": 37104\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 37177,\n          \"female\": 38432\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 43571,\n          \"female\": 43894\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 50559,\n          \"female\": 51423\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 37873,\n          \"female\": 36382\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 55573,\n          \"female\": 57097\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 50802,\n          \"female\": 52906\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 44934,\n          \"female\": 45384\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 33322,\n          \"female\": 34773\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 22786,\n          \"female\": 25421\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 14988,\n          \"female\": 18865\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 10661,\n          \"female\": 14921\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 9140,\n          \"female\": 17087\n        }],\n        \"NJ\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 272239,\n          \"female\": 261405\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 296798,\n          \"female\": 281395\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 183608,\n          \"female\": 174902\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 236406,\n          \"female\": 219234\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 171414,\n          \"female\": 162551\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 288078,\n          \"female\": 278395\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 286242,\n          \"female\": 288661\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 278323,\n          \"female\": 286407\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 306371,\n          \"female\": 315976\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 324604,\n          \"female\": 340805\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 280348,\n          \"female\": 272618\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 335379,\n          \"female\": 351753\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 297889,\n          \"female\": 316509\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 243909,\n          \"female\": 272971\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 187928,\n          \"female\": 216233\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 130458,\n          \"female\": 162862\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 92629,\n          \"female\": 121544\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 68009,\n          \"female\": 107002\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 62395,\n          \"female\": 130163\n        }],\n        \"NM\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 70556,\n          \"female\": 67433\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 72070,\n          \"female\": 69774\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 42831,\n          \"female\": 41474\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 61671,\n          \"female\": 59289\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 47139,\n          \"female\": 41506\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 73009,\n          \"female\": 67866\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 69394,\n          \"female\": 66383\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 62108,\n          \"female\": 60810\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 61075,\n          \"female\": 61508\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 62327,\n          \"female\": 64988\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 72877,\n          \"female\": 69675\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 69856,\n          \"female\": 73683\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 66381,\n          \"female\": 73952\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 61719,\n          \"female\": 66285\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 48657,\n          \"female\": 54175\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 35942,\n          \"female\": 39668\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 24922,\n          \"female\": 29968\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 16894,\n          \"female\": 21049\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 12986,\n          \"female\": 22217\n        }],\n        \"NV\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 91556,\n          \"female\": 87252\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 92376,\n          \"female\": 90127\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 56635,\n          \"female\": 53976\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 72185,\n          \"female\": 68570\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 57429,\n          \"female\": 54635\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 103079,\n          \"female\": 98260\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 101626,\n          \"female\": 97574\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 95952,\n          \"female\": 91752\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 98405,\n          \"female\": 96018\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 98297,\n          \"female\": 92880\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 97639,\n          \"female\": 92019\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 96647,\n          \"female\": 93838\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 86430,\n          \"female\": 90916\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 79651,\n          \"female\": 82206\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 65973,\n          \"female\": 70582\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 48879,\n          \"female\": 50485\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 31798,\n          \"female\": 33652\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 19722,\n          \"female\": 23399\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 13456,\n          \"female\": 22760\n        }],\n        \"NY\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 601900,\n          \"female\": 574532\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 602877,\n          \"female\": 576846\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 381224,\n          \"female\": 364149\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 579276,\n          \"female\": 563517\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 423461,\n          \"female\": 419351\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 722290,\n          \"female\": 728064\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 668918,\n          \"female\": 684340\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 607495,\n          \"female\": 628810\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 632186,\n          \"female\": 660306\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 674516,\n          \"female\": 708960\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 588624,\n          \"female\": 561622\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 695357,\n          \"female\": 740342\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 633602,\n          \"female\": 685163\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 540901,\n          \"female\": 604110\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 409399,\n          \"female\": 483158\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 287440,\n          \"female\": 357971\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 207495,\n          \"female\": 274626\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 150642,\n          \"female\": 231063\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 134198,\n          \"female\": 284443\n        }],\n        \"OH\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 356598,\n          \"female\": 339398\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 385542,\n          \"female\": 371142\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 239825,\n          \"female\": 228296\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 331115,\n          \"female\": 318019\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 227916,\n          \"female\": 225400\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 369646,\n          \"female\": 367475\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 356757,\n          \"female\": 359375\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 338273,\n          \"female\": 340410\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 368578,\n          \"female\": 375476\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 385388,\n          \"female\": 394341\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 376976,\n          \"female\": 358242\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 420561,\n          \"female\": 438290\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 403067,\n          \"female\": 427137\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 350563,\n          \"female\": 374890\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 262844,\n          \"female\": 292745\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 183419,\n          \"female\": 222552\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 131940,\n          \"female\": 173303\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 93267,\n          \"female\": 140079\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 80618,\n          \"female\": 166514\n        }],\n        \"OK\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 135423,\n          \"female\": 130297\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 133539,\n          \"female\": 128110\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 79207,\n          \"female\": 74080\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 115423,\n          \"female\": 107651\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 85610,\n          \"female\": 80749\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 135217,\n          \"female\": 130966\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 132683,\n          \"female\": 128496\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 118240,\n          \"female\": 116104\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 118534,\n          \"female\": 117501\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 117065,\n          \"female\": 118300\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 137212,\n          \"female\": 130040\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 129964,\n          \"female\": 132941\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 121988,\n          \"female\": 129033\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 105018,\n          \"female\": 113144\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 82818,\n          \"female\": 93914\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 62979,\n          \"female\": 71856\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 43899,\n          \"female\": 54848\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 29237,\n          \"female\": 42044\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 22888,\n          \"female\": 42715\n        }],\n        \"OR\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 118561,\n          \"female\": 112841\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 123223,\n          \"female\": 116373\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 75620,\n          \"female\": 71764\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 106121,\n          \"female\": 103044\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 79106,\n          \"female\": 75639\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 134241,\n          \"female\": 131539\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 137090,\n          \"female\": 135734\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 128812,\n          \"female\": 126071\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 131405,\n          \"female\": 126875\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 125373,\n          \"female\": 125074\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 122920,\n          \"female\": 119049\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 131932,\n          \"female\": 137021\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 130434,\n          \"female\": 141380\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 129063,\n          \"female\": 136051\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 99577,\n          \"female\": 106208\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 69028,\n          \"female\": 77428\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 46055,\n          \"female\": 53682\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 30900,\n          \"female\": 41853\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 28992,\n          \"female\": 53154\n        }],\n        \"PA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 367290,\n          \"female\": 350371\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 393719,\n          \"female\": 374666\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 250754,\n          \"female\": 236670\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 378940,\n          \"female\": 369819\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 251063,\n          \"female\": 243391\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 420247,\n          \"female\": 410193\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 391190,\n          \"female\": 387225\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 365742,\n          \"female\": 365646\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 399152,\n          \"female\": 405848\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 435250,\n          \"female\": 446328\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 381910,\n          \"female\": 366854\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 472070,\n          \"female\": 489057\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 456215,\n          \"female\": 475044\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 390595,\n          \"female\": 419924\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 301610,\n          \"female\": 335127\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 212200,\n          \"female\": 256188\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 156335,\n          \"female\": 205974\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 117050,\n          \"female\": 178358\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 104012,\n          \"female\": 217532\n        }],\n        \"RI\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 28289,\n          \"female\": 26941\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 31383,\n          \"female\": 30724\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 20093,\n          \"female\": 19249\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 35376,\n          \"female\": 37870\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 23397,\n          \"female\": 21358\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 35958,\n          \"female\": 34710\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 32410,\n          \"female\": 32567\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 30325,\n          \"female\": 31145\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 32542,\n          \"female\": 34087\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 36151,\n          \"female\": 38462\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 30462,\n          \"female\": 27878\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 38419,\n          \"female\": 41642\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 36706,\n          \"female\": 39127\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 30349,\n          \"female\": 33752\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 23462,\n          \"female\": 26311\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 16385,\n          \"female\": 19335\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 10978,\n          \"female\": 14833\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 9224,\n          \"female\": 13439\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 8479,\n          \"female\": 19843\n        }],\n        \"SC\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 148363,\n          \"female\": 144218\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 153051,\n          \"female\": 148064\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 92781,\n          \"female\": 88090\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 150464,\n          \"female\": 136857\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 99237,\n          \"female\": 99178\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 156273,\n          \"female\": 156982\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 148237,\n          \"female\": 153197\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 139949,\n          \"female\": 146281\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 151524,\n          \"female\": 157192\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 153110,\n          \"female\": 163562\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 156323,\n          \"female\": 150943\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 161003,\n          \"female\": 173752\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 150770,\n          \"female\": 169238\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 141268,\n          \"female\": 160890\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 120618,\n          \"female\": 137154\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 85197,\n          \"female\": 97581\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 55278,\n          \"female\": 69067\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 33979,\n          \"female\": 50585\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 24984,\n          \"female\": 52336\n        }],\n        \"SD\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 30615,\n          \"female\": 29377\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 28360,\n          \"female\": 26492\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 17193,\n          \"female\": 16250\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 25514,\n          \"female\": 24234\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 18413,\n          \"female\": 16324\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 29131,\n          \"female\": 26757\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 28133,\n          \"female\": 26710\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 24971,\n          \"female\": 23347\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 24234,\n          \"female\": 23231\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 25555,\n          \"female\": 24867\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 30399,\n          \"female\": 28980\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 29754,\n          \"female\": 29530\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 29075,\n          \"female\": 28968\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 25633,\n          \"female\": 25530\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 19320,\n          \"female\": 18489\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 12964,\n          \"female\": 14702\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 9646,\n          \"female\": 12077\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 7669,\n          \"female\": 10566\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 6898,\n          \"female\": 13282\n        }],\n        \"TN\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 204457,\n          \"female\": 196347\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 217061,\n          \"female\": 206350\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 129690,\n          \"female\": 124122\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 183910,\n          \"female\": 175377\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 132501,\n          \"female\": 134905\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 210618,\n          \"female\": 214944\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 209305,\n          \"female\": 214151\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 200270,\n          \"female\": 207520\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 216542,\n          \"female\": 219178\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 217059,\n          \"female\": 224473\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 210365,\n          \"female\": 204494\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 223663,\n          \"female\": 238025\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 210228,\n          \"female\": 229974\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 186739,\n          \"female\": 207022\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 153737,\n          \"female\": 171357\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 108743,\n          \"female\": 125362\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 72813,\n          \"female\": 94077\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 46556,\n          \"female\": 71212\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 33499,\n          \"female\": 72969\n        }],\n        \"TX\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 996070,\n          \"female\": 955235\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 998209,\n          \"female\": 959762\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 587712,\n          \"female\": 561008\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 818590,\n          \"female\": 756451\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 582570,\n          \"female\": 556850\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 982673,\n          \"female\": 948564\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 961403,\n          \"female\": 947710\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 897542,\n          \"female\": 898907\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 897922,\n          \"female\": 908091\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 857621,\n          \"female\": 865642\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 1021123,\n          \"female\": 979891\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 861849,\n          \"female\": 880746\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 761410,\n          \"female\": 799294\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 635465,\n          \"female\": 692072\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 483436,\n          \"female\": 533368\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 330457,\n          \"female\": 389996\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 228243,\n          \"female\": 289446\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 153391,\n          \"female\": 219572\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 115630,\n          \"female\": 224693\n        }],\n        \"UT\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 130873,\n          \"female\": 124371\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 128076,\n          \"female\": 120364\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 70832,\n          \"female\": 66798\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 87877,\n          \"female\": 92950\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 79431,\n          \"female\": 71405\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 109125,\n          \"female\": 106576\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 115198,\n          \"female\": 110546\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 102771,\n          \"female\": 99664\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 88181,\n          \"female\": 83229\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 76552,\n          \"female\": 74993\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 131094,\n          \"female\": 125110\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 76913,\n          \"female\": 78113\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 71490,\n          \"female\": 73221\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 60996,\n          \"female\": 63835\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 45491,\n          \"female\": 49273\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 32191,\n          \"female\": 35931\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 23112,\n          \"female\": 27761\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 15827,\n          \"female\": 20155\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 13199,\n          \"female\": 19855\n        }],\n        \"VA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 262278,\n          \"female\": 250000\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 266247,\n          \"female\": 251516\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 160174,\n          \"female\": 153149\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 248284,\n          \"female\": 233796\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 175833,\n          \"female\": 167676\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 296682,\n          \"female\": 287052\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 286536,\n          \"female\": 283804\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 264490,\n          \"female\": 265951\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 278474,\n          \"female\": 286095\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 286793,\n          \"female\": 297558\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 264413,\n          \"female\": 256891\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 296096,\n          \"female\": 309898\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 262954,\n          \"female\": 283219\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 228721,\n          \"female\": 250389\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 178498,\n          \"female\": 197033\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 123597,\n          \"female\": 146376\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 82281,\n          \"female\": 103044\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 55037,\n          \"female\": 80081\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 43560,\n          \"female\": 92154\n        }],\n        \"VT\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 15766,\n          \"female\": 14629\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 18674,\n          \"female\": 17317\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 11909,\n          \"female\": 11565\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 21686,\n          \"female\": 20502\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 12648,\n          \"female\": 11840\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 18005,\n          \"female\": 17548\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 17565,\n          \"female\": 18161\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 16856,\n          \"female\": 17454\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 19431,\n          \"female\": 19600\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 21315,\n          \"female\": 22377\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 17073,\n          \"female\": 16338\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 24629,\n          \"female\": 26080\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 24925,\n          \"female\": 25588\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 21769,\n          \"female\": 23081\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 16842,\n          \"female\": 17925\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 11855,\n          \"female\": 12331\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 7639,\n          \"female\": 9192\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 5291,\n          \"female\": 8001\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 4695,\n          \"female\": 8502\n        }],\n        \"WA\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 228403,\n          \"female\": 217400\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 224142,\n          \"female\": 217269\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 136967,\n          \"female\": 130193\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 195001,\n          \"female\": 179996\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 151577,\n          \"female\": 140876\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 260873,\n          \"female\": 244497\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 252612,\n          \"female\": 243147\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 230325,\n          \"female\": 223596\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 234066,\n          \"female\": 228073\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 233107,\n          \"female\": 230232\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 227824,\n          \"female\": 214378\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 245685,\n          \"female\": 247691\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 231612,\n          \"female\": 241813\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 206233,\n          \"female\": 219560\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 158697,\n          \"female\": 170678\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 107931,\n          \"female\": 118093\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 70497,\n          \"female\": 83476\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 48802,\n          \"female\": 66167\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 43371,\n          \"female\": 80604\n        }],\n        \"WI\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 176217,\n          \"female\": 168178\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 191911,\n          \"female\": 180587\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 115730,\n          \"female\": 110660\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 167063,\n          \"female\": 161358\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 117861,\n          \"female\": 113393\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 183464,\n          \"female\": 176718\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 187494,\n          \"female\": 181605\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 172689,\n          \"female\": 168116\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 179862,\n          \"female\": 176322\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 198114,\n          \"female\": 197462\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 186006,\n          \"female\": 180034\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 217886,\n          \"female\": 219813\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 204370,\n          \"female\": 206108\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 176161,\n          \"female\": 178738\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 130349,\n          \"female\": 136552\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 90955,\n          \"female\": 103217\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 65738,\n          \"female\": 81341\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 48337,\n          \"female\": 67614\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 41178,\n          \"female\": 82916\n        }],\n        \"WV\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 52472,\n          \"female\": 50287\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 55269,\n          \"female\": 52689\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 34100,\n          \"female\": 32359\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 51801,\n          \"female\": 48967\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 35920,\n          \"female\": 34241\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 54564,\n          \"female\": 52255\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 56430,\n          \"female\": 55121\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 55764,\n          \"female\": 55399\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 60662,\n          \"female\": 59373\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 61771,\n          \"female\": 61257\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 53707,\n          \"female\": 51490\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 66156,\n          \"female\": 68671\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 66936,\n          \"female\": 71680\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 65717,\n          \"female\": 67056\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 51285,\n          \"female\": 54807\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 36504,\n          \"female\": 39946\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 25738,\n          \"female\": 31619\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 16397,\n          \"female\": 24351\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 12438,\n          \"female\": 26221\n        }],\n        \"WY\": [{\n          \"age\": \"0 to 5\",\n          \"male\": 19649,\n          \"female\": 18996\n        }, {\n          \"age\": \"10 to 14\",\n          \"male\": 20703,\n          \"female\": 17785\n        }, {\n          \"age\": \"15 to 17\",\n          \"male\": 11500,\n          \"female\": 10383\n        }, {\n          \"age\": \"18 to 21\",\n          \"male\": 18008,\n          \"female\": 15534\n        }, {\n          \"age\": \"22 to 24\",\n          \"male\": 12727,\n          \"female\": 11405\n        }, {\n          \"age\": \"25 to 29\",\n          \"male\": 21459,\n          \"female\": 19350\n        }, {\n          \"age\": \"30 to 34\",\n          \"male\": 21008,\n          \"female\": 19465\n        }, {\n          \"age\": \"35 to 39\",\n          \"male\": 18573,\n          \"female\": 17022\n        }, {\n          \"age\": \"40 to 44\",\n          \"male\": 17553,\n          \"female\": 16402\n        }, {\n          \"age\": \"45 to 49\",\n          \"male\": 17580,\n          \"female\": 16702\n        }, {\n          \"age\": \"5 to 9\",\n          \"male\": 19198,\n          \"female\": 19519\n        }, {\n          \"age\": \"50 to 54\",\n          \"male\": 20337,\n          \"female\": 20958\n        }, {\n          \"age\": \"55 to 59\",\n          \"male\": 21523,\n          \"female\": 21000\n        }, {\n          \"age\": \"60 to 64\",\n          \"male\": 19048,\n          \"female\": 18292\n        }, {\n          \"age\": \"65 to 69\",\n          \"male\": 13999,\n          \"female\": 13130\n        }, {\n          \"age\": \"70 to 74\",\n          \"male\": 8710,\n          \"female\": 9880\n        }, {\n          \"age\": \"75 to 79\",\n          \"male\": 6149,\n          \"female\": 6938\n        }, {\n          \"age\": \"80 to 84\",\n          \"male\": 4442,\n          \"female\": 5560\n        }, {\n          \"age\": \"85 and Older\",\n          \"male\": 3395,\n          \"female\": 5797\n        }]\n      };\n      function aggregateData(list) {\n        var maleTotal = 0;\n        var femaleTotal = 0;\n        for (var i = 0; i < list.length; i++) {\n          var row = list[i];\n          maleTotal += row.male;\n          femaleTotal += row.female;\n        }\n        for (var i = 0; i < list.length; i++) {\n          var row = list[i];\n          row.malePercent = -1 * Math.round(row.male / maleTotal * 10000) / 100;\n          row.femalePercent = Math.round(row.female / femaleTotal * 10000) / 100;\n        }\n        return list;\n      }\n      usData = aggregateData(usData);\n\n      // ===========================================================\n      // Root and wrapper container\n      // ===========================================================\n\n      // Create root and chart\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create wrapper container\n      var container = root.container.children.push(am5.Container[\"new\"](root, {\n        layout: root.horizontalLayout,\n        width: am5.p100,\n        height: am5.p100\n      }));\n\n      // Set up formats\n      root.numberFormatter.setAll({\n        numberFormat: \"#.##as\"\n      });\n\n      // ===========================================================\n      // XY chart\n      // ===========================================================\n\n      // Create chart\n      var chart = container.children.push(am5xy.XYChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"none\",\n        wheelY: \"none\",\n        layout: root.verticalLayout,\n        width: am5.percent(60)\n      }));\n\n      // Create axes\n      var yAxis1 = chart.yAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"age\",\n        renderer: am5xy.AxisRendererY[\"new\"](root, {})\n      }));\n      yAxis1.get(\"renderer\").labels.template.setAll({\n        paddingTop: 0,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\"))\n      });\n      yAxis1.get(\"renderer\").grid.template.setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-300\")),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        strokeDasharray: [3]\n      });\n      yAxis1.data.setAll(usData);\n      var yAxis2 = chart.yAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        categoryField: \"age\",\n        renderer: am5xy.AxisRendererY[\"new\"](root, {\n          opposite: true\n        })\n      }));\n      yAxis2.get(\"renderer\").grid.template.setAll({\n        stroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-300\")),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        strokeDasharray: [3]\n      });\n      yAxis2.get(\"renderer\").labels.template.setAll({\n        paddingTop: 0,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\"))\n      });\n      yAxis2.data.setAll(usData);\n      var xAxis = chart.xAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        min: -10,\n        max: 10,\n        numberFormat: \"#.s'%'\",\n        renderer: am5xy.AxisRendererX[\"new\"](root, {\n          minGridDistance: 40\n        })\n      }));\n      xAxis.get(\"renderer\").labels.template.setAll({\n        paddingTop: 20,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\"))\n      });\n      xAxis.get(\"renderer\").grid.template.setAll({\n        disabled: true,\n        strokeOpacity: 0\n      });\n\n      // Create series\n      var maleSeries = chart.series.push(am5xy.ColumnSeries[\"new\"](root, {\n        name: \"Males\",\n        xAxis: xAxis,\n        yAxis: yAxis1,\n        valueXField: \"malePercent\",\n        categoryYField: \"age\",\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n        clustered: false\n      }));\n      maleSeries.columns.template.setAll({\n        tooltipText: \"Males, age {categoryY}: {male} ({malePercent.formatNumber('#.0s')}%)\",\n        tooltipX: am5.p100,\n        cornerRadiusBR: 4,\n        cornerRadiusTR: 4,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 0\n      });\n      maleSeries.data.setAll(usData);\n      var femaleSeries = chart.series.push(am5xy.ColumnSeries[\"new\"](root, {\n        name: \"Males\",\n        xAxis: xAxis,\n        yAxis: yAxis1,\n        valueXField: \"femalePercent\",\n        categoryYField: \"age\",\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n        clustered: false\n      }));\n      femaleSeries.columns.template.setAll({\n        tooltipText: \"Males, age {categoryY}: {female} ({femalePercent.formatNumber('#.0s')}%)\",\n        tooltipX: am5.p100,\n        cornerRadiusBR: 4,\n        cornerRadiusTR: 4,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 0\n      });\n      femaleSeries.data.setAll(usData);\n\n      // Add labels\n      var maleLabel = chart.plotContainer.children.push(am5.Label[\"new\"](root, {\n        text: \"Males\",\n        fontSize: 13,\n        fontWeight: '500',\n        y: 5,\n        x: 5,\n        //centerX: am5.p50,\n        fill: maleSeries.get(\"fill\")\n      }));\n      var femaleLabel = chart.plotContainer.children.push(am5.Label[\"new\"](root, {\n        text: \"Females\",\n        fontSize: 13,\n        fontWeight: '500',\n        y: 5,\n        x: am5.p100,\n        centerX: am5.p100,\n        dx: -5,\n        fill: femaleSeries.get(\"fill\")\n      }));\n\n      // ===========================================================\n      // Map chart\n      // ===========================================================\n\n      // Create chart\n      var map = container.children.push(am5map.MapChart[\"new\"](root, {\n        panX: \"none\",\n        panY: \"none\",\n        wheelY: \"none\",\n        projection: am5map.geoAlbersUsa(),\n        width: am5.percent(40)\n      }));\n      chart.getTooltip().set(\"autoTextColor\", false);\n\n      // Title\n      var title = map.children.push(am5.Label[\"new\"](root, {\n        text: \"United States\",\n        fontSize: 14,\n        fontWeight: '500',\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-800')),\n        y: 20,\n        x: am5.p50,\n        centerX: am5.p50\n      }));\n\n      // Create polygon series\n      var polygonSeries = map.series.push(am5map.MapPolygonSeries[\"new\"](root, {\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n        geoJSON: am5geodata_usaLow\n      }));\n      polygonSeries.mapPolygons.template.setAll({\n        tooltipText: \"{name}\",\n        interactive: true\n      });\n      polygonSeries.mapPolygons.template.states.create(\"hover\", {\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n      });\n      polygonSeries.mapPolygons.template.states.create(\"active\", {\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n      });\n      var activePolygon;\n      polygonSeries.mapPolygons.template.events.on(\"click\", function (ev) {\n        if (activePolygon) {\n          activePolygon.set(\"active\", false);\n        }\n        activePolygon = ev.target;\n        activePolygon.set(\"active\", true);\n        var state = ev.target.dataItem.dataContext.id.split(\"-\").pop();\n        var data = aggregateData(stateData[state]);\n        for (var i = 0; i < data.length; i++) {\n          maleSeries.data.setIndex(i, data[i]);\n          femaleSeries.data.setIndex(i, data[i]);\n        }\n        title.set(\"text\", ev.target.dataItem.dataContext.name);\n      });\n    }); // end am5.ready()   \n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget24;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget24.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-24.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-25.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-25.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget25 = function () {\n  // Private methods\n  var initChart1 = function initChart1() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_25_chart_1\");\n    if (!element) {\n      return;\n    }\n\n    // On amchart ready\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/\n      var chart = root.container.children.push(am5radar.RadarChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        innerRadius: am5.percent(40),\n        radius: am5.percent(70),\n        arrangeTooltips: false\n      }));\n      var cursor = chart.set(\"cursor\", am5radar.RadarCursor[\"new\"](root, {\n        behavior: \"zoomX\"\n      }));\n      cursor.lineY.set(\"visible\", false);\n\n      // Create axes and their renderers\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n      var xRenderer = am5radar.AxisRendererCircular[\"new\"](root, {\n        minGridDistance: 30\n      });\n      xRenderer.labels.template.setAll({\n        textType: \"radial\",\n        radius: 10,\n        paddingTop: 0,\n        paddingBottom: 0,\n        centerY: am5.p50,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-700'))\n      });\n      xRenderer.grid.template.setAll({\n        location: 0.5,\n        strokeDasharray: [2, 2]\n      });\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        maxDeviation: 0,\n        categoryField: \"name\",\n        renderer: xRenderer\n      }));\n      var yRenderer = am5radar.AxisRendererRadial[\"new\"](root, {\n        minGridDistance: 30\n      });\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: yRenderer\n      }));\n      yRenderer.grid.template.setAll({\n        strokeDasharray: [2, 2]\n      });\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n      var series1 = chart.series.push(am5radar.RadarLineSeries[\"new\"](root, {\n        name: \"Revenue\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"value1\",\n        categoryXField: \"name\",\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n      }));\n      series1.strokes.template.setAll({\n        strokeOpacity: 0\n      });\n      series1.fills.template.setAll({\n        visible: true,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n        fillOpacity: 0.5\n      });\n      var series2 = chart.series.push(am5radar.RadarLineSeries[\"new\"](root, {\n        name: \"Expense\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"value2\",\n        categoryXField: \"name\",\n        stacked: true,\n        tooltip: am5.Tooltip[\"new\"](root, {\n          labelText: \"Revenue: {value1}\\nExpense:{value2}\"\n        }),\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\"))\n      }));\n      series2.strokes.template.setAll({\n        strokeOpacity: 0\n      });\n      series2.fills.template.setAll({\n        visible: true,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n        fillOpacity: 0.5\n      });\n      var legend = chart.radarContainer.children.push(am5.Legend[\"new\"](root, {\n        width: 150,\n        centerX: am5.p50,\n        centerY: am5.p50\n      }));\n      legend.data.setAll([series1, series2]);\n\n      // Set data\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n      var data = [{\n        name: \"Openlane\",\n        value1: 160.2,\n        value2: 26.9\n      }, {\n        name: \"Yearin\",\n        value1: 120.1,\n        value2: 50.5\n      }, {\n        name: \"Goodsilron\",\n        value1: 150.7,\n        value2: 12.3\n      }, {\n        name: \"Condax\",\n        value1: 69.4,\n        value2: 74.5\n      }, {\n        name: \"Opentech\",\n        value1: 78.5,\n        value2: 29.7\n      }, {\n        name: \"Golddex\",\n        value1: 77.6,\n        value2: 102.2\n      }, {\n        name: \"Isdom\",\n        value1: 69.8,\n        value2: 22.6\n      }, {\n        name: \"Plusstrip\",\n        value1: 63.6,\n        value2: 45.3\n      }, {\n        name: \"Kinnamplus\",\n        value1: 59.7,\n        value2: 12.8\n      }, {\n        name: \"Zumgoity\",\n        value1: 64.3,\n        value2: 19.6\n      }, {\n        name: \"Stanredtax\",\n        value1: 52.9,\n        value2: 96.3\n      }, {\n        name: \"Conecom\",\n        value1: 42.9,\n        value2: 11.9\n      }, {\n        name: \"Zencorporation\",\n        value1: 40.9,\n        value2: 16.8\n      }, {\n        name: \"Iselectrics\",\n        value1: 39.2,\n        value2: 9.9\n      }, {\n        name: \"Treequote\",\n        value1: 76.6,\n        value2: 36.9\n      }, {\n        name: \"Sumace\",\n        value1: 34.8,\n        value2: 14.6\n      }, {\n        name: \"Lexiqvolax\",\n        value1: 32.1,\n        value2: 35.6\n      }, {\n        name: \"Sunnamplex\",\n        value1: 31.8,\n        value2: 5.9\n      }, {\n        name: \"Faxquote\",\n        value1: 29.3,\n        value2: 14.7\n      }, {\n        name: \"Donware\",\n        value1: 23.0,\n        value2: 2.8\n      }, {\n        name: \"Warephase\",\n        value1: 21.5,\n        value2: 12.1\n      }, {\n        name: \"Donquadtech\",\n        value1: 19.7,\n        value2: 10.8\n      }, {\n        name: \"Nam-zim\",\n        value1: 15.5,\n        value2: 4.1\n      }, {\n        name: \"Y-corporation\",\n        value1: 14.2,\n        value2: 11.3\n      }];\n      series1.data.setAll(data);\n      series2.data.setAll(data);\n      xAxis.data.setAll(data);\n\n      // Animate chart and series in\n      // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n      series1.appear(1000);\n      series2.appear(1000);\n      chart.appear(1000, 100);\n    }); // end am5.ready()\n  };\n\n  var initChart2 = function initChart2() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_25_chart_2\");\n    if (!element) {\n      return;\n    }\n\n    // On amchart ready\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/\n      var chart = root.container.children.push(am5radar.RadarChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        innerRadius: am5.percent(40),\n        radius: am5.percent(70),\n        arrangeTooltips: false\n      }));\n      var cursor = chart.set(\"cursor\", am5radar.RadarCursor[\"new\"](root, {\n        behavior: \"zoomX\"\n      }));\n      cursor.lineY.set(\"visible\", false);\n\n      // Create axes and their renderers\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n      var xRenderer = am5radar.AxisRendererCircular[\"new\"](root, {\n        minGridDistance: 30\n      });\n      xRenderer.labels.template.setAll({\n        textType: \"radial\",\n        radius: 10,\n        paddingTop: 0,\n        paddingBottom: 0,\n        centerY: am5.p50,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-700'))\n      });\n      xRenderer.grid.template.setAll({\n        location: 0.5,\n        strokeDasharray: [2, 2]\n      });\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        maxDeviation: 0,\n        categoryField: \"name\",\n        renderer: xRenderer\n      }));\n      var yRenderer = am5radar.AxisRendererRadial[\"new\"](root, {\n        minGridDistance: 30\n      });\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: yRenderer\n      }));\n      yRenderer.grid.template.setAll({\n        strokeDasharray: [2, 2]\n      });\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n      var series1 = chart.series.push(am5radar.RadarLineSeries[\"new\"](root, {\n        name: \"Revenue\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"value1\",\n        categoryXField: \"name\",\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n      }));\n      series1.strokes.template.setAll({\n        strokeOpacity: 0\n      });\n      series1.fills.template.setAll({\n        visible: true,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n        fillOpacity: 0.5\n      });\n      var series2 = chart.series.push(am5radar.RadarLineSeries[\"new\"](root, {\n        name: \"Expense\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"value2\",\n        categoryXField: \"name\",\n        stacked: true,\n        tooltip: am5.Tooltip[\"new\"](root, {\n          labelText: \"Revenue: {value1}\\nExpense:{value2}\"\n        }),\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\"))\n      }));\n      series2.strokes.template.setAll({\n        strokeOpacity: 0\n      });\n      series2.fills.template.setAll({\n        visible: true,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n        fillOpacity: 0.5\n      });\n      var legend = chart.radarContainer.children.push(am5.Legend[\"new\"](root, {\n        width: 150,\n        centerX: am5.p50,\n        centerY: am5.p50\n      }));\n      legend.data.setAll([series1, series2]);\n\n      // Set data\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n      var data = [{\n        name: \"Openlane\",\n        value1: 160.2,\n        value2: 66.9\n      }, {\n        name: \"Yearin\",\n        value1: 150.1,\n        value2: 50.5\n      }, {\n        name: \"Goodsilron\",\n        value1: 120.7,\n        value2: 32.3\n      }, {\n        name: \"Condax\",\n        value1: 89.4,\n        value2: 74.5\n      }, {\n        name: \"Opentech\",\n        value1: 78.5,\n        value2: 29.7\n      }, {\n        name: \"Golddex\",\n        value1: 77.6,\n        value2: 102.2\n      }, {\n        name: \"Isdom\",\n        value1: 69.8,\n        value2: 22.6\n      }, {\n        name: \"Plusstrip\",\n        value1: 63.6,\n        value2: 45.3\n      }, {\n        name: \"Kinnamplus\",\n        value1: 59.7,\n        value2: 12.8\n      }, {\n        name: \"Zumgoity\",\n        value1: 54.3,\n        value2: 19.6\n      }, {\n        name: \"Stanredtax\",\n        value1: 52.9,\n        value2: 96.3\n      }, {\n        name: \"Conecom\",\n        value1: 42.9,\n        value2: 11.9\n      }, {\n        name: \"Zencorporation\",\n        value1: 40.9,\n        value2: 16.8\n      }, {\n        name: \"Iselectrics\",\n        value1: 39.2,\n        value2: 9.9\n      }, {\n        name: \"Treequote\",\n        value1: 36.6,\n        value2: 36.9\n      }, {\n        name: \"Sumace\",\n        value1: 34.8,\n        value2: 14.6\n      }, {\n        name: \"Lexiqvolax\",\n        value1: 32.1,\n        value2: 35.6\n      }, {\n        name: \"Sunnamplex\",\n        value1: 31.8,\n        value2: 5.9\n      }, {\n        name: \"Faxquote\",\n        value1: 29.3,\n        value2: 14.7\n      }, {\n        name: \"Donware\",\n        value1: 23.0,\n        value2: 2.8\n      }, {\n        name: \"Warephase\",\n        value1: 21.5,\n        value2: 12.1\n      }, {\n        name: \"Donquadtech\",\n        value1: 19.7,\n        value2: 10.8\n      }, {\n        name: \"Nam-zim\",\n        value1: 15.5,\n        value2: 4.1\n      }, {\n        name: \"Y-corporation\",\n        value1: 14.2,\n        value2: 11.3\n      }];\n      series1.data.setAll(data);\n      series2.data.setAll(data);\n      xAxis.data.setAll(data);\n\n      // Animate chart and series in\n      // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n      series1.appear(1000);\n      series2.appear(1000);\n      chart.appear(1000, 100);\n    }); // end am5.ready()\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart1();\n      initChart2();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget25;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget25.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-25.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-26.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-26.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget26 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_26\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n    var lightColor = KTUtil.getCssVariableValue('--bs-primary');\n    var chartInfo = element.getAttribute('data-kt-chart-info');\n    var options = {\n      series: [{\n        name: chartInfo,\n        data: [34.5, 34.5, 35, 35, 35.5, 35.5, 35, 35, 35.5, 35.5, 35, 35, 34.5, 34.5, 35, 35, 35.5, 35.5, 35]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0,\n          stops: [0, 80, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 6,\n        labels: {\n          rotate: 0,\n          rotateAlways: true,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        max: 36.3,\n        min: 33,\n        tickAmount: 6,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          },\n          formatter: function formatter(val) {\n            return '$' + parseInt(10 * val);\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return '$' + parseInt(10 * val);\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget26;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget26.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-26.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-27.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-27.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget27 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_27\");\n    if (!element) {\n      return;\n    }\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var maxValue = 18;\n    var options = {\n      series: [{\n        name: 'Sessions',\n        data: [12.478, 7.546, 6.083, 5.041, 4.420]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: 350,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 8,\n          horizontal: true,\n          distributed: true,\n          barHeight: 50,\n          dataLabels: {\n            position: 'bottom' // use 'bottom' for left and 'top' for right align(textAnchor)\n          }\n        }\n      },\n\n      dataLabels: {\n        // Docs: https://apexcharts.com/docs/options/datalabels/\n        enabled: true,\n        textAnchor: 'start',\n        offsetX: 0,\n        formatter: function formatter(val, opts) {\n          var val = val * 1000;\n          var Format = wNumb({\n            //prefix: '$',\n            //suffix: ',-',\n            thousand: ','\n          });\n          return Format.to(val);\n        },\n        style: {\n          fontSize: '14px',\n          fontWeight: '600',\n          align: 'left'\n        }\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA'],\n      xaxis: {\n        categories: [\"USA\", \"India\", 'Canada', 'Brasil', 'France'],\n        labels: {\n          formatter: function formatter(val) {\n            return val + \"K\";\n          },\n          style: {\n            colors: labelColor,\n            fontSize: '14px',\n            fontWeight: '600',\n            align: 'left'\n          }\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          formatter: function formatter(val, opt) {\n            if (Number.isInteger(val)) {\n              var percentage = parseInt(val * 100 / maxValue).toString();\n              return val + ' - ' + percentage + '%';\n            } else {\n              return val;\n            }\n          },\n          style: {\n            colors: labelColor,\n            fontSize: '14px',\n            fontWeight: '600'\n          },\n          offsetY: 2,\n          align: 'left'\n        }\n      },\n      grid: {\n        borderColor: borderColor,\n        xaxis: {\n          lines: {\n            show: true\n          }\n        },\n        yaxis: {\n          lines: {\n            show: false\n          }\n        },\n        strokeDashArray: 4\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val;\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget27;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget27.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-27.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-28.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-28.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget28 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_28\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-info');\n    var options = {\n      series: [{\n        name: 'Links',\n        data: [190, 230, 230, 200, 200, 190, 190, 200, 200, 220, 220, 200, 200, 210, 210]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0,\n          stops: [0, 80, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['May 04', 'May 05', 'May 06', 'May 09', 'May 10', 'May 12', 'May 14', 'May 17', 'May 18', 'May 20', 'May 22', 'May 24', 'May 26', 'May 28', 'May 30'],\n        axisBorder: {\n          show: false\n        },\n        offsetX: 20,\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 3,\n        labels: {\n          rotate: 0,\n          rotateAlways: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 250,\n        min: 100,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          },\n          formatter: function formatter(val) {\n            return val;\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val;\n          }\n        }\n      },\n      colors: [baseColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget28;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget28.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-28.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-29.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-29.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget29 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_29\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-warning');\n    var options = {\n      series: [{\n        name: 'Position',\n        data: [4, 7.5, 7.5, 6, 6, 4, 4, 6, 6, 8, 8, 6, 6, 7, 7]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0,\n          stops: [0, 80, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        offsetX: 20,\n        tickAmount: 4,\n        labels: {\n          rotate: 0,\n          rotateAlways: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 10,\n        min: 1,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          },\n          formatter: function formatter(val) {\n            return val;\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val;\n          }\n        }\n      },\n      colors: [baseColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget29;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget29.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-29.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-3.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-3.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget3 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_3\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-success');\n    var lightColor = KTUtil.getCssVariableValue('--bs-success');\n    var options = {\n      series: [{\n        name: 'Sales',\n        data: [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0,\n          stops: [0, 80, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15', 'Apr 16', 'Apr 17', 'Apr 18', ''],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 6,\n        labels: {\n          rotate: 0,\n          rotateAlways: true,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 24,\n        min: 10,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          },\n          formatter: function formatter(val) {\n            return '$' + val + \"K\";\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return \"$\" + val + \"K\";\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget3;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget3.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-3.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-30.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-30.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget30 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_30_chart\");\n    if (!element) {\n      return;\n    }\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n      // start and end angle must be set both for chart and series\n      var chart = root.container.children.push(am5percent.PieChart[\"new\"](root, {\n        startAngle: 180,\n        endAngle: 360,\n        layout: root.verticalLayout,\n        innerRadius: am5.percent(50)\n      }));\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n      // start and end angle must be set both for chart and series\n      var series = chart.series.push(am5percent.PieSeries[\"new\"](root, {\n        startAngle: 180,\n        endAngle: 360,\n        valueField: \"value\",\n        categoryField: \"category\",\n        alignLabels: false\n      }));\n      series.labels.template.setAll({\n        fontWeight: \"400\",\n        fontSize: 13,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n      });\n      series.states.create(\"hidden\", {\n        startAngle: 180,\n        endAngle: 180\n      });\n      series.slices.template.setAll({\n        cornerRadius: 5\n      });\n      series.ticks.template.setAll({\n        forceHidden: true\n      });\n\n      // Set data\n      // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n      series.data.setAll([{\n        value: 10,\n        category: \"One\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))\n      }, {\n        value: 9,\n        category: \"Two\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n      }, {\n        value: 6,\n        category: \"Three\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-danger'))\n      }, {\n        value: 5,\n        category: \"Four\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-warning'))\n      }, {\n        value: 4,\n        category: \"Five\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-info'))\n      }, {\n        value: 3,\n        category: \"Six\",\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-secondary'))\n      }]);\n      series.appear(1000, 100);\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget30;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget30.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2hhcnRzL3dpZGdldC0zMC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLElBQUlBLGdCQUFnQixHQUFJLFlBQVk7RUFDaEM7RUFDQSxJQUFJQyxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBQSxFQUFlO0lBQ3hCO0lBQ0EsSUFBSSxPQUFPQyxHQUFHLEtBQUssV0FBVyxFQUFFO01BQzVCO0lBQ0o7SUFFQSxJQUFJQyxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLDJCQUEyQixDQUFDO0lBRWxFLElBQUksQ0FBQ0YsT0FBTyxFQUFFO01BQ1Y7SUFDSjtJQUVBRCxHQUFHLENBQUNJLEtBQUssQ0FBQyxZQUFZO01BQ2xCO01BQ0E7TUFDQSxJQUFJQyxJQUFJLEdBQUdMLEdBQUcsQ0FBQ00sSUFBSSxPQUFJLENBQUNMLE9BQU8sQ0FBQzs7TUFFaEM7TUFDQTtNQUNBSSxJQUFJLENBQUNFLFNBQVMsQ0FBQyxDQUFDQyxrQkFBa0IsT0FBSSxDQUFDSCxJQUFJLENBQUMsQ0FBQyxDQUFDOztNQUU5QztNQUNBO01BQ0E7TUFDQSxJQUFJSSxLQUFLLEdBQUdKLElBQUksQ0FBQ0ssU0FBUyxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FDcENDLFVBQVUsQ0FBQ0MsUUFBUSxPQUFJLENBQUNULElBQUksRUFBRTtRQUMxQlUsVUFBVSxFQUFFLEdBQUc7UUFDZkMsUUFBUSxFQUFFLEdBQUc7UUFDYkMsTUFBTSxFQUFFWixJQUFJLENBQUNhLGNBQWM7UUFDM0JDLFdBQVcsRUFBRW5CLEdBQUcsQ0FBQ29CLE9BQU8sQ0FBQyxFQUFFO01BQy9CLENBQUMsQ0FBQyxDQUNMOztNQUVEO01BQ0E7TUFDQTtNQUNBLElBQUlDLE1BQU0sR0FBR1osS0FBSyxDQUFDWSxNQUFNLENBQUNULElBQUksQ0FDMUJDLFVBQVUsQ0FBQ1MsU0FBUyxPQUFJLENBQUNqQixJQUFJLEVBQUU7UUFDM0JVLFVBQVUsRUFBRSxHQUFHO1FBQ2ZDLFFBQVEsRUFBRSxHQUFHO1FBQ2JPLFVBQVUsRUFBRSxPQUFPO1FBQ25CQyxhQUFhLEVBQUUsVUFBVTtRQUN6QkMsV0FBVyxFQUFFO01BQ2pCLENBQUMsQ0FBQyxDQUNMO01BRURKLE1BQU0sQ0FBQ0ssTUFBTSxDQUFDQyxRQUFRLENBQUNDLE1BQU0sQ0FBQztRQUMxQkMsVUFBVSxFQUFFLEtBQUs7UUFDakJDLFFBQVEsRUFBRSxFQUFFO1FBQ1pDLElBQUksRUFBRS9CLEdBQUcsQ0FBQ2dDLEtBQUssQ0FBQ0MsTUFBTSxDQUFDQyxtQkFBbUIsQ0FBQyxlQUFlLENBQUM7TUFDL0QsQ0FBQyxDQUFDO01BRUZiLE1BQU0sQ0FBQ2MsTUFBTSxDQUFDQyxNQUFNLENBQUMsUUFBUSxFQUFFO1FBQzNCckIsVUFBVSxFQUFFLEdBQUc7UUFDZkMsUUFBUSxFQUFFO01BQ2QsQ0FBQyxDQUFDO01BRUZLLE1BQU0sQ0FBQ2dCLE1BQU0sQ0FBQ1YsUUFBUSxDQUFDQyxNQUFNLENBQUM7UUFDMUJVLFlBQVksRUFBRTtNQUNsQixDQUFDLENBQUM7TUFFRmpCLE1BQU0sQ0FBQ2tCLEtBQUssQ0FBQ1osUUFBUSxDQUFDQyxNQUFNLENBQUM7UUFDekJZLFdBQVcsRUFBRTtNQUNqQixDQUFDLENBQUM7O01BRUY7TUFDQTtNQUNBbkIsTUFBTSxDQUFDb0IsSUFBSSxDQUFDYixNQUFNLENBQUMsQ0FDZjtRQUFFYyxLQUFLLEVBQUUsRUFBRTtRQUFFQyxRQUFRLEVBQUUsS0FBSztRQUFFWixJQUFJLEVBQUUvQixHQUFHLENBQUNnQyxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsY0FBYyxDQUFDO01BQUUsQ0FBQyxFQUMzRjtRQUFFUSxLQUFLLEVBQUUsQ0FBQztRQUFFQyxRQUFRLEVBQUUsS0FBSztRQUFFWixJQUFJLEVBQUUvQixHQUFHLENBQUNnQyxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsY0FBYyxDQUFDO01BQUUsQ0FBQyxFQUMxRjtRQUFFUSxLQUFLLEVBQUUsQ0FBQztRQUFFQyxRQUFRLEVBQUUsT0FBTztRQUFFWixJQUFJLEVBQUUvQixHQUFHLENBQUNnQyxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsYUFBYSxDQUFDO01BQUUsQ0FBQyxFQUMzRjtRQUFFUSxLQUFLLEVBQUUsQ0FBQztRQUFFQyxRQUFRLEVBQUUsTUFBTTtRQUFFWixJQUFJLEVBQUUvQixHQUFHLENBQUNnQyxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsY0FBYyxDQUFDO01BQUUsQ0FBQyxFQUMzRjtRQUFFUSxLQUFLLEVBQUUsQ0FBQztRQUFFQyxRQUFRLEVBQUUsTUFBTTtRQUFFWixJQUFJLEVBQUUvQixHQUFHLENBQUNnQyxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsV0FBVyxDQUFDO01BQUUsQ0FBQyxFQUN4RjtRQUFFUSxLQUFLLEVBQUUsQ0FBQztRQUFFQyxRQUFRLEVBQUUsS0FBSztRQUFFWixJQUFJLEVBQUUvQixHQUFHLENBQUNnQyxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsbUJBQW1CLENBQUMsZ0JBQWdCLENBQUM7TUFBRSxDQUFDLENBQy9GLENBQUM7TUFFRmIsTUFBTSxDQUFDdUIsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLENBQUM7SUFDNUIsQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLE9BQU87SUFDSEMsSUFBSSxFQUFFLFNBQUFBLEtBQUEsRUFBWTtNQUNkOUMsU0FBUyxFQUFFO0lBQ2Y7RUFDSixDQUFDO0FBQ0wsQ0FBQyxFQUFHOztBQUVKO0FBQ0EsSUFBSSxJQUE2QixFQUFFO0VBQy9CK0MsTUFBTSxDQUFDQyxPQUFPLEdBQUdqRCxnQkFBZ0I7QUFDckM7O0FBRUE7QUFDQW1DLE1BQU0sQ0FBQ2Usa0JBQWtCLENBQUMsWUFBWTtFQUNsQ2xELGdCQUFnQixDQUFDK0MsSUFBSSxFQUFFO0FBQzNCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9zcmMvanMvd2lkZ2V0cy9jaGFydHMvd2lkZ2V0LTMwLmpzPzU3MTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVENoYXJ0c1dpZGdldDMwID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIFByaXZhdGUgbWV0aG9kc1xyXG4gICAgdmFyIGluaXRDaGFydCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAvLyBDaGVjayBpZiBhbWNoYXJ0IGxpYnJhcnkgaXMgaW5jbHVkZWRcclxuICAgICAgICBpZiAodHlwZW9mIGFtNSA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwia3RfY2hhcnRzX3dpZGdldF8zMF9jaGFydFwiKTtcclxuXHJcbiAgICAgICAgaWYgKCFlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGFtNS5yZWFkeShmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSByb290IGVsZW1lbnRcclxuICAgICAgICAgICAgLy8gaHR0cHM6Ly93d3cuYW1jaGFydHMuY29tL2RvY3MvdjUvZ2V0dGluZy1zdGFydGVkLyNSb290X2VsZW1lbnRcclxuICAgICAgICAgICAgdmFyIHJvb3QgPSBhbTUuUm9vdC5uZXcoZWxlbWVudCk7XHJcblxyXG4gICAgICAgICAgICAvLyBTZXQgdGhlbWVzXHJcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2NvbmNlcHRzL3RoZW1lcy9cclxuICAgICAgICAgICAgcm9vdC5zZXRUaGVtZXMoW2FtNXRoZW1lc19BbmltYXRlZC5uZXcocm9vdCldKTtcclxuXHJcbiAgICAgICAgICAgIC8vIENyZWF0ZSBjaGFydFxyXG4gICAgICAgICAgICAvLyBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS9jaGFydHMvcGVyY2VudC1jaGFydHMvcGllLWNoYXJ0L1xyXG4gICAgICAgICAgICAvLyBzdGFydCBhbmQgZW5kIGFuZ2xlIG11c3QgYmUgc2V0IGJvdGggZm9yIGNoYXJ0IGFuZCBzZXJpZXNcclxuICAgICAgICAgICAgdmFyIGNoYXJ0ID0gcm9vdC5jb250YWluZXIuY2hpbGRyZW4ucHVzaChcclxuICAgICAgICAgICAgICAgIGFtNXBlcmNlbnQuUGllQ2hhcnQubmV3KHJvb3QsIHtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydEFuZ2xlOiAxODAsXHJcbiAgICAgICAgICAgICAgICAgICAgZW5kQW5nbGU6IDM2MCxcclxuICAgICAgICAgICAgICAgICAgICBsYXlvdXQ6IHJvb3QudmVydGljYWxMYXlvdXQsXHJcbiAgICAgICAgICAgICAgICAgICAgaW5uZXJSYWRpdXM6IGFtNS5wZXJjZW50KDUwKSxcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICAvLyBDcmVhdGUgc2VyaWVzXHJcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vd3d3LmFtY2hhcnRzLmNvbS9kb2NzL3Y1L2NoYXJ0cy9wZXJjZW50LWNoYXJ0cy9waWUtY2hhcnQvI1Nlcmllc1xyXG4gICAgICAgICAgICAvLyBzdGFydCBhbmQgZW5kIGFuZ2xlIG11c3QgYmUgc2V0IGJvdGggZm9yIGNoYXJ0IGFuZCBzZXJpZXNcclxuICAgICAgICAgICAgdmFyIHNlcmllcyA9IGNoYXJ0LnNlcmllcy5wdXNoKFxyXG4gICAgICAgICAgICAgICAgYW01cGVyY2VudC5QaWVTZXJpZXMubmV3KHJvb3QsIHtcclxuICAgICAgICAgICAgICAgICAgICBzdGFydEFuZ2xlOiAxODAsXHJcbiAgICAgICAgICAgICAgICAgICAgZW5kQW5nbGU6IDM2MCxcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZUZpZWxkOiBcInZhbHVlXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnlGaWVsZDogXCJjYXRlZ29yeVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGFsaWduTGFiZWxzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICBzZXJpZXMubGFiZWxzLnRlbXBsYXRlLnNldEFsbCh7XHJcbiAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiBcIjQwMFwiLFxyXG4gICAgICAgICAgICAgICAgZm9udFNpemU6IDEzLFxyXG4gICAgICAgICAgICAgICAgZmlsbDogYW01LmNvbG9yKEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWdyYXktNTAwJykpXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgc2VyaWVzLnN0YXRlcy5jcmVhdGUoXCJoaWRkZW5cIiwge1xyXG4gICAgICAgICAgICAgICAgc3RhcnRBbmdsZTogMTgwLFxyXG4gICAgICAgICAgICAgICAgZW5kQW5nbGU6IDE4MCxcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBzZXJpZXMuc2xpY2VzLnRlbXBsYXRlLnNldEFsbCh7XHJcbiAgICAgICAgICAgICAgICBjb3JuZXJSYWRpdXM6IDUsXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgc2VyaWVzLnRpY2tzLnRlbXBsYXRlLnNldEFsbCh7XHJcbiAgICAgICAgICAgICAgICBmb3JjZUhpZGRlbjogdHJ1ZSxcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvLyBTZXQgZGF0YVxyXG4gICAgICAgICAgICAvLyBodHRwczovL3d3dy5hbWNoYXJ0cy5jb20vZG9jcy92NS9jaGFydHMvcGVyY2VudC1jaGFydHMvcGllLWNoYXJ0LyNTZXR0aW5nX2RhdGFcclxuICAgICAgICAgICAgc2VyaWVzLmRhdGEuc2V0QWxsKFtcclxuICAgICAgICAgICAgICAgIHsgdmFsdWU6IDEwLCBjYXRlZ29yeTogXCJPbmVcIiwgZmlsbDogYW01LmNvbG9yKEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLXByaW1hcnknKSkgfSxcclxuICAgICAgICAgICAgICAgIHsgdmFsdWU6IDksIGNhdGVnb3J5OiBcIlR3b1wiLCBmaWxsOiBhbTUuY29sb3IoS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtc3VjY2VzcycpKSB9LFxyXG4gICAgICAgICAgICAgICAgeyB2YWx1ZTogNiwgY2F0ZWdvcnk6IFwiVGhyZWVcIiwgZmlsbDogYW01LmNvbG9yKEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWRhbmdlcicpKSB9LFxyXG4gICAgICAgICAgICAgICAgeyB2YWx1ZTogNSwgY2F0ZWdvcnk6IFwiRm91clwiLCBmaWxsOiBhbTUuY29sb3IoS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtd2FybmluZycpKSB9LFxyXG4gICAgICAgICAgICAgICAgeyB2YWx1ZTogNCwgY2F0ZWdvcnk6IFwiRml2ZVwiLCBmaWxsOiBhbTUuY29sb3IoS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtaW5mbycpKSB9LFxyXG4gICAgICAgICAgICAgICAgeyB2YWx1ZTogMywgY2F0ZWdvcnk6IFwiU2l4XCIsIGZpbGw6IGFtNS5jb2xvcihLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1zZWNvbmRhcnknKSkgfVxyXG4gICAgICAgICAgICBdKTtcclxuXHJcbiAgICAgICAgICAgIHNlcmllcy5hcHBlYXIoMTAwMCwgMTAwKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcblxyXG4gICAgLy8gUHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpbml0Q2hhcnQoKTtcclxuICAgICAgICB9LFxyXG4gICAgfTtcclxufSkoKTtcclxuXHJcbi8vIFdlYnBhY2sgc3VwcG9ydFxyXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBLVENoYXJ0c1dpZGdldDMwO1xyXG59XHJcblxyXG4vLyBPbiBkb2N1bWVudCByZWFkeVxyXG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uICgpIHtcclxuICAgIEtUQ2hhcnRzV2lkZ2V0MzAuaW5pdCgpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIktUQ2hhcnRzV2lkZ2V0MzAiLCJpbml0Q2hhcnQiLCJhbTUiLCJlbGVtZW50IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInJlYWR5Iiwicm9vdCIsIlJvb3QiLCJzZXRUaGVtZXMiLCJhbTV0aGVtZXNfQW5pbWF0ZWQiLCJjaGFydCIsImNvbnRhaW5lciIsImNoaWxkcmVuIiwicHVzaCIsImFtNXBlcmNlbnQiLCJQaWVDaGFydCIsInN0YXJ0QW5nbGUiLCJlbmRBbmdsZSIsImxheW91dCIsInZlcnRpY2FsTGF5b3V0IiwiaW5uZXJSYWRpdXMiLCJwZXJjZW50Iiwic2VyaWVzIiwiUGllU2VyaWVzIiwidmFsdWVGaWVsZCIsImNhdGVnb3J5RmllbGQiLCJhbGlnbkxhYmVscyIsImxhYmVscyIsInRlbXBsYXRlIiwic2V0QWxsIiwiZm9udFdlaWdodCIsImZvbnRTaXplIiwiZmlsbCIsImNvbG9yIiwiS1RVdGlsIiwiZ2V0Q3NzVmFyaWFibGVWYWx1ZSIsInN0YXRlcyIsImNyZWF0ZSIsInNsaWNlcyIsImNvcm5lclJhZGl1cyIsInRpY2tzIiwiZm9yY2VIaWRkZW4iLCJkYXRhIiwidmFsdWUiLCJjYXRlZ29yeSIsImFwcGVhciIsImluaXQiLCJtb2R1bGUiLCJleHBvcnRzIiwib25ET01Db250ZW50TG9hZGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-30.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-31.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-31.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget31 = function () {\n  // Private methods\n  var initChart1 = function initChart1() {\n    // Check if amchart library is included\n    if (typeof am5 === \"undefined\") {\n      return;\n    }\n    var element = document.getElementById(\"kt_charts_widget_31_chart\");\n    if (!element) {\n      return;\n    }\n\n    // On amchart ready\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create chart\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/\n      var chart = root.container.children.push(am5radar.RadarChart[\"new\"](root, {\n        panX: false,\n        panY: false,\n        wheelX: \"panX\",\n        wheelY: \"zoomX\",\n        innerRadius: am5.percent(40),\n        radius: am5.percent(70),\n        arrangeTooltips: false\n      }));\n      var cursor = chart.set(\"cursor\", am5radar.RadarCursor[\"new\"](root, {\n        behavior: \"zoomX\"\n      }));\n      cursor.lineY.set(\"visible\", false);\n\n      // Create axes and their renderers\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n      var xRenderer = am5radar.AxisRendererCircular[\"new\"](root, {\n        minGridDistance: 30\n      });\n      xRenderer.labels.template.setAll({\n        textType: \"radial\",\n        radius: 10,\n        paddingTop: 0,\n        paddingBottom: 0,\n        centerY: am5.p50,\n        fontWeight: \"400\",\n        fontSize: 11,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-700'))\n      });\n      xRenderer.grid.template.setAll({\n        location: 0.5,\n        strokeDasharray: [2, 2]\n      });\n      var xAxis = chart.xAxes.push(am5xy.CategoryAxis[\"new\"](root, {\n        maxDeviation: 0,\n        categoryField: \"name\",\n        renderer: xRenderer\n      }));\n      var yRenderer = am5radar.AxisRendererRadial[\"new\"](root, {\n        minGridDistance: 30\n      });\n      var yAxis = chart.yAxes.push(am5xy.ValueAxis[\"new\"](root, {\n        renderer: yRenderer\n      }));\n      yRenderer.grid.template.setAll({\n        strokeDasharray: [2, 2]\n      });\n\n      // Create series\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n      var series1 = chart.series.push(am5radar.RadarLineSeries[\"new\"](root, {\n        name: \"Revenue\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"value1\",\n        categoryXField: \"name\",\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\"))\n      }));\n      series1.strokes.template.setAll({\n        strokeOpacity: 0\n      });\n      series1.fills.template.setAll({\n        visible: true,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n        fillOpacity: 0.5\n      });\n      var series2 = chart.series.push(am5radar.RadarLineSeries[\"new\"](root, {\n        name: \"Expense\",\n        xAxis: xAxis,\n        yAxis: yAxis,\n        valueYField: \"value2\",\n        categoryXField: \"name\",\n        stacked: true,\n        tooltip: am5.Tooltip[\"new\"](root, {\n          labelText: \"Revenue: {value1}\\nExpense:{value2}\"\n        }),\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\"))\n      }));\n      series2.strokes.template.setAll({\n        strokeOpacity: 0\n      });\n      series2.fills.template.setAll({\n        visible: true,\n        fill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n        fillOpacity: 0.5\n      });\n      var legend = chart.radarContainer.children.push(am5.Legend[\"new\"](root, {\n        width: 150,\n        centerX: am5.p50,\n        centerY: am5.p50\n      }));\n      legend.data.setAll([series1, series2]);\n\n      // Set data\n      // https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n      var data = [{\n        name: \"Openlane\",\n        value1: 160.2,\n        value2: 26.9\n      }, {\n        name: \"Yearin\",\n        value1: 120.1,\n        value2: 50.5\n      }, {\n        name: \"Goodsilron\",\n        value1: 150.7,\n        value2: 12.3\n      }, {\n        name: \"Condax\",\n        value1: 69.4,\n        value2: 74.5\n      }, {\n        name: \"Opentech\",\n        value1: 78.5,\n        value2: 29.7\n      }, {\n        name: \"Golddex\",\n        value1: 77.6,\n        value2: 102.2\n      }, {\n        name: \"Isdom\",\n        value1: 69.8,\n        value2: 22.6\n      }, {\n        name: \"Plusstrip\",\n        value1: 63.6,\n        value2: 45.3\n      }, {\n        name: \"Kinnamplus\",\n        value1: 59.7,\n        value2: 12.8\n      }, {\n        name: \"Zumgoity\",\n        value1: 64.3,\n        value2: 19.6\n      }, {\n        name: \"Stanredtax\",\n        value1: 52.9,\n        value2: 96.3\n      }, {\n        name: \"Conecom\",\n        value1: 42.9,\n        value2: 11.9\n      }, {\n        name: \"Zencorporation\",\n        value1: 40.9,\n        value2: 16.8\n      }, {\n        name: \"Iselectrics\",\n        value1: 39.2,\n        value2: 9.9\n      }, {\n        name: \"Treequote\",\n        value1: 76.6,\n        value2: 36.9\n      }, {\n        name: \"Sumace\",\n        value1: 34.8,\n        value2: 14.6\n      }, {\n        name: \"Lexiqvolax\",\n        value1: 32.1,\n        value2: 35.6\n      }, {\n        name: \"Sunnamplex\",\n        value1: 31.8,\n        value2: 5.9\n      }, {\n        name: \"Faxquote\",\n        value1: 29.3,\n        value2: 14.7\n      }, {\n        name: \"Donware\",\n        value1: 23.0,\n        value2: 2.8\n      }, {\n        name: \"Warephase\",\n        value1: 21.5,\n        value2: 12.1\n      }, {\n        name: \"Donquadtech\",\n        value1: 19.7,\n        value2: 10.8\n      }, {\n        name: \"Nam-zim\",\n        value1: 15.5,\n        value2: 4.1\n      }, {\n        name: \"Y-corporation\",\n        value1: 14.2,\n        value2: 11.3\n      }];\n      series1.data.setAll(data);\n      series2.data.setAll(data);\n      xAxis.data.setAll(data);\n\n      // Animate chart and series in\n      // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n      series1.appear(1000);\n      series2.appear(1000);\n      chart.appear(1000, 100);\n    }); // end am5.ready()\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart1();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget31;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget31.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-31.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-32.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-32.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget32 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var options = {\n      series: [{\n        name: 'Deliveries',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: ['22%'],\n          borderRadius: 5,\n          dataLabels: {\n            position: \"top\" // top, center, bottom\n          },\n\n          startingShape: 'flat'\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: true,\n        offsetY: -28,\n        style: {\n          fontSize: '13px',\n          colors: ['labelColor']\n        }\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Grossey', 'Pet Food', 'Flowers', 'Restaurant', 'Kids Toys', 'Clothing', 'Still Water'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          }\n        },\n        crosshairs: {\n          fill: {\n            gradient: {\n              opacityFrom: 0,\n              opacityTo: 0\n            }\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        }\n      },\n      colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_charts_widget_32_tab_1', '#kt_charts_widget_32_chart_1', [54, 42, 75, 110, 23, 87, 50], true);\n      initChart('#kt_charts_widget_32_tab_2', '#kt_charts_widget_32_chart_2', [25, 55, 35, 50, 45, 20, 31], false);\n      initChart('#kt_charts_widget_32_tab_3', '#kt_charts_widget_32_chart_3', [45, 15, 35, 70, 45, 50, 21], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget32;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget32.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvY2hhcnRzL3dpZGdldC0zMi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLElBQUlBLGdCQUFnQixHQUFHLFlBQVk7RUFDL0I7RUFDQSxJQUFJQyxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBWUMsV0FBVyxFQUFFQyxhQUFhLEVBQUVDLElBQUksRUFBRUMsYUFBYSxFQUFFO0lBQ3RFLElBQUlDLE9BQU8sR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUNMLGFBQWEsQ0FBQztJQUVuRCxJQUFJLENBQUNHLE9BQU8sRUFBRTtNQUNWO0lBQ0o7SUFFQSxJQUFJRyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUNOLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNwRCxJQUFJTyxVQUFVLEdBQUdGLE1BQU0sQ0FBQ0csbUJBQW1CLENBQUMsZUFBZSxDQUFDO0lBRTVELElBQUlDLFdBQVcsR0FBR0osTUFBTSxDQUFDRyxtQkFBbUIsQ0FBQywwQkFBMEIsQ0FBQztJQUV4RSxJQUFJRSxPQUFPLEdBQUc7TUFDVkMsTUFBTSxFQUFFLENBQUM7UUFDTEMsSUFBSSxFQUFFLFlBQVk7UUFDbEJkLElBQUksRUFBRUE7TUFDVixDQUFDLENBQUM7TUFDRmUsS0FBSyxFQUFFO1FBQ0hDLFVBQVUsRUFBRSxTQUFTO1FBQ3JCQyxJQUFJLEVBQUUsS0FBSztRQUNYWixNQUFNLEVBQUVBLE1BQU07UUFDZGEsT0FBTyxFQUFFO1VBQ0xDLElBQUksRUFBRTtRQUNWO01BQ0osQ0FBQztNQUNEQyxXQUFXLEVBQUU7UUFDVEMsR0FBRyxFQUFFO1VBQ0RDLFVBQVUsRUFBRSxLQUFLO1VBQ2pCQyxXQUFXLEVBQUUsQ0FBQyxLQUFLLENBQUM7VUFDcEJDLFlBQVksRUFBRSxDQUFDO1VBQ2ZDLFVBQVUsRUFBRTtZQUNSQyxRQUFRLEVBQUUsS0FBSyxDQUFDO1VBQ3BCLENBQUM7O1VBQ0RDLGFBQWEsRUFBRTtRQUNuQjtNQUNKLENBQUM7TUFDREMsTUFBTSxFQUFFO1FBQ0pULElBQUksRUFBRTtNQUNWLENBQUM7TUFDRE0sVUFBVSxFQUFFO1FBQ1JJLE9BQU8sRUFBRSxJQUFJO1FBQ2JDLE9BQU8sRUFBRSxDQUFDLEVBQUU7UUFDWkMsS0FBSyxFQUFFO1VBQ0hDLFFBQVEsRUFBRSxNQUFNO1VBQ2hCQyxNQUFNLEVBQUUsQ0FBQyxZQUFZO1FBQ3pCO01BQ0osQ0FBQztNQUNEQyxNQUFNLEVBQUU7UUFDSmYsSUFBSSxFQUFFLElBQUk7UUFDVmdCLEtBQUssRUFBRSxDQUFDO1FBQ1JGLE1BQU0sRUFBRSxDQUFDLGFBQWE7TUFDMUIsQ0FBQztNQUNERyxLQUFLLEVBQUU7UUFDSEMsVUFBVSxFQUFFLENBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsYUFBYSxDQUFDO1FBQ3BHQyxVQUFVLEVBQUU7VUFDUm5CLElBQUksRUFBRTtRQUNWLENBQUM7UUFDRG9CLFNBQVMsRUFBRTtVQUNQcEIsSUFBSSxFQUFFO1FBQ1YsQ0FBQztRQUNEcUIsTUFBTSxFQUFFO1VBQ0pULEtBQUssRUFBRTtZQUNIRSxNQUFNLEVBQUUxQixNQUFNLENBQUNHLG1CQUFtQixDQUFDLGVBQWUsQ0FBQztZQUNuRHNCLFFBQVEsRUFBRTtVQUNkO1FBQ0osQ0FBQztRQUNEUyxVQUFVLEVBQUU7VUFDUkMsSUFBSSxFQUFFO1lBQ0ZDLFFBQVEsRUFBRTtjQUNOQyxXQUFXLEVBQUUsQ0FBQztjQUNkQyxTQUFTLEVBQUU7WUFDZjtVQUNKO1FBQ0o7TUFDSixDQUFDO01BQ0RDLEtBQUssRUFBRTtRQUNITixNQUFNLEVBQUU7VUFDSlQsS0FBSyxFQUFFO1lBQ0hFLE1BQU0sRUFBRTFCLE1BQU0sQ0FBQ0csbUJBQW1CLENBQUMsZUFBZSxDQUFDO1lBQ25Ec0IsUUFBUSxFQUFFO1VBQ2Q7UUFDSjtNQUNKLENBQUM7TUFDRFUsSUFBSSxFQUFFO1FBQ0ZLLE9BQU8sRUFBRTtNQUNiLENBQUM7TUFDREMsTUFBTSxFQUFFO1FBQ0pDLE1BQU0sRUFBRTtVQUNKQyxNQUFNLEVBQUU7WUFDSmpDLElBQUksRUFBRSxNQUFNO1lBQ1prQyxLQUFLLEVBQUU7VUFDWDtRQUNKLENBQUM7UUFDREMsS0FBSyxFQUFFO1VBQ0hGLE1BQU0sRUFBRTtZQUNKakMsSUFBSSxFQUFFLE1BQU07WUFDWmtDLEtBQUssRUFBRTtVQUNYO1FBQ0osQ0FBQztRQUNERSxNQUFNLEVBQUU7VUFDSkMsZ0NBQWdDLEVBQUUsS0FBSztVQUN2Q0osTUFBTSxFQUFFO1lBQ0pqQyxJQUFJLEVBQUUsTUFBTTtZQUNaa0MsS0FBSyxFQUFFO1VBQ1g7UUFDSjtNQUNKLENBQUM7TUFDREksT0FBTyxFQUFFO1FBQ0x4QixLQUFLLEVBQUU7VUFDSEMsUUFBUSxFQUFFO1FBQ2Q7TUFDSixDQUFDO01BQ0RDLE1BQU0sRUFBRSxDQUFDMUIsTUFBTSxDQUFDRyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsRUFBRUgsTUFBTSxDQUFDRyxtQkFBbUIsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO01BQ3RHOEMsSUFBSSxFQUFFO1FBQ0Y3QyxXQUFXLEVBQUVBLFdBQVc7UUFDeEI4QyxlQUFlLEVBQUUsQ0FBQztRQUNsQlgsS0FBSyxFQUFFO1VBQ0hZLEtBQUssRUFBRTtZQUNIdkMsSUFBSSxFQUFFO1VBQ1Y7UUFDSjtNQUNKO0lBQ0osQ0FBQztJQUVELElBQUlKLEtBQUssR0FBRyxJQUFJNEMsVUFBVSxDQUFDekQsT0FBTyxFQUFFVSxPQUFPLENBQUM7SUFFNUMsSUFBSWdELElBQUksR0FBRyxLQUFLO0lBQ2hCLElBQUlDLEdBQUcsR0FBRzFELFFBQVEsQ0FBQ0MsYUFBYSxDQUFDTixXQUFXLENBQUM7SUFFN0MsSUFBSUcsYUFBYSxLQUFLLElBQUksRUFBRTtNQUN4QmMsS0FBSyxDQUFDK0MsTUFBTSxFQUFFO01BQ2RGLElBQUksR0FBRyxJQUFJO0lBQ2Y7SUFFQUMsR0FBRyxDQUFDRSxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUUsVUFBVUMsS0FBSyxFQUFFO01BQ2xELElBQUlKLElBQUksSUFBSSxLQUFLLEVBQUU7UUFDZjdDLEtBQUssQ0FBQytDLE1BQU0sRUFBRTtRQUNkRixJQUFJLEdBQUcsSUFBSTtNQUNmO0lBQ0osQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLE9BQU87SUFDSEEsSUFBSSxFQUFFLFNBQUFBLEtBQUEsRUFBWTtNQUNkL0QsU0FBUyxDQUFDLDRCQUE0QixFQUFFLDhCQUE4QixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDO01BQzVHQSxTQUFTLENBQUMsNEJBQTRCLEVBQUUsOEJBQThCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUM7TUFDNUdBLFNBQVMsQ0FBQyw0QkFBNEIsRUFBRSw4QkFBOEIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEtBQUssQ0FBQztJQUNoSDtFQUNKLENBQUM7QUFDTCxDQUFDLEVBQUU7O0FBRUg7QUFDQSxJQUFJLElBQTZCLEVBQUU7RUFDL0JvRSxNQUFNLENBQUNDLE9BQU8sR0FBR3RFLGdCQUFnQjtBQUNyQzs7QUFFQTtBQUNBVyxNQUFNLENBQUM0RCxrQkFBa0IsQ0FBQyxZQUFXO0VBQ2pDdkUsZ0JBQWdCLENBQUNnRSxJQUFJLEVBQUU7QUFDM0IsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3NyYy9qcy93aWRnZXRzL2NoYXJ0cy93aWRnZXQtMzIuanM/YWJmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIENsYXNzIGRlZmluaXRpb25cclxudmFyIEtUQ2hhcnRzV2lkZ2V0MzIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBQcml2YXRlIG1ldGhvZHNcclxuICAgIHZhciBpbml0Q2hhcnQgPSBmdW5jdGlvbih0YWJTZWxlY3RvciwgY2hhcnRTZWxlY3RvciwgZGF0YSwgaW5pdEJ5RGVmYXVsdCkge1xyXG4gICAgICAgIHZhciBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjaGFydFNlbGVjdG9yKTtcclxuXHJcbiAgICAgICAgaWYgKCFlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdmFyIGhlaWdodCA9IHBhcnNlSW50KEtUVXRpbC5jc3MoZWxlbWVudCwgJ2hlaWdodCcpKTtcclxuICAgICAgICB2YXIgbGFiZWxDb2xvciA9IEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWdyYXktOTAwJyk7XHJcblxyXG4gICAgICAgIHZhciBib3JkZXJDb2xvciA9IEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWJvcmRlci1kYXNoZWQtY29sb3InKTsgICAgXHJcblxyXG4gICAgICAgIHZhciBvcHRpb25zID0ge1xyXG4gICAgICAgICAgICBzZXJpZXM6IFt7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnRGVsaXZlcmllcycsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBkYXRhXHJcbiAgICAgICAgICAgIH1dLFxyXG4gICAgICAgICAgICBjaGFydDoge1xyXG4gICAgICAgICAgICAgICAgZm9udEZhbWlseTogJ2luaGVyaXQnLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogJ2JhcicsXHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGhlaWdodCxcclxuICAgICAgICAgICAgICAgIHRvb2xiYXI6IHtcclxuICAgICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZVxyXG4gICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHBsb3RPcHRpb25zOiB7XHJcbiAgICAgICAgICAgICAgICBiYXI6IHtcclxuICAgICAgICAgICAgICAgICAgICBob3Jpem9udGFsOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBjb2x1bW5XaWR0aDogWycyMiUnXSxcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IDUsICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YUxhYmVsczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJ0b3BcIiAvLyB0b3AsIGNlbnRlciwgYm90dG9tXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBzdGFydGluZ1NoYXBlOiAnZmxhdCdcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxlZ2VuZDoge1xyXG4gICAgICAgICAgICAgICAgc2hvdzogZmFsc2VcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGF0YUxhYmVsczoge1xyXG4gICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwgXHJcbiAgICAgICAgICAgICAgICBvZmZzZXRZOiAtMjgsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBzdHlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTNweCcsXHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3JzOiBbJ2xhYmVsQ29sb3InXVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzdHJva2U6IHtcclxuICAgICAgICAgICAgICAgIHNob3c6IHRydWUsXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMixcclxuICAgICAgICAgICAgICAgIGNvbG9yczogWyd0cmFuc3BhcmVudCddXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHhheGlzOiB7XHJcbiAgICAgICAgICAgICAgICBjYXRlZ29yaWVzOiBbJ0dyb3NzZXknLCAnUGV0IEZvb2QnLCAnRmxvd2VycycsICdSZXN0YXVyYW50JywgJ0tpZHMgVG95cycsICdDbG90aGluZycsICdTdGlsbCBXYXRlciddLFxyXG4gICAgICAgICAgICAgICAgYXhpc0JvcmRlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGF4aXNUaWNrczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbGFiZWxzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JzOiBLVFV0aWwuZ2V0Q3NzVmFyaWFibGVWYWx1ZSgnLS1icy1ncmF5LTUwMCcpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzEzcHgnXHJcbiAgICAgICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY3Jvc3NoYWlyczoge1xyXG4gICAgICAgICAgICAgICAgICAgIGZpbGw6IHsgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnQ6IHsgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHlGcm9tOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eVRvOiAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHlheGlzOiB7XHJcbiAgICAgICAgICAgICAgICBsYWJlbHM6IHtcclxuICAgICAgICAgICAgICAgICAgICBzdHlsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcnM6IEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLWdyYXktNTAwJyksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTNweCdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGZpbGw6IHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDFcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc3RhdGVzOiB7XHJcbiAgICAgICAgICAgICAgICBub3JtYWw6IHtcclxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBob3Zlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgIGZpbHRlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbm9uZScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAwXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGFjdGl2ZToge1xyXG4gICAgICAgICAgICAgICAgICAgIGFsbG93TXVsdGlwbGVEYXRhUG9pbnRzU2VsZWN0aW9uOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ25vbmUnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgdG9vbHRpcDoge1xyXG4gICAgICAgICAgICAgICAgc3R5bGU6IHtcclxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogJzEycHgnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNvbG9yczogW0tUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLXByaW1hcnknKSwgS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtbGlnaHQtcHJpbWFyeScpXSxcclxuICAgICAgICAgICAgZ3JpZDoge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6IGJvcmRlckNvbG9yLFxyXG4gICAgICAgICAgICAgICAgc3Ryb2tlRGFzaEFycmF5OiA0LFxyXG4gICAgICAgICAgICAgICAgeWF4aXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBsaW5lczoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIGNoYXJ0ID0gbmV3IEFwZXhDaGFydHMoZWxlbWVudCwgb3B0aW9ucyk7XHJcblxyXG4gICAgICAgIHZhciBpbml0ID0gZmFsc2U7XHJcbiAgICAgICAgdmFyIHRhYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFiU2VsZWN0b3IpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChpbml0QnlEZWZhdWx0ID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGNoYXJ0LnJlbmRlcigpO1xyXG4gICAgICAgICAgICBpbml0ID0gdHJ1ZTtcclxuICAgICAgICB9ICAgICAgICBcclxuXHJcbiAgICAgICAgdGFiLmFkZEV2ZW50TGlzdGVuZXIoJ3Nob3duLmJzLnRhYicsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgICAgICAgICBpZiAoaW5pdCA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgY2hhcnQucmVuZGVyKCk7XHJcbiAgICAgICAgICAgICAgICBpbml0ID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkgeyAgIFxyXG4gICAgICAgICAgICBpbml0Q2hhcnQoJyNrdF9jaGFydHNfd2lkZ2V0XzMyX3RhYl8xJywgJyNrdF9jaGFydHNfd2lkZ2V0XzMyX2NoYXJ0XzEnLCBbNTQsIDQyLCA3NSwgMTEwLCAyMywgODcsIDUwXSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIGluaXRDaGFydCgnI2t0X2NoYXJ0c193aWRnZXRfMzJfdGFiXzInLCAnI2t0X2NoYXJ0c193aWRnZXRfMzJfY2hhcnRfMicsIFsyNSwgNTUsIDM1LCA1MCwgNDUsIDIwLCAzMV0sIGZhbHNlKTsgXHJcbiAgICAgICAgICAgIGluaXRDaGFydCgnI2t0X2NoYXJ0c193aWRnZXRfMzJfdGFiXzMnLCAnI2t0X2NoYXJ0c193aWRnZXRfMzJfY2hhcnRfMycsIFs0NSwgMTUsIDM1LCA3MCwgNDUsIDUwLCAyMV0sIGZhbHNlKTsgXHJcbiAgICAgICAgfSAgICAgICAgXHJcbiAgICB9XHJcbn0oKTtcclxuXHJcbi8vIFdlYnBhY2sgc3VwcG9ydFxyXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIG1vZHVsZS5leHBvcnRzID0gS1RDaGFydHNXaWRnZXQzMjtcclxufVxyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbigpIHtcclxuICAgIEtUQ2hhcnRzV2lkZ2V0MzIuaW5pdCgpO1xyXG59KTtcclxuXHJcblxyXG4gIl0sIm5hbWVzIjpbIktUQ2hhcnRzV2lkZ2V0MzIiLCJpbml0Q2hhcnQiLCJ0YWJTZWxlY3RvciIsImNoYXJ0U2VsZWN0b3IiLCJkYXRhIiwiaW5pdEJ5RGVmYXVsdCIsImVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJoZWlnaHQiLCJwYXJzZUludCIsIktUVXRpbCIsImNzcyIsImxhYmVsQ29sb3IiLCJnZXRDc3NWYXJpYWJsZVZhbHVlIiwiYm9yZGVyQ29sb3IiLCJvcHRpb25zIiwic2VyaWVzIiwibmFtZSIsImNoYXJ0IiwiZm9udEZhbWlseSIsInR5cGUiLCJ0b29sYmFyIiwic2hvdyIsInBsb3RPcHRpb25zIiwiYmFyIiwiaG9yaXpvbnRhbCIsImNvbHVtbldpZHRoIiwiYm9yZGVyUmFkaXVzIiwiZGF0YUxhYmVscyIsInBvc2l0aW9uIiwic3RhcnRpbmdTaGFwZSIsImxlZ2VuZCIsImVuYWJsZWQiLCJvZmZzZXRZIiwic3R5bGUiLCJmb250U2l6ZSIsImNvbG9ycyIsInN0cm9rZSIsIndpZHRoIiwieGF4aXMiLCJjYXRlZ29yaWVzIiwiYXhpc0JvcmRlciIsImF4aXNUaWNrcyIsImxhYmVscyIsImNyb3NzaGFpcnMiLCJmaWxsIiwiZ3JhZGllbnQiLCJvcGFjaXR5RnJvbSIsIm9wYWNpdHlUbyIsInlheGlzIiwib3BhY2l0eSIsInN0YXRlcyIsIm5vcm1hbCIsImZpbHRlciIsInZhbHVlIiwiaG92ZXIiLCJhY3RpdmUiLCJhbGxvd011bHRpcGxlRGF0YVBvaW50c1NlbGVjdGlvbiIsInRvb2x0aXAiLCJncmlkIiwic3Ryb2tlRGFzaEFycmF5IiwibGluZXMiLCJBcGV4Q2hhcnRzIiwiaW5pdCIsInRhYiIsInJlbmRlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsIm1vZHVsZSIsImV4cG9ydHMiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-32.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-33.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-33.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget33 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, labels, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var color = element.getAttribute('data-kt-chart-color');\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n    var options = {\n      series: [{\n        name: 'Etherium ',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0.2,\n          stops: [15, 120, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: labels,\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        offsetX: 20,\n        tickAmount: 4,\n        labels: {\n          rotate: 0,\n          rotateAlways: false,\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 4000,\n        min: 1000,\n        labels: {\n          show: false\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val + '$';\n          }\n        }\n      },\n      colors: [baseColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 3,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_charts_widget_33_tab_1', '#kt_charts_widget_33_chart_1', [2100, 3200, 3200, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 3000, 3000, 3250, 3250], ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'], true);\n      initChart('#kt_charts_widget_33_tab_2', '#kt_charts_widget_33_chart_2', [2300, 2300, 2000, 3200, 3200, 2800, 2400, 2400, 3100, 2900, 3100, 3100, 2600, 2600, 3200], ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'], false);\n      initChart('#kt_charts_widget_33_tab_3', '#kt_charts_widget_33_chart_3', [2600, 3200, 2300, 2300, 2000, 3200, 3100, 2900, 3200, 3200, 2600, 3100, 2800, 2400, 2400], ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'], false);\n      initChart('#kt_charts_widget_33_tab_4', '#kt_charts_widget_33_chart_4', [1800, 1800, 2400, 2400, 3200, 3200, 3000, 2100, 3200, 3300, 2400, 2400, 3000, 3200, 3100], ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'], false);\n      initChart('#kt_charts_widget_33_tab_5', '#kt_charts_widget_33_chart_5', [3000, 2100, 3300, 3100, 1800, 1800, 2400, 2400, 3100, 3100, 2400, 2400, 3000, 2400, 2800], ['Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022', 'Sep 2022', 'Oct 2022', 'Nov 2022'], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget33;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget33.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-33.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-34.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-34.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget34 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, labels, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var color = element.getAttribute('data-kt-chart-color');\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n    var options = {\n      series: [{\n        name: 'Earnings',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0.2,\n          stops: [15, 120, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: labels,\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        offsetX: 20,\n        tickAmount: 4,\n        labels: {\n          rotate: 0,\n          rotateAlways: false,\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 4000,\n        min: 1000,\n        labels: {\n          show: false\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val + '$';\n          }\n        }\n      },\n      colors: [baseColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 3,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_charts_widget_34_tab_1', '#kt_charts_widget_34_chart_1', [2100, 2800, 2800, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 2800, 2800, 3250, 3250], ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'], true);\n      initChart('#kt_charts_widget_34_tab_2', '#kt_charts_widget_34_chart_2', [2300, 2300, 2000, 3100, 3100, 2800, 2400, 2400, 3100, 2900, 3200, 3200, 2600, 2600, 3200], ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'], false);\n      initChart('#kt_charts_widget_34_tab_3', '#kt_charts_widget_34_chart_3', [2600, 3400, 2300, 2300, 2000, 3100, 3100, 2900, 3200, 3200, 2600, 3100, 2800, 2400, 2400], ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'], false);\n      initChart('#kt_charts_widget_34_tab_4', '#kt_charts_widget_34_chart_4', [1800, 1800, 2400, 2400, 3100, 3100, 3000, 2100, 3200, 3200, 2400, 2400, 3000, 3200, 3100], ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'], false);\n      initChart('#kt_charts_widget_34_tab_5', '#kt_charts_widget_34_chart_5', [3000, 2100, 3200, 3200, 1800, 1800, 2400, 2400, 3100, 3100, 2400, 2400, 3000, 2400, 2800], ['Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022', 'Sep 2022', 'Oct 2022', 'Nov 2022'], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget34;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget34.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-34.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-35.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-35.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget35 = function () {\n  // Private methods\n  var initChart = function initChart(tabSelector, chartSelector, data, labels, initByDefault) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var color = element.getAttribute('data-kt-chart-color');\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n    var options = {\n      series: [{\n        name: 'Earnings',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0.2,\n          stops: [15, 120, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: labels,\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        offsetX: 20,\n        tickAmount: 4,\n        labels: {\n          rotate: 0,\n          rotateAlways: false,\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 4000,\n        min: 1000,\n        labels: {\n          show: false\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val + '$';\n          }\n        }\n      },\n      colors: [baseColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 3,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_charts_widget_35_tab_1', '#kt_charts_widget_35_chart_1', [2100, 3100, 3100, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 2800, 2800, 3250, 3250], ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'], true);\n      initChart('#kt_charts_widget_35_tab_2', '#kt_charts_widget_35_chart_2', [2300, 2300, 2000, 3200, 3200, 2800, 2400, 2400, 3100, 2900, 3200, 3200, 2600, 2600, 3200], ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'], false);\n      initChart('#kt_charts_widget_35_tab_3', '#kt_charts_widget_35_chart_3', [2600, 3200, 2300, 2300, 2000, 3200, 3100, 2900, 3400, 3400, 2600, 3200, 2800, 2400, 2400], ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'], false);\n      initChart('#kt_charts_widget_35_tab_4', '#kt_charts_widget_35_chart_4', [1800, 1800, 2400, 2400, 3200, 3200, 3000, 2100, 3200, 3200, 2400, 2400, 3000, 3200, 3100], ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'], false);\n      initChart('#kt_charts_widget_35_tab_5', '#kt_charts_widget_35_chart_5', [3200, 2100, 3200, 3200, 3200, 3500, 3000, 2400, 3250, 2400, 2400, 3250, 3000, 2400, 2800], ['Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022', 'Sep 2022', 'Oct 2022', 'Nov 2022'], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget35;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget35.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-35.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-4.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-4.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget4 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_4\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n    var lightColor = KTUtil.getCssVariableValue('--bs-primary');\n    var options = {\n      series: [{\n        name: 'Sales',\n        data: [34.5, 34.5, 35, 35, 35.5, 35.5, 35, 35, 35.5, 35.5, 35, 35, 34.5, 34.5, 35, 35, 35.5, 35.5, 35]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.4,\n          opacityTo: 0,\n          stops: [0, 80, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 6,\n        labels: {\n          rotate: 0,\n          rotateAlways: true,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        max: 36.3,\n        min: 33,\n        tickAmount: 6,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          },\n          formatter: function formatter(val) {\n            return '$' + parseInt(10 * val);\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return '$' + parseInt(10 * val);\n          }\n        }\n      },\n      colors: [lightColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget4.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-4.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-5.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-5.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget5 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_5\");\n    if (!element) {\n      return;\n    }\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var options = {\n      series: [{\n        data: [15, 12, 10, 8, 7, 4, 3],\n        show: false\n      }],\n      chart: {\n        type: 'bar',\n        height: 350,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 4,\n          horizontal: true,\n          distributed: true,\n          barHeight: 23\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA', '#50CDCD', '#3F4254'],\n      xaxis: {\n        categories: ['Phones', 'Laptops', 'Headsets', 'Games', 'Keyboardsy', 'Monitors', 'Speakers'],\n        labels: {\n          formatter: function formatter(val) {\n            return val + \"K\";\n          },\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-400'),\n            fontSize: '14px',\n            fontWeight: '600',\n            align: 'left'\n          }\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-800'),\n            fontSize: '14px',\n            fontWeight: '600'\n          },\n          offsetY: 2,\n          align: 'left'\n        }\n      },\n      grid: {\n        borderColor: borderColor,\n        xaxis: {\n          lines: {\n            show: true\n          }\n        },\n        yaxis: {\n          lines: {\n            show: false\n          }\n        },\n        strokeDashArray: 4\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget5;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget5.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-5.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-6.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-6.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget6 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_6\");\n    if (!element) {\n      return;\n    }\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var maxValue = 18;\n    var options = {\n      series: [{\n        name: 'Sales',\n        data: [15, 12, 10, 8, 7]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: 350,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          borderRadius: 8,\n          horizontal: true,\n          distributed: true,\n          barHeight: 50,\n          dataLabels: {\n            position: 'bottom' // use 'bottom' for left and 'top' for right align(textAnchor)\n          }\n        }\n      },\n\n      dataLabels: {\n        // Docs: https://apexcharts.com/docs/options/datalabels/\n        enabled: true,\n        textAnchor: 'start',\n        offsetX: 0,\n        formatter: function formatter(val, opts) {\n          var val = val * 1000;\n          var Format = wNumb({\n            //prefix: '$',\n            //suffix: ',-',\n            thousand: ','\n          });\n          return Format.to(val);\n        },\n        style: {\n          fontSize: '14px',\n          fontWeight: '600',\n          align: 'left'\n        }\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA'],\n      xaxis: {\n        categories: [\"ECR - 90%\", \"FGI - 82%\", 'EOQ - 75%', 'FMG - 60%', 'PLG - 50%'],\n        labels: {\n          formatter: function formatter(val) {\n            return val + \"K\";\n          },\n          style: {\n            colors: labelColor,\n            fontSize: '14px',\n            fontWeight: '600',\n            align: 'left'\n          }\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          formatter: function formatter(val, opt) {\n            if (Number.isInteger(val)) {\n              var percentage = parseInt(val * 100 / maxValue).toString();\n              return val + ' - ' + percentage + '%';\n            } else {\n              return val;\n            }\n          },\n          style: {\n            colors: labelColor,\n            fontSize: '14px',\n            fontWeight: '600'\n          },\n          offsetY: 2,\n          align: 'left'\n        }\n      },\n      grid: {\n        borderColor: borderColor,\n        xaxis: {\n          lines: {\n            show: true\n          }\n        },\n        yaxis: {\n          lines: {\n            show: false\n          }\n        },\n        strokeDashArray: 4\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return val + 'K';\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget6;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget6.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-6.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-7.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-7.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget7 = function () {\n  // Private methods\n  var initChart = function initChart(chartSelector) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var options = {\n      series: [{\n        name: 'Net Profit',\n        data: data1\n      }, {\n        name: 'Revenue',\n        data: data2\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bar',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: ['40%'],\n          borderRadius: [6]\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-700'),\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-700'),\n            fontSize: '12px'\n          }\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return \"$\" + val + \" thousands\";\n          }\n        }\n      },\n      colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-light-primary')],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    var init = false;\n    var tab = document.querySelector(tabSelector);\n    if (initByDefault === true) {\n      chart.render();\n      init = true;\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (init == false) {\n        chart.render();\n        init = true;\n      }\n    });\n    var chart = new ApexCharts(element, options);\n    chart.render();\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_chart_widget_7_tab_1', '#kt_chart_widget_7_chart_1', [44, 55, 57, 56, 61, 58], [76, 85, 101, 98, 87, 105], true);\n      initChart('#kt_chart_widget_7_tab_2', '#kt_chart_widget_7_chart_2', [35, 60, 35, 50, 45, 30], [65, 80, 50, 80, 75, 105], false);\n      initChart('#kt_chart_widget_7_tab_3', '#kt_chart_widget_7_chart_3', [25, 40, 45, 50, 40, 60], [76, 85, 101, 98, 87, 105], false);\n      initChart('#kt_chart_widget_7_tab_4', '#kt_chart_widget_7_chart_4', [50, 35, 45, 55, 30, 40], [76, 85, 101, 98, 87, 105], false);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget7;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  //KTChartsWidget7.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-7.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-8.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-8.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget8 = function () {\n  // Private methods\n  var initChart = function initChart(toggle, selector, data, initByDefault) {\n    var element = document.querySelector(selector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var options = {\n      series: [{\n        name: 'Social Campaigns',\n        data: data[0] // array value is of the format [x, y, z] where x (timestamp) and y are the two axes coordinates,\n      }, {\n        name: 'Email Newsletter',\n        data: data[1]\n      }, {\n        name: 'TV Campaign',\n        data: data[2]\n      }, {\n        name: 'Google Ads',\n        data: data[3]\n      }, {\n        name: 'Courses',\n        data: data[4]\n      }, {\n        name: 'Radio',\n        data: data[5]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'bubble',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bubble: {}\n      },\n      stroke: {\n        show: false,\n        width: 0\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      xaxis: {\n        type: 'numeric',\n        tickAmount: 7,\n        min: 0,\n        max: 700,\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: true,\n          height: 0\n        },\n        labels: {\n          show: true,\n          trim: true,\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 7,\n        min: 0,\n        max: 700,\n        labels: {\n          style: {\n            colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n            fontSize: '13px'\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        x: {\n          formatter: function formatter(val) {\n            return \"Clicks: \" + val;\n          }\n        },\n        y: {\n          formatter: function formatter(val) {\n            return \"$\" + val + \"K\";\n          }\n        },\n        z: {\n          title: 'Impression: '\n        }\n      },\n      crosshairs: {\n        show: true,\n        position: 'front',\n        stroke: {\n          color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\n          width: 1,\n          dashArray: 0\n        }\n      },\n      colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-success'), KTUtil.getCssVariableValue('--bs-warning'), KTUtil.getCssVariableValue('--bs-danger'), KTUtil.getCssVariableValue('--bs-info'), '#43CED7'],\n      fill: {\n        opacity: 1\n      },\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        padding: {\n          right: 20\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      }\n    };\n    var initialized = false;\n    var chart = new ApexCharts(element, options);\n    var tab = document.querySelector(toggle);\n    if (initByDefault === true) {\n      // Set timeout to properly get the parent elements width\n      setTimeout(function () {\n        chart.render();\n        initialized = true;\n      }, 200);\n    }\n    tab.addEventListener('shown.bs.tab', function (event) {\n      if (initialized === false) {\n        chart.render();\n        initialized = true;\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      var data1 = [[[100, 250, 30]], [[225, 300, 35]], [[300, 350, 25]], [[350, 350, 20]], [[450, 400, 25]], [[550, 350, 35]]];\n      var data2 = [[[125, 300, 40]], [[250, 350, 35]], [[350, 450, 30]], [[450, 250, 25]], [[500, 500, 30]], [[600, 250, 28]]];\n      initChart('#kt_chart_widget_8_week_toggle', '#kt_chart_widget_8_week_chart', data1, false);\n      initChart('#kt_chart_widget_8_month_toggle', '#kt_chart_widget_8_month_chart', data2, true);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget8;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget8.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-8.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/charts/widget-9.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/charts/widget-9.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget9 = function () {\n  // Private methods\n  var initChart = function initChart() {\n    var element = document.getElementById(\"kt_charts_widget_9\");\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-400');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-gray-200');\n    var secondaryColor = KTUtil.getCssVariableValue('--bs-primary');\n    var options = {\n      series: [{\n        name: 'Net Profit',\n        data: [21, 21, 26, 26, 31, 31, 27]\n      }, {\n        name: 'Revenue',\n        data: [12, 16, 16, 21, 21, 18, 18]\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: 'solid',\n        opacity: 1\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      xaxis: {\n        categories: ['', '06 Sep', '13 Sep', '20 Sep', '27 Sep', '30 Sep', ''],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: labelColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        },\n        y: {\n          formatter: function formatter(val) {\n            return \"$\" + val + \" thousands\";\n          }\n        }\n      },\n      crosshairs: {\n        show: true,\n        position: 'front',\n        stroke: {\n          color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\n          width: 1,\n          dashArray: 0\n        }\n      },\n      colors: [baseColor, secondaryColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        colors: [baseColor, secondaryColor],\n        strokeColor: [KTUtil.getCssVariableValue('--bs-danger'), KTUtil.getCssVariableValue('--bs-warning')],\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTChartsWidget9;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTChartsWidget9.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/charts/widget-9.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/forms/widget-1.js":
/*!****************************************************!*\
  !*** ./resources/src/js/widgets/forms/widget-1.js ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTFormsWidget1 = function () {\n  // Private methods\n  var initForm1 = function initForm1() {\n    var optionFormat = function optionFormat(item) {\n      if (!item.id) {\n        return item.text;\n      }\n      var span = document.createElement('span');\n      var template = '';\n      template += '<img src=\"' + item.element.getAttribute('data-kt-select2-icon') + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n      template += item.text;\n      span.innerHTML = template;\n      return $(span);\n    };\n\n    // Init Select2 --- more info: https://select2.org/\n    $('#kt_forms_widget_1_select_1').select2({\n      placeholder: \"Select coin\",\n      minimumResultsForSearch: Infinity,\n      templateSelection: optionFormat,\n      templateResult: optionFormat\n    });\n  };\n  var initForm2 = function initForm2() {\n    var optionFormat = function optionFormat(item) {\n      if (!item.id) {\n        return item.text;\n      }\n      var span = document.createElement('span');\n      var template = '';\n      template += '<img src=\"' + item.element.getAttribute('data-kt-select2-icon') + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n      template += item.text;\n      span.innerHTML = template;\n      return $(span);\n    };\n\n    // Init Select2 --- more info: https://select2.org/\n    $('#kt_forms_widget_1_select_2').select2({\n      placeholder: \"Select coin\",\n      minimumResultsForSearch: Infinity,\n      templateSelection: optionFormat,\n      templateResult: optionFormat\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initForm1();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTFormsWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTFormsWidget1.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvZm9ybXMvd2lkZ2V0LTEuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSxJQUFJQSxjQUFjLEdBQUksWUFBWTtFQUM5QjtFQUNBLElBQUlDLFNBQVMsR0FBRyxTQUFaQSxTQUFTQSxDQUFBLEVBQWU7SUFDeEIsSUFBSUMsWUFBWSxHQUFHLFNBQWZBLFlBQVlBLENBQVlDLElBQUksRUFBRTtNQUM5QixJQUFLLENBQUNBLElBQUksQ0FBQ0MsRUFBRSxFQUFHO1FBQ1osT0FBT0QsSUFBSSxDQUFDRSxJQUFJO01BQ3BCO01BRUEsSUFBSUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxNQUFNLENBQUM7TUFDekMsSUFBSUMsUUFBUSxHQUFHLEVBQUU7TUFFakJBLFFBQVEsSUFBSSxZQUFZLEdBQUdOLElBQUksQ0FBQ08sT0FBTyxDQUFDQyxZQUFZLENBQUMsc0JBQXNCLENBQUMsR0FBRyxvREFBb0Q7TUFDbklGLFFBQVEsSUFBSU4sSUFBSSxDQUFDRSxJQUFJO01BRXJCQyxJQUFJLENBQUNNLFNBQVMsR0FBR0gsUUFBUTtNQUV6QixPQUFPSSxDQUFDLENBQUNQLElBQUksQ0FBQztJQUNsQixDQUFDOztJQUVEO0lBQ0FPLENBQUMsQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDQyxPQUFPLENBQUM7TUFDckNDLFdBQVcsRUFBRSxhQUFhO01BQzFCQyx1QkFBdUIsRUFBRUMsUUFBUTtNQUNqQ0MsaUJBQWlCLEVBQUVoQixZQUFZO01BQy9CaUIsY0FBYyxFQUFFakI7SUFDcEIsQ0FBQyxDQUFDO0VBQ04sQ0FBQztFQUVELElBQUlrQixTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBQSxFQUFlO0lBQ3hCLElBQUlsQixZQUFZLEdBQUcsU0FBZkEsWUFBWUEsQ0FBWUMsSUFBSSxFQUFFO01BQzlCLElBQUssQ0FBQ0EsSUFBSSxDQUFDQyxFQUFFLEVBQUc7UUFDWixPQUFPRCxJQUFJLENBQUNFLElBQUk7TUFDcEI7TUFFQSxJQUFJQyxJQUFJLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLE1BQU0sQ0FBQztNQUN6QyxJQUFJQyxRQUFRLEdBQUcsRUFBRTtNQUVqQkEsUUFBUSxJQUFJLFlBQVksR0FBR04sSUFBSSxDQUFDTyxPQUFPLENBQUNDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxHQUFHLG9EQUFvRDtNQUNuSUYsUUFBUSxJQUFJTixJQUFJLENBQUNFLElBQUk7TUFFckJDLElBQUksQ0FBQ00sU0FBUyxHQUFHSCxRQUFRO01BRXpCLE9BQU9JLENBQUMsQ0FBQ1AsSUFBSSxDQUFDO0lBQ2xCLENBQUM7O0lBRUQ7SUFDQU8sQ0FBQyxDQUFDLDZCQUE2QixDQUFDLENBQUNDLE9BQU8sQ0FBQztNQUNyQ0MsV0FBVyxFQUFFLGFBQWE7TUFDMUJDLHVCQUF1QixFQUFFQyxRQUFRO01BQ2pDQyxpQkFBaUIsRUFBRWhCLFlBQVk7TUFDL0JpQixjQUFjLEVBQUVqQjtJQUNwQixDQUFDLENBQUM7RUFDTixDQUFDOztFQUVEO0VBQ0EsT0FBTztJQUNIbUIsSUFBSSxFQUFFLFNBQUFBLEtBQUEsRUFBWTtNQUNkcEIsU0FBUyxFQUFFO0lBQ2Y7RUFDSixDQUFDO0FBQ0wsQ0FBQyxFQUFHOztBQUVKO0FBQ0EsSUFBSSxJQUE2QixFQUFFO0VBQy9CcUIsTUFBTSxDQUFDQyxPQUFPLEdBQUd2QixjQUFjO0FBQ25DOztBQUVBO0FBQ0F3QixNQUFNLENBQUNDLGtCQUFrQixDQUFDLFlBQVk7RUFDbEN6QixjQUFjLENBQUNxQixJQUFJLEVBQUU7QUFDekIsQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL3NyYy9qcy93aWRnZXRzL2Zvcm1zL3dpZGdldC0xLmpzP2UzMTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVEZvcm1zV2lkZ2V0MSA9IChmdW5jdGlvbiAoKSB7XHJcbiAgICAvLyBQcml2YXRlIG1ldGhvZHNcclxuICAgIHZhciBpbml0Rm9ybTEgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIG9wdGlvbkZvcm1hdCA9IGZ1bmN0aW9uKGl0ZW0pIHtcclxuICAgICAgICAgICAgaWYgKCAhaXRlbS5pZCApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLnRleHQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgICAgICB2YXIgdGVtcGxhdGUgPSAnJztcclxuXHJcbiAgICAgICAgICAgIHRlbXBsYXRlICs9ICc8aW1nIHNyYz1cIicgKyBpdGVtLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LXNlbGVjdDItaWNvbicpICsgJ1wiIGNsYXNzPVwicm91bmRlZC1jaXJjbGUgaC0yMHB4IG1lLTJcIiBhbHQ9XCJpbWFnZVwiLz4nO1xyXG4gICAgICAgICAgICB0ZW1wbGF0ZSArPSBpdGVtLnRleHQ7XHJcblxyXG4gICAgICAgICAgICBzcGFuLmlubmVySFRNTCA9IHRlbXBsYXRlO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuICQoc3Bhbik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBJbml0IFNlbGVjdDIgLS0tIG1vcmUgaW5mbzogaHR0cHM6Ly9zZWxlY3QyLm9yZy9cclxuICAgICAgICAkKCcja3RfZm9ybXNfd2lkZ2V0XzFfc2VsZWN0XzEnKS5zZWxlY3QyKHtcclxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiU2VsZWN0IGNvaW5cIixcclxuICAgICAgICAgICAgbWluaW11bVJlc3VsdHNGb3JTZWFyY2g6IEluZmluaXR5LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVNlbGVjdGlvbjogb3B0aW9uRm9ybWF0LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVJlc3VsdDogb3B0aW9uRm9ybWF0XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBpbml0Rm9ybTIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIG9wdGlvbkZvcm1hdCA9IGZ1bmN0aW9uKGl0ZW0pIHtcclxuICAgICAgICAgICAgaWYgKCAhaXRlbS5pZCApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLnRleHQ7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHZhciBzcGFuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xyXG4gICAgICAgICAgICB2YXIgdGVtcGxhdGUgPSAnJztcclxuXHJcbiAgICAgICAgICAgIHRlbXBsYXRlICs9ICc8aW1nIHNyYz1cIicgKyBpdGVtLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LXNlbGVjdDItaWNvbicpICsgJ1wiIGNsYXNzPVwicm91bmRlZC1jaXJjbGUgaC0yMHB4IG1lLTJcIiBhbHQ9XCJpbWFnZVwiLz4nO1xyXG4gICAgICAgICAgICB0ZW1wbGF0ZSArPSBpdGVtLnRleHQ7XHJcblxyXG4gICAgICAgICAgICBzcGFuLmlubmVySFRNTCA9IHRlbXBsYXRlO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuICQoc3Bhbik7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBJbml0IFNlbGVjdDIgLS0tIG1vcmUgaW5mbzogaHR0cHM6Ly9zZWxlY3QyLm9yZy9cclxuICAgICAgICAkKCcja3RfZm9ybXNfd2lkZ2V0XzFfc2VsZWN0XzInKS5zZWxlY3QyKHtcclxuICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiU2VsZWN0IGNvaW5cIixcclxuICAgICAgICAgICAgbWluaW11bVJlc3VsdHNGb3JTZWFyY2g6IEluZmluaXR5LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVNlbGVjdGlvbjogb3B0aW9uRm9ybWF0LFxyXG4gICAgICAgICAgICB0ZW1wbGF0ZVJlc3VsdDogb3B0aW9uRm9ybWF0XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIFB1YmxpYyBtZXRob2RzXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaW5pdEZvcm0xKCk7XHJcbiAgICAgICAgfSxcclxuICAgIH07XHJcbn0pKCk7XHJcblxyXG4vLyBXZWJwYWNrIHN1cHBvcnRcclxuaWYgKHR5cGVvZiBtb2R1bGUgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgIG1vZHVsZS5leHBvcnRzID0gS1RGb3Jtc1dpZGdldDE7XHJcbn1cclxuXHJcbi8vIE9uIGRvY3VtZW50IHJlYWR5XHJcbktUVXRpbC5vbkRPTUNvbnRlbnRMb2FkZWQoZnVuY3Rpb24gKCkge1xyXG4gICAgS1RGb3Jtc1dpZGdldDEuaW5pdCgpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIktURm9ybXNXaWRnZXQxIiwiaW5pdEZvcm0xIiwib3B0aW9uRm9ybWF0IiwiaXRlbSIsImlkIiwidGV4dCIsInNwYW4iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ0ZW1wbGF0ZSIsImVsZW1lbnQiLCJnZXRBdHRyaWJ1dGUiLCJpbm5lckhUTUwiLCIkIiwic2VsZWN0MiIsInBsYWNlaG9sZGVyIiwibWluaW11bVJlc3VsdHNGb3JTZWFyY2giLCJJbmZpbml0eSIsInRlbXBsYXRlU2VsZWN0aW9uIiwidGVtcGxhdGVSZXN1bHQiLCJpbml0Rm9ybTIiLCJpbml0IiwibW9kdWxlIiwiZXhwb3J0cyIsIktUVXRpbCIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/forms/widget-1.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/lists/widget-24.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/lists/widget-24.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget24 = function () {\n  // Private methods\n  var handleActions = function handleActions() {\n    var card = document.querySelector('#kt_list_widget_24');\n    if (!card) {\n      return;\n    }\n\n    // Checkbox Handler\n    KTUtil.on(card, '[data-kt-element=\"follow\"]', 'click', function (e) {\n      if (this.innerText === 'Following') {\n        this.innerText = 'Follow';\n        this.classList.add('btn-light-primary');\n        this.classList.remove('btn-primary');\n        this.blur();\n      } else {\n        this.innerText = 'Following';\n        this.classList.add('btn-primary');\n        this.classList.remove('btn-light-primary');\n        this.blur();\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      handleActions();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTimelineWidget24;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTimelineWidget24.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvbGlzdHMvd2lkZ2V0LTI0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsSUFBSUEsa0JBQWtCLEdBQUcsWUFBWTtFQUNqQztFQUNBLElBQUlDLGFBQWEsR0FBRyxTQUFoQkEsYUFBYUEsQ0FBQSxFQUFjO0lBQzNCLElBQUlDLElBQUksR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsb0JBQW9CLENBQUM7SUFFdkQsSUFBSSxDQUFDRixJQUFJLEVBQUU7TUFDUDtJQUNKOztJQUVBO0lBQ0FHLE1BQU0sQ0FBQ0MsRUFBRSxDQUFDSixJQUFJLEVBQUUsNEJBQTRCLEVBQUUsT0FBTyxFQUFFLFVBQVVLLENBQUMsRUFBRTtNQUNoRSxJQUFLLElBQUksQ0FBQ0MsU0FBUyxLQUFLLFdBQVcsRUFBRztRQUNsQyxJQUFJLENBQUNBLFNBQVMsR0FBRyxRQUFRO1FBQ3pCLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLENBQUM7UUFDdkMsSUFBSSxDQUFDRCxTQUFTLENBQUNFLE1BQU0sQ0FBQyxhQUFhLENBQUM7UUFDcEMsSUFBSSxDQUFDQyxJQUFJLEVBQUU7TUFDZixDQUFDLE1BQU07UUFDSCxJQUFJLENBQUNKLFNBQVMsR0FBRyxXQUFXO1FBQzVCLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUMsYUFBYSxDQUFDO1FBQ2pDLElBQUksQ0FBQ0QsU0FBUyxDQUFDRSxNQUFNLENBQUMsbUJBQW1CLENBQUM7UUFDMUMsSUFBSSxDQUFDQyxJQUFJLEVBQUU7TUFDZjtJQUNKLENBQUMsQ0FBQztFQUNOLENBQUM7O0VBRUQ7RUFDQSxPQUFPO0lBQ0hDLElBQUksRUFBRSxTQUFBQSxLQUFBLEVBQVk7TUFDZFosYUFBYSxFQUFFO0lBQ25CO0VBQ0osQ0FBQztBQUNMLENBQUMsRUFBRTs7QUFFSDtBQUNBLElBQUksSUFBNkIsRUFBRTtFQUMvQmEsTUFBTSxDQUFDQyxPQUFPLEdBQUdmLGtCQUFrQjtBQUN2Qzs7QUFFQTtBQUNBSyxNQUFNLENBQUNXLGtCQUFrQixDQUFDLFlBQVc7RUFDakNoQixrQkFBa0IsQ0FBQ2EsSUFBSSxFQUFFO0FBQzdCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9zcmMvanMvd2lkZ2V0cy9saXN0cy93aWRnZXQtMjQuanM/MGIyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIENsYXNzIGRlZmluaXRpb25cclxudmFyIEtUVGltZWxpbmVXaWRnZXQyNCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIC8vIFByaXZhdGUgbWV0aG9kc1xyXG4gICAgdmFyIGhhbmRsZUFjdGlvbnMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgY2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNrdF9saXN0X3dpZGdldF8yNCcpOyAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKCFjYXJkKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENoZWNrYm94IEhhbmRsZXJcclxuICAgICAgICBLVFV0aWwub24oY2FyZCwgJ1tkYXRhLWt0LWVsZW1lbnQ9XCJmb2xsb3dcIl0nLCAnY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBpZiAoIHRoaXMuaW5uZXJUZXh0ID09PSAnRm9sbG93aW5nJyApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJUZXh0ID0gJ0ZvbGxvdyc7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2J0bi1saWdodC1wcmltYXJ5Jyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2J0bi1wcmltYXJ5Jyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJsdXIoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaW5uZXJUZXh0ID0gJ0ZvbGxvd2luZyc7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2J0bi1wcmltYXJ5Jyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoJ2J0bi1saWdodC1wcmltYXJ5Jyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJsdXIoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFB1YmxpYyBtZXRob2RzXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHsgICAgICAgICAgIFxyXG4gICAgICAgICAgICBoYW5kbGVBY3Rpb25zKCk7ICAgICAgICAgICAgIFxyXG4gICAgICAgIH0gICBcclxuICAgIH1cclxufSgpO1xyXG5cclxuLy8gV2VicGFjayBzdXBwb3J0XHJcbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBLVFRpbWVsaW5lV2lkZ2V0MjQ7XHJcbn1cclxuXHJcbi8vIE9uIGRvY3VtZW50IHJlYWR5XHJcbktUVXRpbC5vbkRPTUNvbnRlbnRMb2FkZWQoZnVuY3Rpb24oKSB7XHJcbiAgICBLVFRpbWVsaW5lV2lkZ2V0MjQuaW5pdCgpO1xyXG59KTsgXHJcbiJdLCJuYW1lcyI6WyJLVFRpbWVsaW5lV2lkZ2V0MjQiLCJoYW5kbGVBY3Rpb25zIiwiY2FyZCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIktUVXRpbCIsIm9uIiwiZSIsImlubmVyVGV4dCIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImJsdXIiLCJpbml0IiwibW9kdWxlIiwiZXhwb3J0cyIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/lists/widget-24.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/maps/widget-1.js":
/*!***************************************************!*\
  !*** ./resources/src/js/widgets/maps/widget-1.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTMapsWidget1 = function () {\n  // Private methods\n  var initMap = function initMap() {\n    // Check if amchart library is included\n    if (typeof am5 === 'undefined') {\n      return;\n    }\n    var element = document.getElementById(\"kt_maps_widget_1_map\");\n    if (!element) {\n      return;\n    }\n\n    // On amchart ready\n    am5.ready(function () {\n      // Create root element\n      // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n      var root = am5.Root[\"new\"](element);\n\n      // Set themes\n      // https://www.amcharts.com/docs/v5/concepts/themes/\n      root.setThemes([am5themes_Animated[\"new\"](root)]);\n\n      // Create the map chart\n      // https://www.amcharts.com/docs/v5/charts/map-chart/\n      var chart = root.container.children.push(am5map.MapChart[\"new\"](root, {\n        panX: \"translateX\",\n        panY: \"translateY\",\n        projection: am5map.geoMercator(),\n        paddingLeft: 0,\n        paddingrIGHT: 0,\n        paddingBottom: 0\n      }));\n\n      // Create main polygon series for countries\n      // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n      var polygonSeries = chart.series.push(am5map.MapPolygonSeries[\"new\"](root, {\n        geoJSON: am5geodata_worldLow,\n        exclude: [\"AQ\"]\n      }));\n      polygonSeries.mapPolygons.template.setAll({\n        tooltipText: \"{name}\",\n        toggleKey: \"active\",\n        interactive: true,\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-300'))\n      });\n      polygonSeries.mapPolygons.template.states.create(\"hover\", {\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n      });\n      polygonSeries.mapPolygons.template.states.create(\"active\", {\n        fill: am5.color(KTUtil.getCssVariableValue('--bs-success'))\n      });\n\n      // Highlighted Series\n      // Create main polygon series for countries\n      // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n      var polygonSeriesHighlighted = chart.series.push(am5map.MapPolygonSeries[\"new\"](root, {\n        //geoJSON: am5geodata_usaLow,\n        geoJSON: am5geodata_worldLow,\n        include: ['US', 'BR', 'DE', 'AU', 'JP']\n      }));\n      polygonSeriesHighlighted.mapPolygons.template.setAll({\n        tooltipText: \"{name}\",\n        toggleKey: \"active\",\n        interactive: true\n      });\n      var colors = am5.ColorSet[\"new\"](root, {});\n      polygonSeriesHighlighted.mapPolygons.template.set(\"fill\", am5.color(KTUtil.getCssVariableValue('--bs-primary')));\n      polygonSeriesHighlighted.mapPolygons.template.states.create(\"hover\", {\n        fill: root.interfaceColors.get(\"primaryButtonHover\")\n      });\n      polygonSeriesHighlighted.mapPolygons.template.states.create(\"active\", {\n        fill: root.interfaceColors.get(\"primaryButtonHover\")\n      });\n\n      // Add zoom control\n      // https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control\n      //chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\n\n      // Set clicking on \"water\" to zoom out\n      chart.chartContainer.get(\"background\").events.on(\"click\", function () {\n        chart.goHome();\n      });\n\n      // Make stuff animate on load\n      chart.appear(1000, 100);\n    }); // end am5.ready()\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initMap();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTMapsWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTMapsWidget1.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/maps/widget-1.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/players/widget-1.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/players/widget-1.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTPlayersWidget1 = function () {\n  // Private methods\n  var initPlayers = function initPlayers() {\n    // https://www.w3schools.com/jsref/dom_obj_audio.asp\n    // Toggle Handler\n    KTUtil.on(document.body, '[data-kt-element=\"list-play-button\"]', 'click', function (e) {\n      var currentButton = this;\n      var audio = document.querySelector('[data-kt-element=\"audio-track-1\"]');\n      var playIcon = this.querySelector('[data-kt-element=\"list-play-icon\"]');\n      var pauseIcon = this.querySelector('[data-kt-element=\"list-pause-icon\"]');\n      if (pauseIcon.classList.contains('d-none')) {\n        audio.play();\n        playIcon.classList.add('d-none');\n        pauseIcon.classList.remove('d-none');\n      } else {\n        audio.pause();\n        playIcon.classList.remove('d-none');\n        pauseIcon.classList.add('d-none');\n      }\n      var buttons = [].slice.call(document.querySelectorAll('[data-kt-element=\"list-play-button\"]'));\n      buttons.map(function (button) {\n        if (button !== currentButton) {\n          var playIcon = button.querySelector('[data-kt-element=\"list-play-icon\"]');\n          var pauseIcon = button.querySelector('[data-kt-element=\"list-pause-icon\"]');\n          playIcon.classList.remove('d-none');\n          pauseIcon.classList.add('d-none');\n        }\n      });\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initPlayers();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTPlayersWidget2;\n}\n\n// Window load\nwindow.addEventListener(\"load\", function () {\n  KTPlayersWidget1.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvcGxheWVycy93aWRnZXQtMS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLElBQUlBLGdCQUFnQixHQUFHLFlBQVk7RUFDL0I7RUFDQSxJQUFJQyxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBQSxFQUFjO0lBQ3pCO0lBQ0E7SUFDQUMsTUFBTSxDQUFDQyxFQUFFLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxFQUFFLHNDQUFzQyxFQUFFLE9BQU8sRUFBRSxVQUFVQyxDQUFDLEVBQUU7TUFDbkYsSUFBSUMsYUFBYSxHQUFHLElBQUk7TUFFeEIsSUFBSUMsS0FBSyxHQUFHSixRQUFRLENBQUNLLGFBQWEsQ0FBQyxtQ0FBbUMsQ0FBQztNQUN2RSxJQUFJQyxRQUFRLEdBQUcsSUFBSSxDQUFDRCxhQUFhLENBQUMsb0NBQW9DLENBQUM7TUFDdkUsSUFBSUUsU0FBUyxHQUFHLElBQUksQ0FBQ0YsYUFBYSxDQUFDLHFDQUFxQyxDQUFDO01BRXpFLElBQUlFLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDeENMLEtBQUssQ0FBQ00sSUFBSSxFQUFFO1FBRVpKLFFBQVEsQ0FBQ0UsU0FBUyxDQUFDRyxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQ2hDSixTQUFTLENBQUNDLFNBQVMsQ0FBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FBQztNQUN4QyxDQUFDLE1BQU07UUFDSFIsS0FBSyxDQUFDUyxLQUFLLEVBQUU7UUFFYlAsUUFBUSxDQUFDRSxTQUFTLENBQUNJLE1BQU0sQ0FBQyxRQUFRLENBQUM7UUFDbkNMLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDRyxHQUFHLENBQUMsUUFBUSxDQUFDO01BQ3JDO01BRUEsSUFBSUcsT0FBTyxHQUFHLEVBQUUsQ0FBQ0MsS0FBSyxDQUFDQyxJQUFJLENBQUNoQixRQUFRLENBQUNpQixnQkFBZ0IsQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDO01BQzlGSCxPQUFPLENBQUNJLEdBQUcsQ0FBQyxVQUFVQyxNQUFNLEVBQUU7UUFDMUIsSUFBSUEsTUFBTSxLQUFLaEIsYUFBYSxFQUFFO1VBQzFCLElBQUlHLFFBQVEsR0FBR2EsTUFBTSxDQUFDZCxhQUFhLENBQUMsb0NBQW9DLENBQUM7VUFDekUsSUFBSUUsU0FBUyxHQUFHWSxNQUFNLENBQUNkLGFBQWEsQ0FBQyxxQ0FBcUMsQ0FBQztVQUUzRUMsUUFBUSxDQUFDRSxTQUFTLENBQUNJLE1BQU0sQ0FBQyxRQUFRLENBQUM7VUFDbkNMLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDRyxHQUFHLENBQUMsUUFBUSxDQUFDO1FBQ3JDO01BQ0osQ0FBQyxDQUFDO0lBQ04sQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLE9BQU87SUFDSFMsSUFBSSxFQUFFLFNBQUFBLEtBQUEsRUFBWTtNQUNkdkIsV0FBVyxFQUFFO0lBQ2pCO0VBQ0osQ0FBQztBQUNMLENBQUMsRUFBRTs7QUFFSDtBQUNBLElBQUksSUFBNkIsRUFBRTtFQUMvQndCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHQyxnQkFBZ0I7QUFDckM7O0FBRUE7QUFDQUMsTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsWUFBVztFQUN2QzdCLGdCQUFnQixDQUFDd0IsSUFBSSxFQUFFO0FBQzNCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9zcmMvanMvd2lkZ2V0cy9wbGF5ZXJzL3dpZGdldC0xLmpzPzkwMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVFBsYXllcnNXaWRnZXQxID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gUHJpdmF0ZSBtZXRob2RzXHJcbiAgICB2YXIgaW5pdFBsYXllcnMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAvLyBodHRwczovL3d3dy53M3NjaG9vbHMuY29tL2pzcmVmL2RvbV9vYmpfYXVkaW8uYXNwXHJcbiAgICAgICAgLy8gVG9nZ2xlIEhhbmRsZXJcclxuICAgICAgICBLVFV0aWwub24oZG9jdW1lbnQuYm9keSwgJ1tkYXRhLWt0LWVsZW1lbnQ9XCJsaXN0LXBsYXktYnV0dG9uXCJdJywgJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgdmFyIGN1cnJlbnRCdXR0b24gPSB0aGlzO1xyXG5cclxuICAgICAgICAgICAgdmFyIGF1ZGlvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cImF1ZGlvLXRyYWNrLTFcIl0nKTtcclxuICAgICAgICAgICAgdmFyIHBsYXlJY29uID0gdGhpcy5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwibGlzdC1wbGF5LWljb25cIl0nKTtcclxuICAgICAgICAgICAgdmFyIHBhdXNlSWNvbiA9IHRoaXMucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cImxpc3QtcGF1c2UtaWNvblwiXScpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHBhdXNlSWNvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2Qtbm9uZScpKSB7XHJcbiAgICAgICAgICAgICAgICBhdWRpby5wbGF5KCk7XHJcblxyXG4gICAgICAgICAgICAgICAgcGxheUljb24uY2xhc3NMaXN0LmFkZCgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgICAgICBwYXVzZUljb24uY2xhc3NMaXN0LnJlbW92ZSgnZC1ub25lJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBhdWRpby5wYXVzZSgpO1xyXG5cclxuICAgICAgICAgICAgICAgIHBsYXlJY29uLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgcGF1c2VJY29uLmNsYXNzTGlzdC5hZGQoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB2YXIgYnV0dG9ucyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEta3QtZWxlbWVudD1cImxpc3QtcGxheS1idXR0b25cIl0nKSk7XHJcbiAgICAgICAgICAgIGJ1dHRvbnMubWFwKGZ1bmN0aW9uIChidXR0b24pIHtcclxuICAgICAgICAgICAgICAgIGlmIChidXR0b24gIT09IGN1cnJlbnRCdXR0b24pIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcGxheUljb24gPSBidXR0b24ucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cImxpc3QtcGxheS1pY29uXCJdJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhdXNlSWNvbiA9IGJ1dHRvbi5xdWVyeVNlbGVjdG9yKCdbZGF0YS1rdC1lbGVtZW50PVwibGlzdC1wYXVzZS1pY29uXCJdJyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHBsYXlJY29uLmNsYXNzTGlzdC5yZW1vdmUoJ2Qtbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhdXNlSWNvbi5jbGFzc0xpc3QuYWRkKCdkLW5vbmUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpbml0UGxheWVycygpO1xyXG4gICAgICAgIH0gICBcclxuICAgIH1cclxufSgpO1xyXG5cclxuLy8gV2VicGFjayBzdXBwb3J0XHJcbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBLVFBsYXllcnNXaWRnZXQyO1xyXG59XHJcblxyXG4vLyBXaW5kb3cgbG9hZFxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwgZnVuY3Rpb24oKSB7XHJcbiAgICBLVFBsYXllcnNXaWRnZXQxLmluaXQoKTtcclxufSk7IFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICJdLCJuYW1lcyI6WyJLVFBsYXllcnNXaWRnZXQxIiwiaW5pdFBsYXllcnMiLCJLVFV0aWwiLCJvbiIsImRvY3VtZW50IiwiYm9keSIsImUiLCJjdXJyZW50QnV0dG9uIiwiYXVkaW8iLCJxdWVyeVNlbGVjdG9yIiwicGxheUljb24iLCJwYXVzZUljb24iLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInBsYXkiLCJhZGQiLCJyZW1vdmUiLCJwYXVzZSIsImJ1dHRvbnMiLCJzbGljZSIsImNhbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWFwIiwiYnV0dG9uIiwiaW5pdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJLVFBsYXllcnNXaWRnZXQyIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/players/widget-1.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/players/widget-2.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/players/widget-2.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTPlayersWidget2 = function () {\n  // Private methods\n  var initPlayer = function initPlayer() {\n    // https://www.w3schools.com/jsref/dom_obj_audio.asp\n    var element = document.getElementById(\"kt_player_widget_2\");\n    if (!element) {\n      return;\n    }\n    var audio = element.querySelector('[data-kt-element=\"audio-track-1\"]');\n    var progress = element.querySelector('[data-kt-element=\"progress\"]');\n    var currentTime = element.querySelector('[data-kt-element=\"current-time\"]');\n    var duration = element.querySelector('[data-kt-element=\"duration\"]');\n    var playButton = element.querySelector('[data-kt-element=\"play-button\"]');\n    var playIcon = element.querySelector('[data-kt-element=\"play-icon\"]');\n    var pauseIcon = element.querySelector('[data-kt-element=\"pause-icon\"]');\n    var replayButton = element.querySelector('[data-kt-element=\"replay-button\"]');\n    var shuffleButton = element.querySelector('[data-kt-element=\"shuffle-button\"]');\n    var playNextButton = element.querySelector('[data-kt-element=\"play-next-button\"]');\n    var playPrevButton = element.querySelector('[data-kt-element=\"play-prev-button\"]');\n    var formatTime = function formatTime(time) {\n      var s = parseInt(time % 60);\n      var m = parseInt(time / 60 % 60);\n      return m + ':' + (s < 10 ? '0' : '') + s;\n    };\n\n    // Duration\n    duration.innerHTML = formatTime(audio.duration);\n\n    // Update progress\n    var setBarProgress = function setBarProgress() {\n      progress.value = audio.currentTime / audio.duration * 100;\n    };\n\n    // Handle audio update\n    var handleAudioUpdate = function handleAudioUpdate() {\n      currentTime.innerHTML = formatTime(audio.currentTime);\n      setBarProgress();\n      if (this.ended) {\n        playIcon.classList.remove('d-none');\n        pauseIcon.classList.add('d-none');\n      }\n    };\n    audio.addEventListener('timeupdate', handleAudioUpdate);\n\n    // Handle play\n    playButton.addEventListener('click', function () {\n      if (audio.duration > 0 && !audio.paused) {\n        audio.pause();\n        playIcon.classList.remove('d-none');\n        pauseIcon.classList.add('d-none');\n      } else if (audio.readyState >= 2) {\n        audio.play();\n        playIcon.classList.add('d-none');\n        pauseIcon.classList.remove('d-none');\n      }\n    });\n\n    // Handle replay\n    replayButton.addEventListener('click', function () {\n      if (audio.readyState >= 2) {\n        audio.currentTime = 0;\n        audio.play();\n        playIcon.classList.add('d-none');\n        pauseIcon.classList.remove('d-none');\n      }\n    });\n\n    // Handle prev play\n    playPrevButton.addEventListener('click', function () {\n      if (audio.readyState >= 2) {\n        audio.currentTime = 0;\n        audio.play();\n        playIcon.classList.add('d-none');\n        pauseIcon.classList.remove('d-none');\n      }\n    });\n\n    // Handle next play\n    playNextButton.addEventListener('click', function () {\n      if (audio.readyState >= 2) {\n        audio.currentTime = 0;\n        audio.play();\n        playIcon.classList.add('d-none');\n        pauseIcon.classList.remove('d-none');\n      }\n    });\n\n    // Shuffle replay\n    shuffleButton.addEventListener('click', function () {\n      if (audio.readyState >= 2) {\n        audio.currentTime = 0;\n        audio.play();\n        playIcon.classList.add('d-none');\n        pauseIcon.classList.remove('d-none');\n      }\n    });\n\n    // Handle track change\n    progress.addEventListener('change', function () {\n      audio.currentTime = progress.value;\n      playIcon.classList.add('d-none');\n      pauseIcon.classList.remove('d-none');\n      audio.play();\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initPlayer();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTPlayersWidget2;\n}\n\n// Window load\nwindow.addEventListener(\"load\", function () {\n  KTPlayersWidget2.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/players/widget-2.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/sliders/widget-1.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/sliders/widget-1.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTSlidersWidget1 = function () {\n  // Private methods\n  var initChart = function initChart(query, data) {\n    var element = document.querySelector(query);\n    if (!element) {\n      return;\n    }\n    if (element.classList.contains(\"initialized\")) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var baseColor = KTUtil.getCssVariableValue('--bs-' + 'primary');\n    var lightColor = KTUtil.getCssVariableValue('--bs-light-' + 'primary');\n    var options = {\n      series: [data],\n      chart: {\n        fontFamily: 'inherit',\n        height: height,\n        type: 'radialBar',\n        sparkline: {\n          enabled: true\n        }\n      },\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            margin: 0,\n            size: \"45%\"\n          },\n          dataLabels: {\n            showOn: \"always\",\n            name: {\n              show: false\n            },\n            value: {\n              show: false\n            }\n          },\n          track: {\n            background: lightColor,\n            strokeWidth: '100%'\n          }\n        }\n      },\n      colors: [baseColor],\n      stroke: {\n        lineCap: \"round\"\n      },\n      labels: [\"Progress\"]\n    };\n    var chart = new ApexCharts(element, options);\n    chart.render();\n    element.classList.add('initialized');\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      // Init default chart\n      initChart('#kt_slider_widget_1_chart_1', 76);\n      var carousel = document.querySelector('#kt_sliders_widget_1_slider');\n      if (!carousel) {\n        return;\n      }\n      carousel.addEventListener('slid.bs.carousel', function (e) {\n        if (e.to === 1) {\n          // Init second chart\n          initChart('#kt_slider_widget_1_chart_2', 55);\n        }\n        if (e.to === 2) {\n          // Init third chart\n          initChart('#kt_slider_widget_1_chart_3', 25);\n        }\n      });\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTSlidersWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTSlidersWidget1.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvc2xpZGVycy93aWRnZXQtMS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLElBQUlBLGdCQUFnQixHQUFHLFlBQVc7RUFDOUI7RUFDQSxJQUFJQyxTQUFTLEdBQUcsU0FBWkEsU0FBU0EsQ0FBWUMsS0FBSyxFQUFFQyxJQUFJLEVBQUU7SUFDbEMsSUFBSUMsT0FBTyxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQ0osS0FBSyxDQUFDO0lBRTNDLElBQUssQ0FBQ0UsT0FBTyxFQUFFO01BQ1g7SUFDSjtJQUVBLElBQUtBLE9BQU8sQ0FBQ0csU0FBUyxDQUFDQyxRQUFRLENBQUMsYUFBYSxDQUFDLEVBQUc7TUFDN0M7SUFDSjtJQUVBLElBQUlDLE1BQU0sR0FBR0MsUUFBUSxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQ1IsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3BELElBQUlTLFNBQVMsR0FBR0YsTUFBTSxDQUFDRyxtQkFBbUIsQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDO0lBQy9ELElBQUlDLFVBQVUsR0FBR0osTUFBTSxDQUFDRyxtQkFBbUIsQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFFO0lBRXZFLElBQUlFLE9BQU8sR0FBRztNQUNWQyxNQUFNLEVBQUUsQ0FBQ2QsSUFBSSxDQUFDO01BQ2RlLEtBQUssRUFBRTtRQUNIQyxVQUFVLEVBQUUsU0FBUztRQUNyQlYsTUFBTSxFQUFFQSxNQUFNO1FBQ2RXLElBQUksRUFBRSxXQUFXO1FBQ2pCQyxTQUFTLEVBQUU7VUFDUEMsT0FBTyxFQUFFO1FBQ2I7TUFDSixDQUFDO01BQ0RDLFdBQVcsRUFBRTtRQUNUQyxTQUFTLEVBQUU7VUFDUEMsTUFBTSxFQUFFO1lBQ0pDLE1BQU0sRUFBRSxDQUFDO1lBQ1RDLElBQUksRUFBRTtVQUNWLENBQUM7VUFDREMsVUFBVSxFQUFFO1lBQ1JDLE1BQU0sRUFBRSxRQUFRO1lBQ2hCQyxJQUFJLEVBQUU7Y0FDRkMsSUFBSSxFQUFFO1lBQ1YsQ0FBQztZQUNEQyxLQUFLLEVBQUU7Y0FDSEQsSUFBSSxFQUFFO1lBQ1Y7VUFDSixDQUFDO1VBQ0RFLEtBQUssRUFBRTtZQUNIQyxVQUFVLEVBQUVuQixVQUFVO1lBQ3RCb0IsV0FBVyxFQUFFO1VBQ2pCO1FBQ0o7TUFDSixDQUFDO01BQ0RDLE1BQU0sRUFBRSxDQUFDdkIsU0FBUyxDQUFDO01BQ25Cd0IsTUFBTSxFQUFFO1FBQ0pDLE9BQU8sRUFBRTtNQUNiLENBQUM7TUFDREMsTUFBTSxFQUFFLENBQUMsVUFBVTtJQUN2QixDQUFDO0lBRUQsSUFBSXJCLEtBQUssR0FBRyxJQUFJc0IsVUFBVSxDQUFDcEMsT0FBTyxFQUFFWSxPQUFPLENBQUM7SUFDNUNFLEtBQUssQ0FBQ3VCLE1BQU0sRUFBRTtJQUNkckMsT0FBTyxDQUFDRyxTQUFTLENBQUNtQyxHQUFHLENBQUMsYUFBYSxDQUFDO0VBQ3hDLENBQUM7O0VBRUQ7RUFDQSxPQUFPO0lBQ0hDLElBQUksRUFBRSxTQUFBQSxLQUFBLEVBQVk7TUFDZDtNQUNBMUMsU0FBUyxDQUFDLDZCQUE2QixFQUFFLEVBQUUsQ0FBQztNQUU1QyxJQUFJMkMsUUFBUSxHQUFHdkMsUUFBUSxDQUFDQyxhQUFhLENBQUMsNkJBQTZCLENBQUM7TUFFcEUsSUFBRyxDQUFDc0MsUUFBUSxFQUFDO1FBQ1Q7TUFDSjtNQUNBQSxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGtCQUFrQixFQUFFLFVBQVVDLENBQUMsRUFBRTtRQUN2RCxJQUFJQSxDQUFDLENBQUNDLEVBQUUsS0FBSyxDQUFDLEVBQUU7VUFDWjtVQUNBOUMsU0FBUyxDQUFDLDZCQUE2QixFQUFFLEVBQUUsQ0FBQztRQUNoRDtRQUVBLElBQUk2QyxDQUFDLENBQUNDLEVBQUUsS0FBSyxDQUFDLEVBQUU7VUFDWjtVQUNBOUMsU0FBUyxDQUFDLDZCQUE2QixFQUFFLEVBQUUsQ0FBQztRQUNoRDtNQUNKLENBQUMsQ0FBQztJQUNOO0VBQ0osQ0FBQztBQUNMLENBQUMsRUFBRTs7QUFHSDtBQUNBLElBQUksSUFBNkIsRUFBRTtFQUMvQitDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHakQsZ0JBQWdCO0FBQ3JDOztBQUVBO0FBQ0FXLE1BQU0sQ0FBQ3VDLGtCQUFrQixDQUFDLFlBQVc7RUFDakNsRCxnQkFBZ0IsQ0FBQzJDLElBQUksRUFBRTtBQUMzQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvc2xpZGVycy93aWRnZXQtMS5qcz8xYTQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuLy8gQ2xhc3MgZGVmaW5pdGlvblxyXG52YXIgS1RTbGlkZXJzV2lkZ2V0MSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgLy8gUHJpdmF0ZSBtZXRob2RzXHJcbiAgICB2YXIgaW5pdENoYXJ0ID0gZnVuY3Rpb24ocXVlcnksIGRhdGEpIHtcclxuICAgICAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocXVlcnkpO1xyXG5cclxuICAgICAgICBpZiAoICFlbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9ICAgICAgICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBpZiAoIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaW5pdGlhbGl6ZWRcIikgKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBoZWlnaHQgPSBwYXJzZUludChLVFV0aWwuY3NzKGVsZW1lbnQsICdoZWlnaHQnKSk7XHJcbiAgICAgICAgdmFyIGJhc2VDb2xvciA9IEtUVXRpbC5nZXRDc3NWYXJpYWJsZVZhbHVlKCctLWJzLScgKyAncHJpbWFyeScpO1xyXG4gICAgICAgIHZhciBsaWdodENvbG9yID0gS1RVdGlsLmdldENzc1ZhcmlhYmxlVmFsdWUoJy0tYnMtbGlnaHQtJyArICdwcmltYXJ5JyApOyAgICAgICAgIFxyXG5cclxuICAgICAgICB2YXIgb3B0aW9ucyA9IHtcclxuICAgICAgICAgICAgc2VyaWVzOiBbZGF0YV0sXHJcbiAgICAgICAgICAgIGNoYXJ0OiB7XHJcbiAgICAgICAgICAgICAgICBmb250RmFtaWx5OiAnaW5oZXJpdCcsXHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGhlaWdodCxcclxuICAgICAgICAgICAgICAgIHR5cGU6ICdyYWRpYWxCYXInLFxyXG4gICAgICAgICAgICAgICAgc3BhcmtsaW5lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcGxvdE9wdGlvbnM6IHtcclxuICAgICAgICAgICAgICAgIHJhZGlhbEJhcjoge1xyXG4gICAgICAgICAgICAgICAgICAgIGhvbGxvdzoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6IFwiNDUlXCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGFMYWJlbHM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2hvd09uOiBcImFsd2F5c1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG93OiBmYWxzZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvdzogZmFsc2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgdHJhY2s6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGlnaHRDb2xvcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg6ICcxMDAlJ1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29sb3JzOiBbYmFzZUNvbG9yXSxcclxuICAgICAgICAgICAgc3Ryb2tlOiB7XHJcbiAgICAgICAgICAgICAgICBsaW5lQ2FwOiBcInJvdW5kXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGxhYmVsczogW1wiUHJvZ3Jlc3NcIl1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgY2hhcnQgPSBuZXcgQXBleENoYXJ0cyhlbGVtZW50LCBvcHRpb25zKTtcclxuICAgICAgICBjaGFydC5yZW5kZXIoKTtcclxuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2luaXRpYWxpemVkJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gUHVibGljIG1ldGhvZHNcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBJbml0IGRlZmF1bHQgY2hhcnRcclxuICAgICAgICAgICAgaW5pdENoYXJ0KCcja3Rfc2xpZGVyX3dpZGdldF8xX2NoYXJ0XzEnLCA3Nik7XHJcblxyXG4gICAgICAgICAgICB2YXIgY2Fyb3VzZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcja3Rfc2xpZGVyc193aWRnZXRfMV9zbGlkZXInKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmKCFjYXJvdXNlbCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2Fyb3VzZWwuYWRkRXZlbnRMaXN0ZW5lcignc2xpZC5icy5jYXJvdXNlbCcsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZS50byA9PT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIEluaXQgc2Vjb25kIGNoYXJ0XHJcbiAgICAgICAgICAgICAgICAgICAgaW5pdENoYXJ0KCcja3Rfc2xpZGVyX3dpZGdldF8xX2NoYXJ0XzInLCA1NSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKGUudG8gPT09IDIpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBJbml0IHRoaXJkIGNoYXJ0XHJcbiAgICAgICAgICAgICAgICAgICAgaW5pdENoYXJ0KCcja3Rfc2xpZGVyX3dpZGdldF8xX2NoYXJ0XzMnLCAyNSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gICBcclxuICAgIH0gICAgICAgIFxyXG59KCk7XHJcblxyXG5cclxuLy8gV2VicGFjayBzdXBwb3J0XHJcbmlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBLVFNsaWRlcnNXaWRnZXQxO1xyXG59XHJcblxyXG4vLyBPbiBkb2N1bWVudCByZWFkeVxyXG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uKCkge1xyXG4gICAgS1RTbGlkZXJzV2lkZ2V0MS5pbml0KCk7XHJcbn0pO1xyXG4gICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICAgICAiXSwibmFtZXMiOlsiS1RTbGlkZXJzV2lkZ2V0MSIsImluaXRDaGFydCIsInF1ZXJ5IiwiZGF0YSIsImVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImhlaWdodCIsInBhcnNlSW50IiwiS1RVdGlsIiwiY3NzIiwiYmFzZUNvbG9yIiwiZ2V0Q3NzVmFyaWFibGVWYWx1ZSIsImxpZ2h0Q29sb3IiLCJvcHRpb25zIiwic2VyaWVzIiwiY2hhcnQiLCJmb250RmFtaWx5IiwidHlwZSIsInNwYXJrbGluZSIsImVuYWJsZWQiLCJwbG90T3B0aW9ucyIsInJhZGlhbEJhciIsImhvbGxvdyIsIm1hcmdpbiIsInNpemUiLCJkYXRhTGFiZWxzIiwic2hvd09uIiwibmFtZSIsInNob3ciLCJ2YWx1ZSIsInRyYWNrIiwiYmFja2dyb3VuZCIsInN0cm9rZVdpZHRoIiwiY29sb3JzIiwic3Ryb2tlIiwibGluZUNhcCIsImxhYmVscyIsIkFwZXhDaGFydHMiLCJyZW5kZXIiLCJhZGQiLCJpbml0IiwiY2Fyb3VzZWwiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInRvIiwibW9kdWxlIiwiZXhwb3J0cyIsIm9uRE9NQ29udGVudExvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/sliders/widget-1.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/sliders/widget-3.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/sliders/widget-3.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTSlidersWidget3 = function () {\n  // Private methods\n  var initChart = function initChart(query, color, data) {\n    var element = document.querySelector(query);\n    if (!element) {\n      return;\n    }\n    if (element.classList.contains(\"initialized\")) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n    var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n    var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n    var options = {\n      series: [{\n        name: 'Lessons',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: \"gradient\",\n        gradient: {\n          shadeIntensity: 1,\n          opacityFrom: 0.3,\n          opacityTo: 0.7,\n          stops: [0, 90, 100]\n        }\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 3,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 11', 'Apr 12', 'Apr 14', 'Apr 15', 'Apr 16', 'Apr 17', 'Apr 18', ''],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        tickAmount: 6,\n        labels: {\n          rotate: 0,\n          rotateAlways: true,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          position: 'front',\n          stroke: {\n            color: baseColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: true,\n          formatter: undefined,\n          offsetY: 0,\n          style: {\n            fontSize: '12px'\n          }\n        }\n      },\n      yaxis: {\n        tickAmount: 4,\n        max: 24,\n        min: 10,\n        labels: {\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        style: {\n          fontSize: '12px'\n        }\n      },\n      colors: [baseColor],\n      grid: {\n        borderColor: borderColor,\n        strokeDashArray: 4,\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      markers: {\n        strokeColor: baseColor,\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n    chart.render();\n    element.classList.add('initialized');\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      // Init default chart\n      initChart('#kt_sliders_widget_3_chart_1', 'danger', [19, 21, 21, 20, 20, 18, 18, 20, 20, 22, 22, 21, 21, 22]);\n      var carousel = document.querySelector('#kt_sliders_widget_3_slider');\n      if (!carousel) {\n        return;\n      }\n      carousel.addEventListener('slid.bs.carousel', function (e) {\n        if (e.to === 1) {\n          // Init second chart\n          initChart('#kt_sliders_widget_3_chart_2', 'primary', [18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22]);\n        }\n      });\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTSlidersWidget3;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTSlidersWidget3.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/sliders/widget-3.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/tables/widget-14.js":
/*!******************************************************!*\
  !*** ./resources/src/js/widgets/tables/widget-14.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget14 = function () {\n  // Private methods\n  var initChart = function initChart(chartSelector, data) {\n    var element = document.querySelector(chartSelector);\n    if (!element) {\n      return;\n    }\n    var height = parseInt(KTUtil.css(element, 'height'));\n    var color = element.getAttribute('data-kt-chart-color');\n    var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\n    var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n    var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n    var lightColor = KTUtil.getCssVariableValue('--bs-white');\n    var options = {\n      series: [{\n        name: 'Net Profit',\n        data: data\n      }],\n      chart: {\n        fontFamily: 'inherit',\n        type: 'area',\n        height: height,\n        toolbar: {\n          show: false\n        },\n        zoom: {\n          enabled: false\n        },\n        sparkline: {\n          enabled: true\n        }\n      },\n      plotOptions: {},\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: 'solid',\n        opacity: 1\n      },\n      stroke: {\n        curve: 'smooth',\n        show: true,\n        width: 2,\n        colors: [baseColor]\n      },\n      xaxis: {\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        },\n        crosshairs: {\n          show: false,\n          position: 'front',\n          stroke: {\n            color: strokeColor,\n            width: 1,\n            dashArray: 3\n          }\n        },\n        tooltip: {\n          enabled: false\n        }\n      },\n      yaxis: {\n        min: 0,\n        max: 60,\n        labels: {\n          show: false,\n          style: {\n            colors: labelColor,\n            fontSize: '12px'\n          }\n        }\n      },\n      states: {\n        normal: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        },\n        active: {\n          allowMultipleDataPointsSelection: false,\n          filter: {\n            type: 'none',\n            value: 0\n          }\n        }\n      },\n      tooltip: {\n        enabled: false\n      },\n      colors: [lightColor],\n      markers: {\n        colors: [lightColor],\n        strokeColor: [baseColor],\n        strokeWidth: 3\n      }\n    };\n    var chart = new ApexCharts(element, options);\n\n    // Set timeout to properly get the parent elements width\n    setTimeout(function () {\n      chart.render();\n    }, 200);\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initChart('#kt_table_widget_14_chart_1', [7, 10, 5, 21, 6, 11, 5, 23, 5, 11, 18, 7, 21, 13]);\n      initChart('#kt_table_widget_14_chart_2', [17, 5, 23, 2, 21, 9, 17, 23, 4, 24, 9, 17, 21, 7]);\n      initChart('#kt_table_widget_14_chart_3', [2, 24, 5, 17, 7, 2, 12, 24, 5, 24, 2, 8, 12, 7]);\n      initChart('#kt_table_widget_14_chart_4', [24, 3, 5, 19, 3, 7, 25, 14, 5, 14, 2, 8, 5, 17]);\n      initChart('#kt_table_widget_14_chart_5', [3, 23, 1, 19, 3, 17, 3, 9, 25, 4, 2, 18, 25, 3]);\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTablesWidget14;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTablesWidget14.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/tables/widget-14.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/tables/widget-3.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/tables/widget-3.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget3 = function () {\n  var table;\n  var datatable;\n\n  // Private methods\n  var initDatatable = function initDatatable() {\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      'paging': false,\n      'pageLength': false\n    });\n  };\n  var handleTabStates = function handleTabStates() {\n    var tabs = document.querySelector('[data-kt-table-widget-3=\"tabs_nav\"]');\n    var tabButtons = tabs.querySelectorAll('[data-kt-table-widget-3=\"tab\"]');\n    var tabClasses = ['border-bottom', 'border-3', 'border-primary'];\n    tabButtons.forEach(function (tab) {\n      tab.addEventListener('click', function (e) {\n        var _tab$classList;\n        // Get datatable filter value\n        var value = tab.getAttribute('data-kt-table-widget-3-value');\n        tabButtons.forEach(function (t) {\n          var _t$classList;\n          (_t$classList = t.classList).remove.apply(_t$classList, tabClasses);\n          t.classList.add('text-muted');\n        });\n        tab.classList.remove('text-muted');\n        (_tab$classList = tab.classList).add.apply(_tab$classList, tabClasses);\n\n        // Filter datatable\n        if (value === 'Show All') {\n          datatable.search('').draw();\n        } else {\n          datatable.search(value).draw();\n        }\n      });\n    });\n  };\n\n  // Handle status filter dropdown\n  var handleStatusFilter = function handleStatusFilter() {\n    var select = document.querySelector('[data-kt-table-widget-3=\"filter_status\"]');\n    $(select).on('select2:select', function (e) {\n      var value = $(this).val();\n      if (value === 'Show All') {\n        datatable.search('').draw();\n      } else {\n        datatable.search(value).draw();\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_widget_table_3');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      handleTabStates();\n      handleStatusFilter();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTablesWidget3;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTablesWidget3.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvdGFibGVzL3dpZGdldC0zLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsSUFBSUEsZUFBZSxHQUFHLFlBQVk7RUFDOUIsSUFBSUMsS0FBSztFQUNULElBQUlDLFNBQVM7O0VBRWI7RUFDQSxJQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQUEsRUFBUztJQUN4QjtJQUNBRCxTQUFTLEdBQUdFLENBQUMsQ0FBQ0gsS0FBSyxDQUFDLENBQUNJLFNBQVMsQ0FBQztNQUMzQixNQUFNLEVBQUUsS0FBSztNQUNiLE9BQU8sRUFBRSxFQUFFO01BQ1gsUUFBUSxFQUFFLEtBQUs7TUFDZixZQUFZLEVBQUU7SUFDbEIsQ0FBQyxDQUFDO0VBQ04sQ0FBQztFQUVELElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBZUEsQ0FBQSxFQUFTO0lBQzFCLElBQU1DLElBQUksR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMscUNBQXFDLENBQUM7SUFDMUUsSUFBTUMsVUFBVSxHQUFHSCxJQUFJLENBQUNJLGdCQUFnQixDQUFDLGdDQUFnQyxDQUFDO0lBQzFFLElBQU1DLFVBQVUsR0FBRyxDQUFDLGVBQWUsRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLENBQUM7SUFFbEVGLFVBQVUsQ0FBQ0csT0FBTyxDQUFDLFVBQUFDLEdBQUcsRUFBSTtNQUN0QkEsR0FBRyxDQUFDQyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBQUMsQ0FBQyxFQUFJO1FBQUEsSUFBQUMsY0FBQTtRQUMvQjtRQUNBLElBQU1DLEtBQUssR0FBR0osR0FBRyxDQUFDSyxZQUFZLENBQUMsOEJBQThCLENBQUM7UUFDOURULFVBQVUsQ0FBQ0csT0FBTyxDQUFDLFVBQUFPLENBQUMsRUFBSTtVQUFBLElBQUFDLFlBQUE7VUFDcEIsQ0FBQUEsWUFBQSxHQUFBRCxDQUFDLENBQUNFLFNBQVMsRUFBQ0MsTUFBTSxDQUFBQyxLQUFBLENBQUFILFlBQUEsRUFBSVQsVUFBVSxDQUFDO1VBQ2pDUSxDQUFDLENBQUNFLFNBQVMsQ0FBQ0csR0FBRyxDQUFDLFlBQVksQ0FBQztRQUNqQyxDQUFDLENBQUM7UUFFRlgsR0FBRyxDQUFDUSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDbEMsQ0FBQU4sY0FBQSxHQUFBSCxHQUFHLENBQUNRLFNBQVMsRUFBQ0csR0FBRyxDQUFBRCxLQUFBLENBQUFQLGNBQUEsRUFBSUwsVUFBVSxDQUFDOztRQUVoQztRQUNBLElBQUlNLEtBQUssS0FBSyxVQUFVLEVBQUU7VUFDdEJoQixTQUFTLENBQUN3QixNQUFNLENBQUMsRUFBRSxDQUFDLENBQUNDLElBQUksRUFBRTtRQUMvQixDQUFDLE1BQU07VUFDSHpCLFNBQVMsQ0FBQ3dCLE1BQU0sQ0FBQ1IsS0FBSyxDQUFDLENBQUNTLElBQUksRUFBRTtRQUNsQztNQUNKLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQztFQUNOLENBQUM7O0VBRUQ7RUFDQSxJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFBLEVBQVM7SUFDN0IsSUFBTUMsTUFBTSxHQUFHckIsUUFBUSxDQUFDQyxhQUFhLENBQUMsMENBQTBDLENBQUM7SUFFakZMLENBQUMsQ0FBQ3lCLE1BQU0sQ0FBQyxDQUFDQyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsVUFBVWQsQ0FBQyxFQUFFO01BQ3hDLElBQU1FLEtBQUssR0FBR2QsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDMkIsR0FBRyxFQUFFO01BQzNCLElBQUliLEtBQUssS0FBSyxVQUFVLEVBQUU7UUFDdEJoQixTQUFTLENBQUN3QixNQUFNLENBQUMsRUFBRSxDQUFDLENBQUNDLElBQUksRUFBRTtNQUMvQixDQUFDLE1BQU07UUFDSHpCLFNBQVMsQ0FBQ3dCLE1BQU0sQ0FBQ1IsS0FBSyxDQUFDLENBQUNTLElBQUksRUFBRTtNQUNsQztJQUNKLENBQUMsQ0FBQztFQUNOLENBQUM7O0VBRUQ7RUFDQSxPQUFPO0lBQ0hLLElBQUksRUFBRSxTQUFBQSxLQUFBLEVBQVk7TUFDZC9CLEtBQUssR0FBR08sUUFBUSxDQUFDQyxhQUFhLENBQUMsb0JBQW9CLENBQUM7TUFFcEQsSUFBSSxDQUFDUixLQUFLLEVBQUU7UUFDUjtNQUNKO01BRUFFLGFBQWEsRUFBRTtNQUNmRyxlQUFlLEVBQUU7TUFDakJzQixrQkFBa0IsRUFBRTtJQUN4QjtFQUNKLENBQUM7QUFDTCxDQUFDLEVBQUU7O0FBRUg7QUFDQSxJQUFJLElBQTZCLEVBQUU7RUFDL0JLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHbEMsZUFBZTtBQUNwQzs7QUFFQTtBQUNBbUMsTUFBTSxDQUFDQyxrQkFBa0IsQ0FBQyxZQUFZO0VBQ2xDcEMsZUFBZSxDQUFDZ0MsSUFBSSxFQUFFO0FBQzFCLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9zcmMvanMvd2lkZ2V0cy90YWJsZXMvd2lkZ2V0LTMuanM/NDdjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIENsYXNzIGRlZmluaXRpb25cclxudmFyIEtUVGFibGVzV2lkZ2V0MyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciB0YWJsZTtcclxuICAgIHZhciBkYXRhdGFibGU7XHJcblxyXG4gICAgLy8gUHJpdmF0ZSBtZXRob2RzXHJcbiAgICBjb25zdCBpbml0RGF0YXRhYmxlID0gKCkgPT4ge1xyXG4gICAgICAgIC8vIEluaXQgZGF0YXRhYmxlIC0tLSBtb3JlIGluZm8gb24gZGF0YXRhYmxlczogaHR0cHM6Ly9kYXRhdGFibGVzLm5ldC9tYW51YWwvXHJcbiAgICAgICAgZGF0YXRhYmxlID0gJCh0YWJsZSkuRGF0YVRhYmxlKHtcclxuICAgICAgICAgICAgXCJpbmZvXCI6IGZhbHNlLFxyXG4gICAgICAgICAgICAnb3JkZXInOiBbXSxcclxuICAgICAgICAgICAgJ3BhZ2luZyc6IGZhbHNlLFxyXG4gICAgICAgICAgICAncGFnZUxlbmd0aCc6IGZhbHNlLFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGhhbmRsZVRhYlN0YXRlcyA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCB0YWJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEta3QtdGFibGUtd2lkZ2V0LTM9XCJ0YWJzX25hdlwiXScpO1xyXG4gICAgICAgIGNvbnN0IHRhYkJ1dHRvbnMgPSB0YWJzLnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWt0LXRhYmxlLXdpZGdldC0zPVwidGFiXCJdJyk7XHJcbiAgICAgICAgY29uc3QgdGFiQ2xhc3NlcyA9IFsnYm9yZGVyLWJvdHRvbScsICdib3JkZXItMycsICdib3JkZXItcHJpbWFyeSddO1xyXG5cclxuICAgICAgICB0YWJCdXR0b25zLmZvckVhY2godGFiID0+IHtcclxuICAgICAgICAgICAgdGFiLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyBHZXQgZGF0YXRhYmxlIGZpbHRlciB2YWx1ZVxyXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0YWIuZ2V0QXR0cmlidXRlKCdkYXRhLWt0LXRhYmxlLXdpZGdldC0zLXZhbHVlJyk7XHJcbiAgICAgICAgICAgICAgICB0YWJCdXR0b25zLmZvckVhY2godCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdC5jbGFzc0xpc3QucmVtb3ZlKC4uLnRhYkNsYXNzZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIHQuY2xhc3NMaXN0LmFkZCgndGV4dC1tdXRlZCcpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgdGFiLmNsYXNzTGlzdC5yZW1vdmUoJ3RleHQtbXV0ZWQnKTtcclxuICAgICAgICAgICAgICAgIHRhYi5jbGFzc0xpc3QuYWRkKC4uLnRhYkNsYXNzZXMpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIEZpbHRlciBkYXRhdGFibGVcclxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gJ1Nob3cgQWxsJykge1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGF0YWJsZS5zZWFyY2goJycpLmRyYXcoKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YXRhYmxlLnNlYXJjaCh2YWx1ZSkuZHJhdygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBIYW5kbGUgc3RhdHVzIGZpbHRlciBkcm9wZG93blxyXG4gICAgY29uc3QgaGFuZGxlU3RhdHVzRmlsdGVyID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LXRhYmxlLXdpZGdldC0zPVwiZmlsdGVyX3N0YXR1c1wiXScpO1xyXG5cclxuICAgICAgICAkKHNlbGVjdCkub24oJ3NlbGVjdDI6c2VsZWN0JywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSAkKHRoaXMpLnZhbCgpO1xyXG4gICAgICAgICAgICBpZiAodmFsdWUgPT09ICdTaG93IEFsbCcpIHtcclxuICAgICAgICAgICAgICAgIGRhdGF0YWJsZS5zZWFyY2goJycpLmRyYXcoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRhdGF0YWJsZS5zZWFyY2godmFsdWUpLmRyYXcoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFB1YmxpYyBtZXRob2RzXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGFibGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcja3Rfd2lkZ2V0X3RhYmxlXzMnKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghdGFibGUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaW5pdERhdGF0YWJsZSgpO1xyXG4gICAgICAgICAgICBoYW5kbGVUYWJTdGF0ZXMoKTtcclxuICAgICAgICAgICAgaGFuZGxlU3RhdHVzRmlsdGVyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59KCk7XHJcblxyXG4vLyBXZWJwYWNrIHN1cHBvcnRcclxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEtUVGFibGVzV2lkZ2V0MztcclxufVxyXG5cclxuLy8gT24gZG9jdW1lbnQgcmVhZHlcclxuS1RVdGlsLm9uRE9NQ29udGVudExvYWRlZChmdW5jdGlvbiAoKSB7XHJcbiAgICBLVFRhYmxlc1dpZGdldDMuaW5pdCgpO1xyXG59KTtcclxuIl0sIm5hbWVzIjpbIktUVGFibGVzV2lkZ2V0MyIsInRhYmxlIiwiZGF0YXRhYmxlIiwiaW5pdERhdGF0YWJsZSIsIiQiLCJEYXRhVGFibGUiLCJoYW5kbGVUYWJTdGF0ZXMiLCJ0YWJzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidGFiQnV0dG9ucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0YWJDbGFzc2VzIiwiZm9yRWFjaCIsInRhYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiX3RhYiRjbGFzc0xpc3QiLCJ2YWx1ZSIsImdldEF0dHJpYnV0ZSIsInQiLCJfdCRjbGFzc0xpc3QiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhcHBseSIsImFkZCIsInNlYXJjaCIsImRyYXciLCJoYW5kbGVTdGF0dXNGaWx0ZXIiLCJzZWxlY3QiLCJvbiIsInZhbCIsImluaXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiS1RVdGlsIiwib25ET01Db250ZW50TG9hZGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/tables/widget-3.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/tables/widget-4.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/tables/widget-4.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget4 = function () {\n  var table;\n  var datatable;\n  var template;\n\n  // Private methods\n  var initDatatable = function initDatatable() {\n    // Get subtable template\n    var subtable = document.querySelector('[data-kt-table-widget-4=\"subtable_template\"]');\n    template = subtable.cloneNode(true);\n    template.classList.remove('d-none');\n\n    // Remove subtable template\n    subtable.parentNode.removeChild(subtable);\n\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      \"lengthChange\": false,\n      'pageLength': 6,\n      'ordering': false,\n      'paging': false,\n      'columnDefs': [{\n        orderable: false,\n        targets: 0\n      },\n      // Disable ordering on column 0 (checkbox)\n      {\n        orderable: false,\n        targets: 6\n      } // Disable ordering on column 6 (actions)\n      ]\n    });\n\n    // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n    datatable.on('draw', function () {\n      resetSubtable();\n      handleActionButton();\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-table-widget-4=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      datatable.search(e.target.value).draw();\n    });\n  };\n\n  // Handle status filter\n  var handleStatusFilter = function handleStatusFilter() {\n    var select = document.querySelector('[data-kt-table-widget-4=\"filter_status\"]');\n    $(select).on('select2:select', function (e) {\n      var value = $(this).val();\n      if (value === 'Show All') {\n        datatable.search('').draw();\n      } else {\n        datatable.search(value).draw();\n      }\n    });\n  };\n\n  // Subtable data sample\n  var data = [{\n    image: '76',\n    name: 'Go Pro 8',\n    description: 'Latest  version of Go Pro.',\n    cost: '500.00',\n    qty: '1',\n    total: '500.00',\n    stock: '12'\n  }, {\n    image: '60',\n    name: 'Bose Earbuds',\n    description: 'Top quality earbuds from Bose.',\n    cost: '300.00',\n    qty: '1',\n    total: '300.00',\n    stock: '8'\n  }, {\n    image: '211',\n    name: 'Dry-fit Sports T-shirt',\n    description: 'Comfortable sportswear.',\n    cost: '89.00',\n    qty: '1',\n    total: '89.00',\n    stock: '18'\n  }, {\n    image: '21',\n    name: 'Apple Airpod 3',\n    description: 'Apple\\'s latest earbuds.',\n    cost: '200.00',\n    qty: '2',\n    total: '400.00',\n    stock: '32'\n  }, {\n    image: '83',\n    name: 'Nike Pumps',\n    description: 'Apple\\'s latest headphones.',\n    cost: '200.00',\n    qty: '1',\n    total: '200.00',\n    stock: '8'\n  }];\n\n  // Handle action button\n  var handleActionButton = function handleActionButton() {\n    var buttons = document.querySelectorAll('[data-kt-table-widget-4=\"expand_row\"]');\n\n    // Sample row items counter --- for demo purpose only, remove this variable in your project\n    var rowItems = [3, 1, 3, 1, 2, 1];\n    buttons.forEach(function (button, index) {\n      button.addEventListener('click', function (e) {\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        var row = button.closest('tr');\n        var rowClasses = ['isOpen', 'border-bottom-0'];\n\n        // Get total number of items to generate --- for demo purpose only, remove this code snippet in your project\n        var demoData = [];\n        for (var j = 0; j < rowItems[index]; j++) {\n          demoData.push(data[j]);\n        }\n        // End of generating demo data\n\n        // Handle subtable expanded state\n        if (row.classList.contains('isOpen')) {\n          var _row$classList;\n          // Remove all subtables from current order row\n          while (row.nextSibling && row.nextSibling.getAttribute('data-kt-table-widget-4') === 'subtable_template') {\n            row.nextSibling.parentNode.removeChild(row.nextSibling);\n          }\n          (_row$classList = row.classList).remove.apply(_row$classList, rowClasses);\n          button.classList.remove('active');\n        } else {\n          var _row$classList2;\n          populateTemplate(demoData, row);\n          (_row$classList2 = row.classList).add.apply(_row$classList2, rowClasses);\n          button.classList.add('active');\n        }\n      });\n    });\n  };\n\n  // Populate template with content/data -- content/data can be replaced with relevant data from database or API\n  var populateTemplate = function populateTemplate(data, target) {\n    data.forEach(function (d, index) {\n      // Clone template node\n      var newTemplate = template.cloneNode(true);\n\n      // Stock badges\n      var lowStock = \"<div class=\\\"badge badge-light-warning\\\">Low Stock</div>\";\n      var inStock = \"<div class=\\\"badge badge-light-success\\\">In Stock</div>\";\n\n      // Select data elements\n      var image = newTemplate.querySelector('[data-kt-table-widget-4=\"template_image\"]');\n      var name = newTemplate.querySelector('[data-kt-table-widget-4=\"template_name\"]');\n      var description = newTemplate.querySelector('[data-kt-table-widget-4=\"template_description\"]');\n      var cost = newTemplate.querySelector('[data-kt-table-widget-4=\"template_cost\"]');\n      var qty = newTemplate.querySelector('[data-kt-table-widget-4=\"template_qty\"]');\n      var total = newTemplate.querySelector('[data-kt-table-widget-4=\"template_total\"]');\n      var stock = newTemplate.querySelector('[data-kt-table-widget-4=\"template_stock\"]');\n\n      // Populate elements with data\n      var imageSrc = image.getAttribute('data-kt-src-path');\n      image.setAttribute('src', imageSrc + d.image + '.gif');\n      name.innerText = d.name;\n      description.innerText = d.description;\n      cost.innerText = d.cost;\n      qty.innerText = d.qty;\n      total.innerText = d.total;\n      if (d.stock > 10) {\n        stock.innerHTML = inStock;\n      } else {\n        stock.innerHTML = lowStock;\n      }\n\n      // New template border controller\n      // When only 1 row is available\n      if (data.length === 1) {\n        //let borderClasses = ['rounded', 'rounded-end-0'];\n        //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n        //borderClasses = ['rounded', 'rounded-start-0'];\n        //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n        // Remove bottom border\n        //newTemplate.classList.add('border-bottom-0');\n      } else {\n        // When multiple rows detected\n        if (index === data.length - 1) {// first row\n          //let borderClasses = ['rounded-start', 'rounded-bottom-0'];\n          // newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n          //borderClasses = ['rounded-end', 'rounded-bottom-0'];\n          //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n        }\n        if (index === 0) {// last row\n          //let borderClasses = ['rounded-start', 'rounded-top-0'];\n          //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n          //borderClasses = ['rounded-end', 'rounded-top-0'];\n          //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n          // Remove bottom border on last row\n          //newTemplate.classList.add('border-bottom-0');\n        }\n      }\n\n      // Insert new template into table\n      var tbody = table.querySelector('tbody');\n      tbody.insertBefore(newTemplate, target.nextSibling);\n    });\n  };\n\n  // Reset subtable\n  var resetSubtable = function resetSubtable() {\n    var subtables = document.querySelectorAll('[data-kt-table-widget-4=\"subtable_template\"]');\n    subtables.forEach(function (st) {\n      st.parentNode.removeChild(st);\n    });\n    var rows = table.querySelectorAll('tbody tr');\n    rows.forEach(function (r) {\n      r.classList.remove('isOpen');\n      if (r.querySelector('[data-kt-table-widget-4=\"expand_row\"]')) {\n        r.querySelector('[data-kt-table-widget-4=\"expand_row\"]').classList.remove('active');\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_table_widget_4_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      handleSearchDatatable();\n      handleStatusFilter();\n      handleActionButton();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTablesWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTablesWidget4.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/tables/widget-4.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/tables/widget-5.js":
/*!*****************************************************!*\
  !*** ./resources/src/js/widgets/tables/widget-5.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget5 = function () {\n  var table;\n  var datatable;\n\n  // Private methods\n  var initDatatable = function initDatatable() {\n    // Set date data order\n    var tableRows = table.querySelectorAll('tbody tr');\n    tableRows.forEach(function (row) {\n      var dateRow = row.querySelectorAll('td');\n      var realDate = moment(dateRow[2].innerHTML, \"MMM DD, YYYY\").format(); // select date from 3rd column in table\n      dateRow[2].setAttribute('data-order', realDate);\n    });\n\n    // Init datatable --- more info on datatables: https://datatables.net/manual/\n    datatable = $(table).DataTable({\n      \"info\": false,\n      'order': [],\n      \"lengthChange\": false,\n      'pageLength': 6,\n      'paging': false,\n      'columnDefs': [{\n        orderable: false,\n        targets: 1\n      } // Disable ordering on column 1 (product id)\n      ]\n    });\n  };\n\n  // Handle status filter\n  var handleStatusFilter = function handleStatusFilter() {\n    var select = document.querySelector('[data-kt-table-widget-5=\"filter_status\"]');\n    $(select).on('select2:select', function (e) {\n      var value = $(this).val();\n      if (value === 'Show All') {\n        datatable.search('').draw();\n      } else {\n        datatable.search(value).draw();\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      table = document.querySelector('#kt_table_widget_5_table');\n      if (!table) {\n        return;\n      }\n      initDatatable();\n      handleStatusFilter();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTablesWidget5;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTablesWidget5.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvdGFibGVzL3dpZGdldC01LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsSUFBSUEsZUFBZSxHQUFHLFlBQVk7RUFDOUIsSUFBSUMsS0FBSztFQUNULElBQUlDLFNBQVM7O0VBRWI7RUFDQSxJQUFNQyxhQUFhLEdBQUcsU0FBaEJBLGFBQWFBLENBQUEsRUFBUztJQUN4QjtJQUNBLElBQU1DLFNBQVMsR0FBR0gsS0FBSyxDQUFDSSxnQkFBZ0IsQ0FBQyxVQUFVLENBQUM7SUFFcERELFNBQVMsQ0FBQ0UsT0FBTyxDQUFDLFVBQUFDLEdBQUcsRUFBSTtNQUNyQixJQUFNQyxPQUFPLEdBQUdELEdBQUcsQ0FBQ0YsZ0JBQWdCLENBQUMsSUFBSSxDQUFDO01BQzFDLElBQU1JLFFBQVEsR0FBR0MsTUFBTSxDQUFDRixPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNHLFNBQVMsRUFBRSxjQUFjLENBQUMsQ0FBQ0MsTUFBTSxFQUFFLENBQUMsQ0FBQztNQUN4RUosT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDSyxZQUFZLENBQUMsWUFBWSxFQUFFSixRQUFRLENBQUM7SUFDbkQsQ0FBQyxDQUFDOztJQUVGO0lBQ0FQLFNBQVMsR0FBR1ksQ0FBQyxDQUFDYixLQUFLLENBQUMsQ0FBQ2MsU0FBUyxDQUFDO01BQzNCLE1BQU0sRUFBRSxLQUFLO01BQ2IsT0FBTyxFQUFFLEVBQUU7TUFDWCxjQUFjLEVBQUUsS0FBSztNQUNyQixZQUFZLEVBQUUsQ0FBQztNQUNmLFFBQVEsRUFBRSxLQUFLO01BQ2YsWUFBWSxFQUFFLENBQ1Y7UUFBRUMsU0FBUyxFQUFFLEtBQUs7UUFBRUMsT0FBTyxFQUFFO01BQUUsQ0FBQyxDQUFFO01BQUE7SUFFMUMsQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLElBQU1DLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0JBLENBQUEsRUFBUztJQUM3QixJQUFNQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLDBDQUEwQyxDQUFDO0lBRWpGUCxDQUFDLENBQUNLLE1BQU0sQ0FBQyxDQUFDRyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsVUFBVUMsQ0FBQyxFQUFFO01BQ3hDLElBQU1DLEtBQUssR0FBR1YsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDVyxHQUFHLEVBQUU7TUFDM0IsSUFBSUQsS0FBSyxLQUFLLFVBQVUsRUFBRTtRQUN0QnRCLFNBQVMsQ0FBQ3dCLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQ0MsSUFBSSxFQUFFO01BQy9CLENBQUMsTUFBTTtRQUNIekIsU0FBUyxDQUFDd0IsTUFBTSxDQUFDRixLQUFLLENBQUMsQ0FBQ0csSUFBSSxFQUFFO01BQ2xDO0lBQ0osQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLE9BQU87SUFDSEMsSUFBSSxFQUFFLFNBQUFBLEtBQUEsRUFBWTtNQUNkM0IsS0FBSyxHQUFHbUIsUUFBUSxDQUFDQyxhQUFhLENBQUMsMEJBQTBCLENBQUM7TUFFMUQsSUFBSSxDQUFDcEIsS0FBSyxFQUFFO1FBQ1I7TUFDSjtNQUVBRSxhQUFhLEVBQUU7TUFDZmUsa0JBQWtCLEVBQUU7SUFDeEI7RUFDSixDQUFDO0FBQ0wsQ0FBQyxFQUFFOztBQUVIO0FBQ0EsSUFBSSxJQUE2QixFQUFFO0VBQy9CVyxNQUFNLENBQUNDLE9BQU8sR0FBRzlCLGVBQWU7QUFDcEM7O0FBRUE7QUFDQStCLE1BQU0sQ0FBQ0Msa0JBQWtCLENBQUMsWUFBWTtFQUNsQ2hDLGVBQWUsQ0FBQzRCLElBQUksRUFBRTtBQUMxQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvdGFibGVzL3dpZGdldC01LmpzPzI3YzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4vLyBDbGFzcyBkZWZpbml0aW9uXHJcbnZhciBLVFRhYmxlc1dpZGdldDUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgdGFibGU7XHJcbiAgICB2YXIgZGF0YXRhYmxlO1xyXG5cclxuICAgIC8vIFByaXZhdGUgbWV0aG9kc1xyXG4gICAgY29uc3QgaW5pdERhdGF0YWJsZSA9ICgpID0+IHtcclxuICAgICAgICAvLyBTZXQgZGF0ZSBkYXRhIG9yZGVyXHJcbiAgICAgICAgY29uc3QgdGFibGVSb3dzID0gdGFibGUucXVlcnlTZWxlY3RvckFsbCgndGJvZHkgdHInKTtcclxuXHJcbiAgICAgICAgdGFibGVSb3dzLmZvckVhY2gocm93ID0+IHtcclxuICAgICAgICAgICAgY29uc3QgZGF0ZVJvdyA9IHJvdy5xdWVyeVNlbGVjdG9yQWxsKCd0ZCcpO1xyXG4gICAgICAgICAgICBjb25zdCByZWFsRGF0ZSA9IG1vbWVudChkYXRlUm93WzJdLmlubmVySFRNTCwgXCJNTU0gREQsIFlZWVlcIikuZm9ybWF0KCk7IC8vIHNlbGVjdCBkYXRlIGZyb20gM3JkIGNvbHVtbiBpbiB0YWJsZVxyXG4gICAgICAgICAgICBkYXRlUm93WzJdLnNldEF0dHJpYnV0ZSgnZGF0YS1vcmRlcicsIHJlYWxEYXRlKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gSW5pdCBkYXRhdGFibGUgLS0tIG1vcmUgaW5mbyBvbiBkYXRhdGFibGVzOiBodHRwczovL2RhdGF0YWJsZXMubmV0L21hbnVhbC9cclxuICAgICAgICBkYXRhdGFibGUgPSAkKHRhYmxlKS5EYXRhVGFibGUoe1xyXG4gICAgICAgICAgICBcImluZm9cIjogZmFsc2UsXHJcbiAgICAgICAgICAgICdvcmRlcic6IFtdLFxyXG4gICAgICAgICAgICBcImxlbmd0aENoYW5nZVwiOiBmYWxzZSxcclxuICAgICAgICAgICAgJ3BhZ2VMZW5ndGgnOiA2LFxyXG4gICAgICAgICAgICAncGFnaW5nJzogZmFsc2UsXHJcbiAgICAgICAgICAgICdjb2x1bW5EZWZzJzogW1xyXG4gICAgICAgICAgICAgICAgeyBvcmRlcmFibGU6IGZhbHNlLCB0YXJnZXRzOiAxIH0sIC8vIERpc2FibGUgb3JkZXJpbmcgb24gY29sdW1uIDEgKHByb2R1Y3QgaWQpXHJcbiAgICAgICAgICAgIF1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBIYW5kbGUgc3RhdHVzIGZpbHRlclxyXG4gICAgY29uc3QgaGFuZGxlU3RhdHVzRmlsdGVyID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHNlbGVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWt0LXRhYmxlLXdpZGdldC01PVwiZmlsdGVyX3N0YXR1c1wiXScpO1xyXG5cclxuICAgICAgICAkKHNlbGVjdCkub24oJ3NlbGVjdDI6c2VsZWN0JywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSAkKHRoaXMpLnZhbCgpO1xyXG4gICAgICAgICAgICBpZiAodmFsdWUgPT09ICdTaG93IEFsbCcpIHtcclxuICAgICAgICAgICAgICAgIGRhdGF0YWJsZS5zZWFyY2goJycpLmRyYXcoKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRhdGF0YWJsZS5zZWFyY2godmFsdWUpLmRyYXcoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIFB1YmxpYyBtZXRob2RzXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGluaXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGFibGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcja3RfdGFibGVfd2lkZ2V0XzVfdGFibGUnKTtcclxuXHJcbiAgICAgICAgICAgIGlmICghdGFibGUpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaW5pdERhdGF0YWJsZSgpO1xyXG4gICAgICAgICAgICBoYW5kbGVTdGF0dXNGaWx0ZXIoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0oKTtcclxuXHJcbi8vIFdlYnBhY2sgc3VwcG9ydFxyXG5pZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIG1vZHVsZS5leHBvcnRzID0gS1RUYWJsZXNXaWRnZXQ1O1xyXG59XHJcblxyXG4vLyBPbiBkb2N1bWVudCByZWFkeVxyXG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uICgpIHtcclxuICAgIEtUVGFibGVzV2lkZ2V0NS5pbml0KCk7XHJcbn0pO1xyXG4iXSwibmFtZXMiOlsiS1RUYWJsZXNXaWRnZXQ1IiwidGFibGUiLCJkYXRhdGFibGUiLCJpbml0RGF0YXRhYmxlIiwidGFibGVSb3dzIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJyb3ciLCJkYXRlUm93IiwicmVhbERhdGUiLCJtb21lbnQiLCJpbm5lckhUTUwiLCJmb3JtYXQiLCJzZXRBdHRyaWJ1dGUiLCIkIiwiRGF0YVRhYmxlIiwib3JkZXJhYmxlIiwidGFyZ2V0cyIsImhhbmRsZVN0YXR1c0ZpbHRlciIsInNlbGVjdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIm9uIiwiZSIsInZhbHVlIiwidmFsIiwic2VhcmNoIiwiZHJhdyIsImluaXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiS1RVdGlsIiwib25ET01Db250ZW50TG9hZGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/tables/widget-5.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/timeline/widget-1.js":
/*!*******************************************************!*\
  !*** ./resources/src/js/widgets/timeline/widget-1.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget1 = function () {\n  // Private methods\n  // Day timeline\n  var initTimelineDay = function initTimelineDay() {\n    // Detect element\n    var element = document.querySelector('#kt_timeline_widget_1_1');\n    if (!element) {\n      return;\n    }\n    if (element.innerHTML) {\n      return;\n    }\n\n    // Set variables\n    var now = Date.now();\n    var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n    // Build vis-timeline datasets\n    var groups = new vis.DataSet([{\n      id: \"research\",\n      content: \"Research\",\n      order: 1\n    }, {\n      id: \"qa\",\n      content: \"Phase 2.6 QA\",\n      order: 2\n    }, {\n      id: \"ui\",\n      content: \"UI Design\",\n      order: 3\n    }, {\n      id: \"dev\",\n      content: \"Development\",\n      order: 4\n    }]);\n    var items = new vis.DataSet([{\n      id: 1,\n      group: 'research',\n      start: now,\n      end: moment(now).add(1.5, 'hours'),\n      content: 'Meeting',\n      progress: \"60%\",\n      color: 'primary',\n      users: ['avatars/300-6.jpg', 'avatars/300-1.jpg']\n    }, {\n      id: 2,\n      group: 'qa',\n      start: moment(now).add(1, 'hours'),\n      end: moment(now).add(2, 'hours'),\n      content: 'Testing',\n      progress: \"47%\",\n      color: 'success',\n      users: ['avatars/300-2.jpg']\n    }, {\n      id: 3,\n      group: 'ui',\n      start: moment(now).add(30, 'minutes'),\n      end: moment(now).add(2.5, 'hours'),\n      content: 'Landing page',\n      progress: \"55%\",\n      color: 'danger',\n      users: ['avatars/300-5.jpg', 'avatars/300-20.jpg']\n    }, {\n      id: 4,\n      group: 'dev',\n      start: moment(now).add(1.5, 'hours'),\n      end: moment(now).add(3, 'hours'),\n      content: 'Products module',\n      progress: \"75%\",\n      color: 'info',\n      users: ['avatars/300-23.jpg', 'avatars/300-12.jpg', 'avatars/300-9.jpg']\n    }]);\n\n    // Set vis-timeline options\n    var options = {\n      zoomable: false,\n      moveable: false,\n      selectable: false,\n      // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 35\n        }\n      },\n      // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      showCurrentTime: false,\n      // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: {\n            div: ['class', 'style'],\n            img: ['data-kt-timeline-avatar-src', 'alt'],\n            a: ['href', 'class']\n          }\n        }\n      },\n      // specify a template for the items\n      template: function template(item) {\n        // Build users group\n        var users = item.users;\n        var userTemplate = '';\n        users.forEach(function (user) {\n          userTemplate += \"<div class=\\\"symbol symbol-circle symbol-25px\\\"><img data-kt-timeline-avatar-src=\\\"\".concat(rootImagePath + user, \"\\\" alt=\\\"\\\" /></div>\");\n        });\n        return \"<div class=\\\"rounded-pill bg-light-\".concat(item.color, \" d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\\\">\\n                    <div class=\\\"position-absolute rounded-pill d-block bg-\").concat(item.color, \" start-0 top-0 h-100 z-index-1\\\" style=\\\"width: \").concat(item.progress, \";\\\"></div>\\n        \\n                    <div class=\\\"d-flex align-items-center position-relative z-index-2\\\">\\n                        <div class=\\\"symbol-group symbol-hover flex-nowrap me-3\\\">\\n                            \").concat(userTemplate, \"\\n                        </div>\\n        \\n                        <a href=\\\"#\\\" class=\\\"fw-bold text-white text-hover-dark\\\">\").concat(item.content, \"</a>\\n                    </div>\\n        \\n                    <div class=\\\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\\\">\\n                        \").concat(item.progress, \"\\n                    </div>\\n                </div>        \\n                \");\n      },\n      // Remove block ui on initial draw\n      onInitialDrawComplete: function onInitialDrawComplete() {\n        handleAvatarPath();\n        var target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n        var blockUI = KTBlockUI.getInstance(target);\n        if (blockUI.isBlocked()) {\n          setTimeout(function () {\n            blockUI.release();\n          }, 1000);\n        }\n      }\n    };\n\n    // Init vis-timeline\n    var timeline = new vis.Timeline(element, items, groups, options);\n\n    // Prevent infinite loop draws\n    timeline.on(\"currentTimeTick\", function () {\n      // After fired the first time we un-subscribed\n      timeline.off(\"currentTimeTick\");\n    });\n  };\n\n  // Week timeline\n  var initTimelineWeek = function initTimelineWeek() {\n    // Detect element\n    var element = document.querySelector('#kt_timeline_widget_1_2');\n    if (!element) {\n      return;\n    }\n    if (element.innerHTML) {\n      return;\n    }\n\n    // Set variables\n    var now = Date.now();\n    var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n    // Build vis-timeline datasets\n    var groups = new vis.DataSet([{\n      id: 1,\n      content: \"Research\",\n      order: 1\n    }, {\n      id: 2,\n      content: \"Phase 2.6 QA\",\n      order: 2\n    }, {\n      id: 3,\n      content: \"UI Design\",\n      order: 3\n    }, {\n      id: 4,\n      content: \"Development\",\n      order: 4\n    }]);\n    var items = new vis.DataSet([{\n      id: 1,\n      group: 1,\n      start: now,\n      end: moment(now).add(7, 'days'),\n      content: 'Framework',\n      progress: \"71%\",\n      color: 'primary',\n      users: ['avatars/300-6.jpg', 'avatars/300-1.jpg']\n    }, {\n      id: 2,\n      group: 2,\n      start: moment(now).add(7, 'days'),\n      end: moment(now).add(14, 'days'),\n      content: 'Accessibility',\n      progress: \"84%\",\n      color: 'success',\n      users: ['avatars/300-2.jpg']\n    }, {\n      id: 3,\n      group: 3,\n      start: moment(now).add(3, 'days'),\n      end: moment(now).add(20, 'days'),\n      content: 'Microsites',\n      progress: \"69%\",\n      color: 'danger',\n      users: ['avatars/300-5.jpg', 'avatars/300-20.jpg']\n    }, {\n      id: 4,\n      group: 4,\n      start: moment(now).add(10, 'days'),\n      end: moment(now).add(21, 'days'),\n      content: 'Deployment',\n      progress: \"74%\",\n      color: 'info',\n      users: ['avatars/300-23.jpg', 'avatars/300-12.jpg', 'avatars/300-9.jpg']\n    }]);\n\n    // Set vis-timeline options\n    var options = {\n      zoomable: false,\n      moveable: false,\n      selectable: false,\n      // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 35\n        }\n      },\n      // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      showCurrentTime: false,\n      // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: {\n            div: ['class', 'style'],\n            img: ['data-kt-timeline-avatar-src', 'alt'],\n            a: ['href', 'class']\n          }\n        }\n      },\n      // specify a template for the items\n      template: function template(item) {\n        // Build users group\n        var users = item.users;\n        var userTemplate = '';\n        users.forEach(function (user) {\n          userTemplate += \"<div class=\\\"symbol symbol-circle symbol-25px\\\"><img data-kt-timeline-avatar-src=\\\"\".concat(rootImagePath + user, \"\\\" alt=\\\"\\\" /></div>\");\n        });\n        return \"<div class=\\\"rounded-pill bg-light-\".concat(item.color, \" d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\\\">\\n                    <div class=\\\"position-absolute rounded-pill d-block bg-\").concat(item.color, \" start-0 top-0 h-100 z-index-1\\\" style=\\\"width: \").concat(item.progress, \";\\\"></div>\\n        \\n                    <div class=\\\"d-flex align-items-center position-relative z-index-2\\\">\\n                        <div class=\\\"symbol-group symbol-hover flex-nowrap me-3\\\">\\n                            \").concat(userTemplate, \"\\n                        </div>\\n        \\n                        <a href=\\\"#\\\" class=\\\"fw-bold text-white text-hover-dark\\\">\").concat(item.content, \"</a>\\n                    </div>\\n        \\n                    <div class=\\\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\\\">\\n                        \").concat(item.progress, \"\\n                    </div>\\n                </div>        \\n                \");\n      },\n      // Remove block ui on initial draw\n      onInitialDrawComplete: function onInitialDrawComplete() {\n        handleAvatarPath();\n        var target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n        var blockUI = KTBlockUI.getInstance(target);\n        if (blockUI.isBlocked()) {\n          setTimeout(function () {\n            blockUI.release();\n          }, 1000);\n        }\n      }\n    };\n\n    // Init vis-timeline\n    var timeline = new vis.Timeline(element, items, groups, options);\n\n    // Prevent infinite loop draws\n    timeline.on(\"currentTimeTick\", function () {\n      // After fired the first time we un-subscribed\n      timeline.off(\"currentTimeTick\");\n    });\n  };\n\n  // Month timeline\n  var initTimelineMonth = function initTimelineMonth() {\n    // Detect element\n    var element = document.querySelector('#kt_timeline_widget_1_3');\n    if (!element) {\n      return;\n    }\n    if (element.innerHTML) {\n      return;\n    }\n\n    // Set variables\n    var now = Date.now();\n    var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n    // Build vis-timeline datasets\n    var groups = new vis.DataSet([{\n      id: \"research\",\n      content: \"Research\",\n      order: 1\n    }, {\n      id: \"qa\",\n      content: \"Phase 2.6 QA\",\n      order: 2\n    }, {\n      id: \"ui\",\n      content: \"UI Design\",\n      order: 3\n    }, {\n      id: \"dev\",\n      content: \"Development\",\n      order: 4\n    }]);\n    var items = new vis.DataSet([{\n      id: 1,\n      group: 'research',\n      start: now,\n      end: moment(now).add(2, 'months'),\n      content: 'Tags',\n      progress: \"79%\",\n      color: 'primary',\n      users: ['avatars/300-6.jpg', 'avatars/300-1.jpg']\n    }, {\n      id: 2,\n      group: 'qa',\n      start: moment(now).add(0.5, 'months'),\n      end: moment(now).add(5, 'months'),\n      content: 'Testing',\n      progress: \"64%\",\n      color: 'success',\n      users: ['avatars/300-2.jpg']\n    }, {\n      id: 3,\n      group: 'ui',\n      start: moment(now).add(2, 'months'),\n      end: moment(now).add(6.5, 'months'),\n      content: 'Media',\n      progress: \"82%\",\n      color: 'danger',\n      users: ['avatars/300-5.jpg', 'avatars/300-20.jpg']\n    }, {\n      id: 4,\n      group: 'dev',\n      start: moment(now).add(4, 'months'),\n      end: moment(now).add(7, 'months'),\n      content: 'Plugins',\n      progress: \"58%\",\n      color: 'info',\n      users: ['avatars/300-23.jpg', 'avatars/300-12.jpg', 'avatars/300-9.jpg']\n    }]);\n\n    // Set vis-timeline options\n    var options = {\n      zoomable: false,\n      moveable: false,\n      selectable: false,\n      // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 35\n        }\n      },\n      // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      showCurrentTime: false,\n      // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: {\n            div: ['class', 'style'],\n            img: ['data-kt-timeline-avatar-src', 'alt'],\n            a: ['href', 'class']\n          }\n        }\n      },\n      // specify a template for the items\n      template: function template(item) {\n        // Build users group\n        var users = item.users;\n        var userTemplate = '';\n        users.forEach(function (user) {\n          userTemplate += \"<div class=\\\"symbol symbol-circle symbol-25px\\\"><img data-kt-timeline-avatar-src=\\\"\".concat(rootImagePath + user, \"\\\" alt=\\\"\\\" /></div>\");\n        });\n        return \"<div class=\\\"rounded-pill bg-light-\".concat(item.color, \" d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\\\">\\n                    <div class=\\\"position-absolute rounded-pill d-block bg-\").concat(item.color, \" start-0 top-0 h-100 z-index-1\\\" style=\\\"width: \").concat(item.progress, \";\\\"></div>\\n        \\n                    <div class=\\\"d-flex align-items-center position-relative z-index-2\\\">\\n                        <div class=\\\"symbol-group symbol-hover flex-nowrap me-3\\\">\\n                            \").concat(userTemplate, \"\\n                        </div>\\n        \\n                        <a href=\\\"#\\\" class=\\\"fw-bold text-white text-hover-dark\\\">\").concat(item.content, \"</a>\\n                    </div>\\n        \\n                    <div class=\\\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\\\">\\n                        \").concat(item.progress, \"\\n                    </div>\\n                </div>        \\n                \");\n      },\n      // Remove block ui on initial draw\n      onInitialDrawComplete: function onInitialDrawComplete() {\n        handleAvatarPath();\n        var target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n        var blockUI = KTBlockUI.getInstance(target);\n        if (blockUI.isBlocked()) {\n          setTimeout(function () {\n            blockUI.release();\n          }, 1000);\n        }\n      }\n    };\n\n    // Init vis-timeline\n    var timeline = new vis.Timeline(element, items, groups, options);\n\n    // Prevent infinite loop draws\n    timeline.on(\"currentTimeTick\", function () {\n      // After fired the first time we un-subscribed\n      timeline.off(\"currentTimeTick\");\n    });\n  };\n\n  // Handle BlockUI\n  var handleBlockUI = function handleBlockUI() {\n    // Select block ui elements\n    var elements = document.querySelectorAll('[data-kt-timeline-widget-1-blockui=\"true\"]');\n\n    // Init block ui\n    elements.forEach(function (element) {\n      var blockUI = new KTBlockUI(element, {\n        overlayClass: \"bg-body\"\n      });\n      blockUI.block();\n    });\n  };\n\n  // Handle tabs visibility\n  var tabsVisibility = function tabsVisibility() {\n    var tabs = document.querySelectorAll('[data-kt-timeline-widget-1=\"tab\"]');\n    tabs.forEach(function (tab) {\n      tab.addEventListener('shown.bs.tab', function (e) {\n        // Week tab\n        if (tab.getAttribute('href') === '#kt_timeline_widget_1_tab_week') {\n          initTimelineWeek();\n        }\n\n        // Month tab\n        if (tab.getAttribute('href') === '#kt_timeline_widget_1_tab_month') {\n          initTimelineMonth();\n        }\n      });\n    });\n  };\n\n  // Handle avatar path conflict\n  var handleAvatarPath = function handleAvatarPath() {\n    var avatars = document.querySelectorAll('[data-kt-timeline-avatar-src]');\n    if (!avatars) {\n      return;\n    }\n    avatars.forEach(function (avatar) {\n      avatar.setAttribute('src', avatar.getAttribute('data-kt-timeline-avatar-src'));\n      avatar.removeAttribute('data-kt-timeline-avatar-src');\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initTimelineDay();\n      handleBlockUI();\n      tabsVisibility();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTimelineWidget1;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTimelineWidget1.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/timeline/widget-1.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/timeline/widget-2.js":
/*!*******************************************************!*\
  !*** ./resources/src/js/widgets/timeline/widget-2.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget2 = function () {\n  // Private methods\n  var handleCheckbox = function handleCheckbox() {\n    var card = document.querySelector('#kt_timeline_widget_2_card');\n    if (!card) {\n      return;\n    }\n\n    // Checkbox Handler\n    KTUtil.on(card, '[data-kt-element=\"checkbox\"]', 'change', function (e) {\n      var check = this.closest('.form-check');\n      var tr = this.closest('tr');\n      var bullet = tr.querySelector('[data-kt-element=\"bullet\"]');\n      var status = tr.querySelector('[data-kt-element=\"status\"]');\n      if (this.checked === true) {\n        check.classList.add('form-check-success');\n        bullet.classList.remove('bg-primary');\n        bullet.classList.add('bg-success');\n        status.innerText = 'Done';\n        status.classList.remove('badge-light-primary');\n        status.classList.add('badge-light-success');\n      } else {\n        check.classList.remove('form-check-success');\n        bullet.classList.remove('bg-success');\n        bullet.classList.add('bg-primary');\n        status.innerText = 'In Process';\n        status.classList.remove('badge-light-success');\n        status.classList.add('badge-light-primary');\n      }\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      handleCheckbox();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTimelineWidget2;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTimelineWidget2.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvdGltZWxpbmUvd2lkZ2V0LTIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSxJQUFJQSxpQkFBaUIsR0FBRyxZQUFZO0VBQ2hDO0VBQ0EsSUFBSUMsY0FBYyxHQUFHLFNBQWpCQSxjQUFjQSxDQUFBLEVBQWM7SUFDNUIsSUFBSUMsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyw0QkFBNEIsQ0FBQztJQUUvRCxJQUFJLENBQUNGLElBQUksRUFBRTtNQUNQO0lBQ0o7O0lBRUE7SUFDQUcsTUFBTSxDQUFDQyxFQUFFLENBQUNKLElBQUksRUFBRSw4QkFBOEIsRUFBRSxRQUFRLEVBQUUsVUFBVUssQ0FBQyxFQUFFO01BQ25FLElBQUlDLEtBQUssR0FBRyxJQUFJLENBQUNDLE9BQU8sQ0FBQyxhQUFhLENBQUM7TUFDdkMsSUFBSUMsRUFBRSxHQUFHLElBQUksQ0FBQ0QsT0FBTyxDQUFDLElBQUksQ0FBQztNQUMzQixJQUFJRSxNQUFNLEdBQUdELEVBQUUsQ0FBQ04sYUFBYSxDQUFDLDRCQUE0QixDQUFDO01BQzNELElBQUlRLE1BQU0sR0FBR0YsRUFBRSxDQUFDTixhQUFhLENBQUMsNEJBQTRCLENBQUM7TUFFM0QsSUFBSyxJQUFJLENBQUNTLE9BQU8sS0FBSyxJQUFJLEVBQUc7UUFDekJMLEtBQUssQ0FBQ00sU0FBUyxDQUFDQyxHQUFHLENBQUMsb0JBQW9CLENBQUM7UUFFekNKLE1BQU0sQ0FBQ0csU0FBUyxDQUFDRSxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ3JDTCxNQUFNLENBQUNHLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLFlBQVksQ0FBQztRQUVsQ0gsTUFBTSxDQUFDSyxTQUFTLEdBQUcsTUFBTTtRQUN6QkwsTUFBTSxDQUFDRSxTQUFTLENBQUNFLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQztRQUM5Q0osTUFBTSxDQUFDRSxTQUFTLENBQUNDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQztNQUMvQyxDQUFDLE1BQU07UUFDSFAsS0FBSyxDQUFDTSxTQUFTLENBQUNFLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztRQUU1Q0wsTUFBTSxDQUFDRyxTQUFTLENBQUNFLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDckNMLE1BQU0sQ0FBQ0csU0FBUyxDQUFDQyxHQUFHLENBQUMsWUFBWSxDQUFDO1FBRWxDSCxNQUFNLENBQUNLLFNBQVMsR0FBRyxZQUFZO1FBQy9CTCxNQUFNLENBQUNFLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLHFCQUFxQixDQUFDO1FBQzlDSixNQUFNLENBQUNFLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLHFCQUFxQixDQUFDO01BQy9DO0lBQ0osQ0FBQyxDQUFDO0VBQ04sQ0FBQzs7RUFFRDtFQUNBLE9BQU87SUFDSEcsSUFBSSxFQUFFLFNBQUFBLEtBQUEsRUFBWTtNQUNkakIsY0FBYyxFQUFFO0lBQ3BCO0VBQ0osQ0FBQztBQUNMLENBQUMsRUFBRTs7QUFFSDtBQUNBLElBQUksSUFBNkIsRUFBRTtFQUMvQmtCLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHcEIsaUJBQWlCO0FBQ3RDOztBQUVBO0FBQ0FLLE1BQU0sQ0FBQ2dCLGtCQUFrQixDQUFDLFlBQVc7RUFDakNyQixpQkFBaUIsQ0FBQ2tCLElBQUksRUFBRTtBQUM1QixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc3JjL2pzL3dpZGdldHMvdGltZWxpbmUvd2lkZ2V0LTIuanM/MDdkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbi8vIENsYXNzIGRlZmluaXRpb25cclxudmFyIEtUVGltZWxpbmVXaWRnZXQyID0gZnVuY3Rpb24gKCkge1xyXG4gICAgLy8gUHJpdmF0ZSBtZXRob2RzXHJcbiAgICB2YXIgaGFuZGxlQ2hlY2tib3ggPSBmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgY2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNrdF90aW1lbGluZV93aWRnZXRfMl9jYXJkJyk7ICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICBpZiAoIWNhcmQpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQ2hlY2tib3ggSGFuZGxlclxyXG4gICAgICAgIEtUVXRpbC5vbihjYXJkLCAnW2RhdGEta3QtZWxlbWVudD1cImNoZWNrYm94XCJdJywgJ2NoYW5nZScsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIHZhciBjaGVjayA9IHRoaXMuY2xvc2VzdCgnLmZvcm0tY2hlY2snKTtcclxuICAgICAgICAgICAgdmFyIHRyID0gdGhpcy5jbG9zZXN0KCd0cicpO1xyXG4gICAgICAgICAgICB2YXIgYnVsbGV0ID0gdHIucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cImJ1bGxldFwiXScpO1xyXG4gICAgICAgICAgICB2YXIgc3RhdHVzID0gdHIucXVlcnlTZWxlY3RvcignW2RhdGEta3QtZWxlbWVudD1cInN0YXR1c1wiXScpO1xyXG5cclxuICAgICAgICAgICAgaWYgKCB0aGlzLmNoZWNrZWQgPT09IHRydWUgKSB7XHJcbiAgICAgICAgICAgICAgICBjaGVjay5jbGFzc0xpc3QuYWRkKCdmb3JtLWNoZWNrLXN1Y2Nlc3MnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBidWxsZXQuY2xhc3NMaXN0LnJlbW92ZSgnYmctcHJpbWFyeScpO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0LmNsYXNzTGlzdC5hZGQoJ2JnLXN1Y2Nlc3MnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBzdGF0dXMuaW5uZXJUZXh0ID0gJ0RvbmUnO1xyXG4gICAgICAgICAgICAgICAgc3RhdHVzLmNsYXNzTGlzdC5yZW1vdmUoJ2JhZGdlLWxpZ2h0LXByaW1hcnknKTtcclxuICAgICAgICAgICAgICAgIHN0YXR1cy5jbGFzc0xpc3QuYWRkKCdiYWRnZS1saWdodC1zdWNjZXNzJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjaGVjay5jbGFzc0xpc3QucmVtb3ZlKCdmb3JtLWNoZWNrLXN1Y2Nlc3MnKTtcclxuXHJcbiAgICAgICAgICAgICAgICBidWxsZXQuY2xhc3NMaXN0LnJlbW92ZSgnYmctc3VjY2VzcycpO1xyXG4gICAgICAgICAgICAgICAgYnVsbGV0LmNsYXNzTGlzdC5hZGQoJ2JnLXByaW1hcnknKTtcclxuXHJcbiAgICAgICAgICAgICAgICBzdGF0dXMuaW5uZXJUZXh0ID0gJ0luIFByb2Nlc3MnO1xyXG4gICAgICAgICAgICAgICAgc3RhdHVzLmNsYXNzTGlzdC5yZW1vdmUoJ2JhZGdlLWxpZ2h0LXN1Y2Nlc3MnKTtcclxuICAgICAgICAgICAgICAgIHN0YXR1cy5jbGFzc0xpc3QuYWRkKCdiYWRnZS1saWdodC1wcmltYXJ5Jyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBQdWJsaWMgbWV0aG9kc1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7ICAgICAgICAgICBcclxuICAgICAgICAgICAgaGFuZGxlQ2hlY2tib3goKTsgICAgICAgICAgICAgXHJcbiAgICAgICAgfSAgIFxyXG4gICAgfVxyXG59KCk7XHJcblxyXG4vLyBXZWJwYWNrIHN1cHBvcnRcclxuaWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBtb2R1bGUuZXhwb3J0cyA9IEtUVGltZWxpbmVXaWRnZXQyO1xyXG59XHJcblxyXG4vLyBPbiBkb2N1bWVudCByZWFkeVxyXG5LVFV0aWwub25ET01Db250ZW50TG9hZGVkKGZ1bmN0aW9uKCkge1xyXG4gICAgS1RUaW1lbGluZVdpZGdldDIuaW5pdCgpO1xyXG59KTtcclxuXHJcblxyXG4gIl0sIm5hbWVzIjpbIktUVGltZWxpbmVXaWRnZXQyIiwiaGFuZGxlQ2hlY2tib3giLCJjYXJkIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiS1RVdGlsIiwib24iLCJlIiwiY2hlY2siLCJjbG9zZXN0IiwidHIiLCJidWxsZXQiLCJzdGF0dXMiLCJjaGVja2VkIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiaW5uZXJUZXh0IiwiaW5pdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJvbkRPTUNvbnRlbnRMb2FkZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/timeline/widget-2.js\n");

/***/ }),

/***/ "./resources/src/js/widgets/timeline/widget-4.js":
/*!*******************************************************!*\
  !*** ./resources/src/js/widgets/timeline/widget-4.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget4 = function () {\n  // Private methods\n  // Day timeline\n  var initTimelineDay = function initTimelineDay() {\n    // Detect element\n    var element = document.querySelector('#kt_timeline_widget_4_1');\n    if (!element) {\n      return;\n    }\n    if (element.innerHTML) {\n      return;\n    }\n\n    // Set variables\n    var now = Date.now();\n    var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n    // Build vis-timeline datasets\n    var groups = new vis.DataSet([{\n      id: \"research\",\n      content: \"Research\",\n      order: 1\n    }, {\n      id: \"qa\",\n      content: \"Phase 2.6 QA\",\n      order: 2\n    }, {\n      id: \"ui\",\n      content: \"UI Design\",\n      order: 3\n    }, {\n      id: \"dev\",\n      content: \"Development\",\n      order: 4\n    }]);\n    var items = new vis.DataSet([{\n      id: 1,\n      group: 'research',\n      start: now,\n      end: moment(now).add(1.5, 'hours'),\n      content: 'Meeting',\n      progress: \"60%\",\n      color: 'primary',\n      users: ['avatars/300-6.jpg', 'avatars/300-1.jpg']\n    }, {\n      id: 2,\n      group: 'qa',\n      start: moment(now).add(1, 'hours'),\n      end: moment(now).add(2, 'hours'),\n      content: 'Testing',\n      progress: \"47%\",\n      color: 'success',\n      users: ['avatars/300-2.jpg']\n    }, {\n      id: 3,\n      group: 'ui',\n      start: moment(now).add(30, 'minutes'),\n      end: moment(now).add(2.5, 'hours'),\n      content: 'Landing page',\n      progress: \"55%\",\n      color: 'danger',\n      users: ['avatars/300-5.jpg', 'avatars/300-20.jpg']\n    }, {\n      id: 4,\n      group: 'dev',\n      start: moment(now).add(1.5, 'hours'),\n      end: moment(now).add(3, 'hours'),\n      content: 'Products module',\n      progress: \"75%\",\n      color: 'info',\n      users: ['avatars/300-23.jpg', 'avatars/300-12.jpg', 'avatars/300-9.jpg']\n    }]);\n\n    // Set vis-timeline options\n    var options = {\n      zoomable: false,\n      moveable: false,\n      selectable: false,\n      // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 35\n        }\n      },\n      // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      showCurrentTime: false,\n      // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: {\n            div: ['class', 'style'],\n            img: ['data-kt-timeline-avatar-src', 'alt'],\n            a: ['href', 'class']\n          }\n        }\n      },\n      // specify a template for the items\n      template: function template(item) {\n        // Build users group\n        var users = item.users;\n        var userTemplate = '';\n        users.forEach(function (user) {\n          userTemplate += \"<div class=\\\"symbol symbol-circle symbol-25px\\\"><img data-kt-timeline-avatar-src=\\\"\".concat(rootImagePath + user, \"\\\" alt=\\\"\\\" /></div>\");\n        });\n        return \"<div class=\\\"rounded-pill bg-light-\".concat(item.color, \" d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\\\">\\n                    <div class=\\\"position-absolute rounded-pill d-block bg-\").concat(item.color, \" start-0 top-0 h-100 z-index-1\\\" style=\\\"width: \").concat(item.progress, \";\\\"></div>\\n        \\n                    <div class=\\\"d-flex align-items-center position-relative z-index-2\\\">\\n                        <div class=\\\"symbol-group symbol-hover flex-nowrap me-3\\\">\\n                            \").concat(userTemplate, \"\\n                        </div>\\n        \\n                        <a href=\\\"#\\\" class=\\\"fw-bold text-white text-hover-dark\\\">\").concat(item.content, \"</a>\\n                    </div>\\n        \\n                    <div class=\\\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\\\">\\n                        \").concat(item.progress, \"\\n                    </div>\\n                </div>        \\n                \");\n      },\n      // Remove block ui on initial draw\n      onInitialDrawComplete: function onInitialDrawComplete() {\n        handleAvatarPath();\n        var target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n        var blockUI = KTBlockUI.getInstance(target);\n        if (blockUI.isBlocked()) {\n          setTimeout(function () {\n            blockUI.release();\n          }, 1000);\n        }\n      }\n    };\n\n    // Init vis-timeline\n    var timeline = new vis.Timeline(element, items, groups, options);\n\n    // Prevent infinite loop draws\n    timeline.on(\"currentTimeTick\", function () {\n      // After fired the first time we un-subscribed\n      timeline.off(\"currentTimeTick\");\n    });\n  };\n\n  // Week timeline\n  var initTimelineWeek = function initTimelineWeek() {\n    // Detect element\n    var element = document.querySelector('#kt_timeline_widget_4_2');\n    if (!element) {\n      return;\n    }\n    if (element.innerHTML) {\n      return;\n    }\n\n    // Set variables\n    var now = Date.now();\n    var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n    // Build vis-timeline datasets\n    var groups = new vis.DataSet([{\n      id: 1,\n      content: \"Research\",\n      order: 1\n    }, {\n      id: 2,\n      content: \"Phase 2.6 QA\",\n      order: 2\n    }, {\n      id: 3,\n      content: \"UI Design\",\n      order: 3\n    }, {\n      id: 4,\n      content: \"Development\",\n      order: 4\n    }]);\n    var items = new vis.DataSet([{\n      id: 1,\n      group: 1,\n      start: now,\n      end: moment(now).add(7, 'days'),\n      content: 'Framework',\n      progress: \"71%\",\n      color: 'primary',\n      users: ['avatars/300-6.jpg', 'avatars/300-1.jpg']\n    }, {\n      id: 2,\n      group: 2,\n      start: moment(now).add(7, 'days'),\n      end: moment(now).add(14, 'days'),\n      content: 'Accessibility',\n      progress: \"84%\",\n      color: 'success',\n      users: ['avatars/300-2.jpg']\n    }, {\n      id: 3,\n      group: 3,\n      start: moment(now).add(3, 'days'),\n      end: moment(now).add(20, 'days'),\n      content: 'Microsites',\n      progress: \"69%\",\n      color: 'danger',\n      users: ['avatars/300-5.jpg', 'avatars/300-20.jpg']\n    }, {\n      id: 4,\n      group: 4,\n      start: moment(now).add(10, 'days'),\n      end: moment(now).add(21, 'days'),\n      content: 'Deployment',\n      progress: \"74%\",\n      color: 'info',\n      users: ['avatars/300-23.jpg', 'avatars/300-12.jpg', 'avatars/300-9.jpg']\n    }]);\n\n    // Set vis-timeline options\n    var options = {\n      zoomable: false,\n      moveable: false,\n      selectable: false,\n      // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 35\n        }\n      },\n      // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      showCurrentTime: false,\n      // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: {\n            div: ['class', 'style'],\n            img: ['data-kt-timeline-avatar-src', 'alt'],\n            a: ['href', 'class']\n          }\n        }\n      },\n      // specify a template for the items\n      template: function template(item) {\n        // Build users group\n        var users = item.users;\n        var userTemplate = '';\n        users.forEach(function (user) {\n          userTemplate += \"<div class=\\\"symbol symbol-circle symbol-25px\\\"><img data-kt-timeline-avatar-src=\\\"\".concat(rootImagePath + user, \"\\\" alt=\\\"\\\" /></div>\");\n        });\n        return \"<div class=\\\"rounded-pill bg-light-\".concat(item.color, \" d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\\\">\\n                    <div class=\\\"position-absolute rounded-pill d-block bg-\").concat(item.color, \" start-0 top-0 h-100 z-index-1\\\" style=\\\"width: \").concat(item.progress, \";\\\"></div>\\n        \\n                    <div class=\\\"d-flex align-items-center position-relative z-index-2\\\">\\n                        <div class=\\\"symbol-group symbol-hover flex-nowrap me-3\\\">\\n                            \").concat(userTemplate, \"\\n                        </div>\\n        \\n                        <a href=\\\"#\\\" class=\\\"fw-bold text-white text-hover-dark\\\">\").concat(item.content, \"</a>\\n                    </div>\\n        \\n                    <div class=\\\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\\\">\\n                        \").concat(item.progress, \"\\n                    </div>\\n                </div>        \\n                \");\n      },\n      // Remove block ui on initial draw\n      onInitialDrawComplete: function onInitialDrawComplete() {\n        handleAvatarPath();\n        var target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n        var blockUI = KTBlockUI.getInstance(target);\n        if (blockUI.isBlocked()) {\n          setTimeout(function () {\n            blockUI.release();\n          }, 1000);\n        }\n      }\n    };\n\n    // Init vis-timeline\n    var timeline = new vis.Timeline(element, items, groups, options);\n\n    // Prevent infinite loop draws\n    timeline.on(\"currentTimeTick\", function () {\n      // After fired the first time we un-subscribed\n      timeline.off(\"currentTimeTick\");\n    });\n  };\n\n  // Month timeline\n  var initTimelineMonth = function initTimelineMonth() {\n    // Detect element\n    var element = document.querySelector('#kt_timeline_widget_4_3');\n    if (!element) {\n      return;\n    }\n    if (element.innerHTML) {\n      return;\n    }\n\n    // Set variables\n    var now = Date.now();\n    var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n    // Build vis-timeline datasets\n    var groups = new vis.DataSet([{\n      id: \"research\",\n      content: \"Research\",\n      order: 1\n    }, {\n      id: \"qa\",\n      content: \"Phase 2.6 QA\",\n      order: 2\n    }, {\n      id: \"ui\",\n      content: \"UI Design\",\n      order: 3\n    }, {\n      id: \"dev\",\n      content: \"Development\",\n      order: 4\n    }]);\n    var items = new vis.DataSet([{\n      id: 1,\n      group: 'research',\n      start: now,\n      end: moment(now).add(2, 'months'),\n      content: 'Tags',\n      progress: \"79%\",\n      color: 'primary',\n      users: ['avatars/300-6.jpg', 'avatars/300-1.jpg']\n    }, {\n      id: 2,\n      group: 'qa',\n      start: moment(now).add(0.5, 'months'),\n      end: moment(now).add(5, 'months'),\n      content: 'Testing',\n      progress: \"64%\",\n      color: 'success',\n      users: ['avatars/300-2.jpg']\n    }, {\n      id: 3,\n      group: 'ui',\n      start: moment(now).add(2, 'months'),\n      end: moment(now).add(6.5, 'months'),\n      content: 'Media',\n      progress: \"82%\",\n      color: 'danger',\n      users: ['avatars/300-5.jpg', 'avatars/300-20.jpg']\n    }, {\n      id: 4,\n      group: 'dev',\n      start: moment(now).add(4, 'months'),\n      end: moment(now).add(7, 'months'),\n      content: 'Plugins',\n      progress: \"58%\",\n      color: 'info',\n      users: ['avatars/300-23.jpg', 'avatars/300-12.jpg', 'avatars/300-9.jpg']\n    }]);\n\n    // Set vis-timeline options\n    var options = {\n      zoomable: false,\n      moveable: false,\n      selectable: false,\n      // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 35\n        }\n      },\n      // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      showCurrentTime: false,\n      // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: {\n            div: ['class', 'style'],\n            img: ['data-kt-timeline-avatar-src', 'alt'],\n            a: ['href', 'class']\n          }\n        }\n      },\n      // specify a template for the items\n      template: function template(item) {\n        // Build users group\n        var users = item.users;\n        var userTemplate = '';\n        users.forEach(function (user) {\n          userTemplate += \"<div class=\\\"symbol symbol-circle symbol-25px\\\"><img data-kt-timeline-avatar-src=\\\"\".concat(rootImagePath + user, \"\\\" alt=\\\"\\\" /></div>\");\n        });\n        return \"<div class=\\\"rounded-pill bg-light-\".concat(item.color, \" d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\\\">\\n                    <div class=\\\"position-absolute rounded-pill d-block bg-\").concat(item.color, \" start-0 top-0 h-100 z-index-1\\\" style=\\\"width: \").concat(item.progress, \";\\\"></div>\\n        \\n                    <div class=\\\"d-flex align-items-center position-relative z-index-2\\\">\\n                        <div class=\\\"symbol-group symbol-hover flex-nowrap me-3\\\">\\n                            \").concat(userTemplate, \"\\n                        </div>\\n        \\n                        <a href=\\\"#\\\" class=\\\"fw-bold text-white text-hover-dark\\\">\").concat(item.content, \"</a>\\n                    </div>\\n        \\n                    <div class=\\\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\\\">\\n                        \").concat(item.progress, \"\\n                    </div>\\n                </div>        \\n                \");\n      },\n      // Remove block ui on initial draw\n      onInitialDrawComplete: function onInitialDrawComplete() {\n        handleAvatarPath();\n        var target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n        var blockUI = KTBlockUI.getInstance(target);\n        if (blockUI.isBlocked()) {\n          setTimeout(function () {\n            blockUI.release();\n          }, 1000);\n        }\n      }\n    };\n\n    // Init vis-timeline\n    var timeline = new vis.Timeline(element, items, groups, options);\n\n    // Prevent infinite loop draws\n    timeline.on(\"currentTimeTick\", function () {\n      // After fired the first time we un-subscribed\n      timeline.off(\"currentTimeTick\");\n    });\n  };\n\n  // 2022 timeline\n  var initTimeline2022 = function initTimeline2022() {\n    // Detect element\n    var element = document.querySelector('#kt_timeline_widget_4_4');\n    if (!element) {\n      return;\n    }\n    if (element.innerHTML) {\n      return;\n    }\n\n    // Set variables\n    var now = Date.now();\n    var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n    // Build vis-timeline datasets\n    var groups = new vis.DataSet([{\n      id: \"research\",\n      content: \"Research\",\n      order: 1\n    }, {\n      id: \"qa\",\n      content: \"Phase 2.6 QA\",\n      order: 2\n    }, {\n      id: \"ui\",\n      content: \"UI Design\",\n      order: 3\n    }, {\n      id: \"dev\",\n      content: \"Development\",\n      order: 4\n    }]);\n    var items = new vis.DataSet([{\n      id: 1,\n      group: 'research',\n      start: now,\n      end: moment(now).add(2, 'months'),\n      content: 'Tags',\n      progress: \"51%\",\n      color: 'primary',\n      users: ['avatars/300-7.jpg', 'avatars/300-2.jpg']\n    }, {\n      id: 2,\n      group: 'qa',\n      start: moment(now).add(0.5, 'months'),\n      end: moment(now).add(5, 'months'),\n      content: 'Testing',\n      progress: \"64%\",\n      color: 'success',\n      users: ['avatars/300-2.jpg']\n    }, {\n      id: 3,\n      group: 'ui',\n      start: moment(now).add(2, 'months'),\n      end: moment(now).add(6.5, 'months'),\n      content: 'Media',\n      progress: \"54%\",\n      color: 'danger',\n      users: ['avatars/300-5.jpg', 'avatars/300-21.jpg']\n    }, {\n      id: 4,\n      group: 'dev',\n      start: moment(now).add(4, 'months'),\n      end: moment(now).add(7, 'months'),\n      content: 'Plugins',\n      progress: \"348%\",\n      color: 'info',\n      users: ['avatars/300-3.jpg', 'avatars/300-11.jpg', 'avatars/300-13.jpg']\n    }]);\n\n    // Set vis-timeline options\n    var options = {\n      zoomable: false,\n      moveable: false,\n      selectable: false,\n      // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 35\n        }\n      },\n      // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      showCurrentTime: false,\n      // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n      xss: {\n        disabled: false,\n        filterOptions: {\n          whiteList: {\n            div: ['class', 'style'],\n            img: ['data-kt-timeline-avatar-src', 'alt'],\n            a: ['href', 'class']\n          }\n        }\n      },\n      // specify a template for the items\n      template: function template(item) {\n        // Build users group\n        var users = item.users;\n        var userTemplate = '';\n        users.forEach(function (user) {\n          userTemplate += \"<div class=\\\"symbol symbol-circle symbol-25px\\\"><img data-kt-timeline-avatar-src=\\\"\".concat(rootImagePath + user, \"\\\" alt=\\\"\\\" /></div>\");\n        });\n        return \"<div class=\\\"rounded-pill bg-light-\".concat(item.color, \" d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\\\">\\n                    <div class=\\\"position-absolute rounded-pill d-block bg-\").concat(item.color, \" start-0 top-0 h-100 z-index-1\\\" style=\\\"width: \").concat(item.progress, \";\\\"></div>\\n        \\n                    <div class=\\\"d-flex align-items-center position-relative z-index-2\\\">\\n                        <div class=\\\"symbol-group symbol-hover flex-nowrap me-3\\\">\\n                            \").concat(userTemplate, \"\\n                        </div>\\n        \\n                        <a href=\\\"#\\\" class=\\\"fw-bold text-white text-hover-dark\\\">\").concat(item.content, \"</a>\\n                    </div>\\n        \\n                    <div class=\\\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\\\">\\n                        \").concat(item.progress, \"\\n                    </div>\\n                </div>        \\n                \");\n      },\n      // Remove block ui on initial draw\n      onInitialDrawComplete: function onInitialDrawComplete() {\n        handleAvatarPath();\n        var target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n        var blockUI = KTBlockUI.getInstance(target);\n        if (blockUI.isBlocked()) {\n          setTimeout(function () {\n            blockUI.release();\n          }, 1000);\n        }\n      }\n    };\n\n    // Init vis-timeline\n    var timeline = new vis.Timeline(element, items, groups, options);\n\n    // Prevent infinite loop draws\n    timeline.on(\"currentTimeTick\", function () {\n      // After fired the first time we un-subscribed\n      timeline.off(\"currentTimeTick\");\n    });\n  };\n  // Handle BlockUI\n  var handleBlockUI = function handleBlockUI() {\n    // Select block ui elements\n    var elements = document.querySelectorAll('[data-kt-timeline-widget-4-blockui=\"true\"]');\n\n    // Init block ui\n    elements.forEach(function (element) {\n      var blockUI = new KTBlockUI(element, {\n        overlayClass: \"bg-body\"\n      });\n      blockUI.block();\n    });\n  };\n\n  // Handle tabs visibility\n  var tabsVisibility = function tabsVisibility() {\n    var tabs = document.querySelectorAll('[data-kt-timeline-widget-4=\"tab\"]');\n    tabs.forEach(function (tab) {\n      tab.addEventListener('shown.bs.tab', function (e) {\n        // Week tab\n        if (tab.getAttribute('href') === '#kt_timeline_widget_4_tab_week') {\n          initTimelineWeek();\n        }\n\n        // Month tab\n        if (tab.getAttribute('href') === '#kt_timeline_widget_4_tab_month') {\n          initTimelineMonth();\n        }\n\n        // 2022 tab\n        if (tab.getAttribute('href') === '#kt_timeline_widget_4_tab_2022') {\n          initTimeline2022();\n        }\n      });\n    });\n  };\n\n  // Handle avatar path conflict\n  var handleAvatarPath = function handleAvatarPath() {\n    var avatars = document.querySelectorAll('[data-kt-timeline-avatar-src]');\n    if (!avatars) {\n      return;\n    }\n    avatars.forEach(function (avatar) {\n      avatar.setAttribute('src', avatar.getAttribute('data-kt-timeline-avatar-src'));\n      avatar.removeAttribute('data-kt-timeline-avatar-src');\n    });\n  };\n\n  // Public methods\n  return {\n    init: function init() {\n      initTimelineDay();\n      handleBlockUI();\n      tabsVisibility();\n    }\n  };\n}();\n\n// Webpack support\nif (true) {\n  module.exports = KTTimelineWidget4;\n}\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTTimelineWidget4.init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/src/js/widgets/timeline/widget-4.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-1.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-10.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-12.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-13.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-17.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-4.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-6.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-8.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/cards/widget-9.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-1.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-10.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-11.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-12.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-13.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-14.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-15.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-16.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-17.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-18.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-19.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-2.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-20.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-21.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-22.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-23.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-24.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-25.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-26.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-27.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-28.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-29.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-3.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-30.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-31.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-32.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-33.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-34.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-35.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-4.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-5.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-6.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-7.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-8.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/charts/widget-9.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/forms/widget-1.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/lists/widget-24.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/maps/widget-1.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/players/widget-1.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/players/widget-2.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/sliders/widget-1.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/sliders/widget-3.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/tables/widget-14.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/tables/widget-3.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/tables/widget-4.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/tables/widget-5.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/timeline/widget-1.js");
/******/ 	__webpack_require__("./resources/src/js/widgets/timeline/widget-2.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/src/js/widgets/timeline/widget-4.js");
/******/ 	
/******/ })()
;